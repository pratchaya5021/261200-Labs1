<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="StudySettings">
    <StudyTaskManager>
      <option name="VERSION" value="16" />
      <option name="myUserTests">
        <map />
      </option>
      <option name="course">
        <EduCourse>
          <option name="authors">
            <list />
          </option>
          <option name="compatible" value="true" />
          <option name="courseMode" value="Study" />
          <option name="createDate" value="1565208866000" />
          <option name="customPresentableName" />
          <option name="description" value="Chiang Mai University's 261200 lab assignments" />
          <option name="environment" value="" />
          <option name="id" value="56570" />
          <option name="index" value="-1" />
          <option name="instructors">
            <list />
          </option>
          <option name="language" value="JAVA" />
          <option name="languageCode" value="en" />
          <option name="name" value="261200 Labs" />
          <option name="public" value="true" />
          <option name="sectionIds">
            <list />
          </option>
          <option name="type" value="pycharm11 JAVA" />
          <option name="updateDate" value="1566707469000" />
          <option name="items">
            <list>
              <Section>
                <option name="courseId" value="56570" />
                <option name="customPresentableName" />
                <option name="id" value="91196" />
                <option name="index" value="1" />
                <option name="name" value="01-Intro" />
                <option name="position" value="1" />
                <option name="updateDate" value="1565772103000" />
                <option name="items">
                  <list>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="247346" />
                      <option name="index" value="1" />
                      <option name="name" value="Lab01" />
                      <option name="updateDate" value="1565772103000" />
                      <option name="unitId" value="220038" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Overview of Sudoku" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;h1&gt;Sudoku solution verifier&lt;/h1&gt;&#10;&lt;p&gt;&#10;Sudoku is a number-placement puzzle.  The goal is to fill a $9\times 9$ grid with digits so that each row, each column, and each of the nine $3\times 3$ boxes (as shown in the diagram below) contain all of the digits from 1 to 9.  In this problem, we will write a program that verifies the correctness of a solution to a Sudoku puzzle.&#10;    &lt;img src=&quot;sudoku.png&quot;&gt;&#10;&lt;/p&gt;&#10;&#10;The verification steps are as follows:&#10;&lt;ul&gt;&#10;    &lt;li&gt;Verify whether each row is correct.  If not, display the row number of the first incorrect row.&lt;/li&gt;&#10;    &lt;li&gt;If all rows are correct, verify whether each column is correct.  If not, display the column number of the first incorrect column.&lt;/li&gt;&#10;    &lt;li&gt;If all rows and columns are correct, verify whether each box is correct.  If not, display the box number of the first incorrect box.&lt;/li&gt;&#10;&lt;/ul&gt;&#10;If no rows, columns, or boxes violate the correctness conditions, we will declare that the solution is correct.  Consider the following examples:&#10;&lt;ul&gt;&#10;    &lt;li&gt;This grid has duplicate 8s in the second row, so the program should output that row 2 is incorrect, even if row 6 also has duplicate 1s.&#10;        \[&#10;        \begin{array}{c|c|c||c|c|c||c|c|c}&#10;        1 &amp;amp; 7 &amp;amp; 2 &amp;amp; 9 &amp;amp; 8 &amp;amp; 3 &amp;amp; 5 &amp;amp; 6 &amp;amp; 4 \\\hline&#10;        4 &amp;amp; 6 &amp;amp; \color{red}{8} &amp;amp; 5 &amp;amp; 7 &amp;amp; 2 &amp;amp; 9 &amp;amp; \color{red} 8 &amp;amp; 3 \\\hline&#10;        5 &amp;amp; 3 &amp;amp; 9 &amp;amp; 6 &amp;amp; 1 &amp;amp; 4 &amp;amp; 8 &amp;amp; 7 &amp;amp; 2 \\\hline\hline&#10;        2 &amp;amp; 1 &amp;amp; 3 &amp;amp; 8 &amp;amp; 5 &amp;amp; 6 &amp;amp; 4 &amp;amp; 9 &amp;amp; 7 \\\hline&#10;        8 &amp;amp; 4 &amp;amp; 6 &amp;amp; 3 &amp;amp; 9 &amp;amp; 7 &amp;amp; 2 &amp;amp; 5 &amp;amp; 1 \\\hline&#10;        9 &amp;amp; 5 &amp;amp; 7 &amp;amp; 2 &amp;amp; 4 &amp;amp; 1 &amp;amp; 3 &amp;amp; 1 &amp;amp; 6 \\\hline\hline&#10;        6 &amp;amp; 8 &amp;amp; 4 &amp;amp; 7 &amp;amp; 2 &amp;amp; 5 &amp;amp; 1 &amp;amp; 3 &amp;amp; 9 \\\hline&#10;        3 &amp;amp; 9 &amp;amp; 1 &amp;amp; 4 &amp;amp; 6 &amp;amp; 8 &amp;amp; 7 &amp;amp; 2 &amp;amp; 5 \\\hline&#10;        7 &amp;amp; 2 &amp;amp; 5 &amp;amp; 1 &amp;amp; 3 &amp;amp; 9 &amp;amp; 6 &amp;amp; 4 &amp;amp; 8&#10;        \end{array}&#10;        \]&#10;    &lt;/li&gt;&#10;    &lt;li&gt;This grid has duplicate 5s in the seventh column, so the program should output that column 7 is incorrect, even if column 9 also has duplicate 7s.&#10;        \[&#10;        \begin{array}{c|c|c||c|c|c||c|c|c}&#10;        1 &amp;amp; 7 &amp;amp; 2 &amp;amp; 9 &amp;amp; 8 &amp;amp; 3 &amp;amp; \color{red}5 &amp;amp; 6 &amp;amp; 4 \\\hline&#10;        4 &amp;amp; 6 &amp;amp; 8 &amp;amp; 5 &amp;amp; 7 &amp;amp; 2 &amp;amp; 9 &amp;amp; 1 &amp;amp; 3 \\\hline&#10;        5 &amp;amp; 3 &amp;amp; 9 &amp;amp; 6 &amp;amp; 1 &amp;amp; 4 &amp;amp; 8 &amp;amp; 7 &amp;amp; 2 \\\hline\hline&#10;        2 &amp;amp; 1 &amp;amp; 3 &amp;amp; 8 &amp;amp; 5 &amp;amp; 6 &amp;amp; 4 &amp;amp; 9 &amp;amp; 7 \\\hline&#10;        8 &amp;amp; 4 &amp;amp; 6 &amp;amp; 3 &amp;amp; 9 &amp;amp; 7 &amp;amp; 2 &amp;amp; 5 &amp;amp; 1 \\\hline&#10;        9 &amp;amp; 5 &amp;amp; 7 &amp;amp; 2 &amp;amp; 4 &amp;amp; 1 &amp;amp; 3 &amp;amp; 8 &amp;amp; 6 \\\hline\hline&#10;        6 &amp;amp; 8 &amp;amp; 4 &amp;amp; 7 &amp;amp; 2 &amp;amp; 5 &amp;amp; 1 &amp;amp; 3 &amp;amp; 9 \\\hline&#10;        3 &amp;amp; 9 &amp;amp; 1 &amp;amp; 4 &amp;amp; 6 &amp;amp; 8 &amp;amp; \color{red}5 &amp;amp; 2 &amp;amp; 7 \\\hline&#10;        7 &amp;amp; 2 &amp;amp; 5 &amp;amp; 1 &amp;amp; 3 &amp;amp; 9 &amp;amp; 6 &amp;amp; 4 &amp;amp; 8&#10;        \end{array}&#10;        \]&#10;    &lt;/li&gt;&#10;    &lt;li&gt;This grid has duplicate 2s in the fourth box, so the program should output that box 4 is incorrect, even if box 7 also has duplicate 9s.&#10;        \[&#10;        \begin{array}{c|c|c||c|c|c||c|c|c}&#10;        1 &amp;amp; 7 &amp;amp; 2 &amp;amp; 9 &amp;amp; 8 &amp;amp; 3 &amp;amp; 5 &amp;amp; 6 &amp;amp; 4 \\\hline&#10;        4 &amp;amp; 6 &amp;amp; 8 &amp;amp; 5 &amp;amp; 7 &amp;amp; 2 &amp;amp; 9 &amp;amp; 1 &amp;amp; 3 \\\hline&#10;        5 &amp;amp; 3 &amp;amp; 9 &amp;amp; 6 &amp;amp; 1 &amp;amp; 4 &amp;amp; 8 &amp;amp; 7 &amp;amp; 2 \\\hline\hline&#10;        7 &amp;amp; \color{red}2 &amp;amp; 5 &amp;amp; 1 &amp;amp; 3 &amp;amp; 9 &amp;amp; 6 &amp;amp; 4 &amp;amp; 8 \\\hline&#10;        \color{red}2 &amp;amp; 1 &amp;amp; 3 &amp;amp; 8 &amp;amp; 5 &amp;amp; 6 &amp;amp; 4 &amp;amp; 9 &amp;amp; 7 \\\hline&#10;        8 &amp;amp; 4 &amp;amp; 6 &amp;amp; 3 &amp;amp; 9 &amp;amp; 7 &amp;amp; 2 &amp;amp; 5 &amp;amp; 1 \\\hline\hline&#10;        9 &amp;amp; 5 &amp;amp; 7 &amp;amp; 2 &amp;amp; 4 &amp;amp; 1 &amp;amp; 3 &amp;amp; 8 &amp;amp; 6 \\\hline&#10;        6 &amp;amp; 8 &amp;amp; 4 &amp;amp; 7 &amp;amp; 2 &amp;amp; 5 &amp;amp; 1 &amp;amp; 3 &amp;amp; 9 \\\hline&#10;        3 &amp;amp; 9 &amp;amp; 1 &amp;amp; 4 &amp;amp; 6 &amp;amp; 8 &amp;amp; 7 &amp;amp; 2 &amp;amp; 5&#10;        \end{array}&#10;        \]&#10;    &lt;/li&gt;&#10;    &lt;li&gt;This grid is a completely valid solution to a Sudoku puzzle.&#10;        \[&#10;        \begin{array}{c|c|c||c|c|c||c|c|c}&#10;        1 &amp;amp; 7 &amp;amp; 2 &amp;amp; 9 &amp;amp; 8 &amp;amp; 3 &amp;amp; 5 &amp;amp; 6 &amp;amp; 4 \\\hline&#10;        4 &amp;amp; 6 &amp;amp; 8 &amp;amp; 5 &amp;amp; 7 &amp;amp; 2 &amp;amp; 9 &amp;amp; 1 &amp;amp; 3 \\\hline&#10;        5 &amp;amp; 3 &amp;amp; 9 &amp;amp; 6 &amp;amp; 1 &amp;amp; 4 &amp;amp; 8 &amp;amp; 7 &amp;amp; 2 \\\hline\hline&#10;        2 &amp;amp; 1 &amp;amp; 3 &amp;amp; 8 &amp;amp; 5 &amp;amp; 6 &amp;amp; 4 &amp;amp; 9 &amp;amp; 7 \\\hline&#10;        8 &amp;amp; 4 &amp;amp; 6 &amp;amp; 3 &amp;amp; 9 &amp;amp; 7 &amp;amp; 2 &amp;amp; 5 &amp;amp; 1 \\\hline&#10;        9 &amp;amp; 5 &amp;amp; 7 &amp;amp; 2 &amp;amp; 4 &amp;amp; 1 &amp;amp; 3 &amp;amp; 8 &amp;amp; 6 \\\hline\hline&#10;        6 &amp;amp; 8 &amp;amp; 4 &amp;amp; 7 &amp;amp; 2 &amp;amp; 5 &amp;amp; 1 &amp;amp; 3 &amp;amp; 9 \\\hline&#10;        3 &amp;amp; 9 &amp;amp; 1 &amp;amp; 4 &amp;amp; 6 &amp;amp; 8 &amp;amp; 7 &amp;amp; 2 &amp;amp; 5 \\\hline&#10;        7 &amp;amp; 2 &amp;amp; 5 &amp;amp; 1 &amp;amp; 3 &amp;amp; 9 &amp;amp; 6 &amp;amp; 4 &amp;amp; 8&#10;        \end{array}&#10;        \]&#10;    &lt;/li&gt;&#10;&lt;/ul&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="789477" />
                            <option name="index" value="1" />
                            <option name="name" value="Overview of Sudoku" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.java" />
                                      <option name="text" value="// No code to write for this task.  See task description on the right.&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="sudoku.png">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="sudoku.png" />
                                      <option name="text" value="" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565608270000" />
                          </TheoryTask>
                          <ChoiceTask>
                            <option name="choiceOptions">
                              <list>
                                <ChoiceOption>
                                  <option name="status" value="UNKNOWN" />
                                  <option name="text" value="Row 3 is incorrect" />
                                </ChoiceOption>
                                <ChoiceOption>
                                  <option name="status" value="UNKNOWN" />
                                  <option name="text" value="Row 4 is incorrect" />
                                </ChoiceOption>
                                <ChoiceOption>
                                  <option name="status" value="UNKNOWN" />
                                  <option name="text" value="The solution is correct" />
                                </ChoiceOption>
                              </list>
                            </option>
                            <option name="customPresentableName" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;  &lt;h2&gt;Sudoku quiz&lt;/h2&gt; Suppose we consider a variant of the Sudoku puzzle, where the grid is of size $4\times 4$. Consider the following grid: \[ \begin{array}{c|c||c|c} 1 &amp;amp; 2 &amp;amp; 3 &amp;amp; 4 \\\hline 3 &amp;amp; 4 &amp;amp; 1 &amp;amp; 2 \\\hline\hline 2 &amp;amp; 3 &amp;amp; 2 &amp;amp; 1 \\\hline 4 &amp;amp; 1 &amp;amp; 4 &amp;amp; 3 \end{array} \] What should be the expected output from the solution verifier? &#10;  &lt;div class=&quot;hint&quot;&gt;&#10;    The verification steps are as follows: &#10;   &lt;ul&gt; &#10;    &lt;li&gt;Verify whether each row is correct. If not, display the row number of the first incorrect row.&lt;/li&gt; &#10;    &lt;li&gt;If all rows are correct, verify whether each column is correct. If not, display the column number of the first incorrect column.&lt;/li&gt; &#10;    &lt;li&gt;If all rows and columns are correct, verify whether each box is correct. If not, display the box number of the first incorrect box.&lt;/li&gt; &#10;   &lt;/ul&gt; If no rows, columns, or boxes violate the correctness conditions, we will declare that the solution is correct. &#10;  &lt;/div&gt;&#10; &lt;/body&gt;&#10;&lt;/html&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="789479" />
                            <option name="index" value="2" />
                            <option name="messageCorrect" value="Congratulations!" />
                            <option name="messageIncorrect" value="Incorrect solution" />
                            <option name="multipleChoice" value="true" />
                            <option name="name" value="Quiz" />
                            <option name="record" value="-1" />
                            <option name="selectedVariants">
                              <list>
                                <option value="0" />
                              </list>
                            </option>
                            <option name="status" value="Unchecked" />
                            <option name="files">
                              <map>
                                <entry key="src/Main.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Main.java" />
                                      <option name="text" value="// you can experiment here, it won't be checked&#10;&#10;class Task {&#10;  public static void main(String[] args) {&#10;    // put your code here&#10;  }&#10;}&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565323488000" />
                          </ChoiceTask>
                          <ChoiceTask>
                            <option name="choiceOptions">
                              <list>
                                <ChoiceOption>
                                  <option name="status" value="UNKNOWN" />
                                  <option name="text" value="Column 2 is incorrect" />
                                </ChoiceOption>
                                <ChoiceOption>
                                  <option name="status" value="UNKNOWN" />
                                  <option name="text" value="Column 3 is incorrect" />
                                </ChoiceOption>
                                <ChoiceOption>
                                  <option name="status" value="UNKNOWN" />
                                  <option name="text" value="Box 1 is incorrect" />
                                </ChoiceOption>
                                <ChoiceOption>
                                  <option name="status" value="UNKNOWN" />
                                  <option name="text" value="Box 2 is incorrect" />
                                </ChoiceOption>
                                <ChoiceOption>
                                  <option name="status" value="UNKNOWN" />
                                  <option name="text" value="The solution is correct" />
                                </ChoiceOption>
                              </list>
                            </option>
                            <option name="customPresentableName" value="Quiz" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;  &lt;h2&gt;Sudoku quiz&lt;/h2&gt; Suppose we consider a variant of the Sudoku puzzle, where the grid is of size $4\times 4$. Consider the following grid: \[ \begin{array}{c|c||c|c} 1 &amp;amp; 2 &amp;amp; 3 &amp;amp; 4 \\\hline 3 &amp;amp; 1 &amp;amp; 4 &amp;amp; 2 \\\hline\hline 2 &amp;amp; 3 &amp;amp; 4 &amp;amp; 1 \\\hline 4 &amp;amp; 1 &amp;amp; 2 &amp;amp; 3 \end{array} \] What should be the expected output from the solution verifier? &#10;  &lt;div class=&quot;hint&quot;&gt;&#10;    The verification steps are as follows: &#10;   &lt;ul&gt; &#10;    &lt;li&gt;Verify whether each row is correct. If not, display the row number of the first incorrect row.&lt;/li&gt; &#10;    &lt;li&gt;If all rows are correct, verify whether each column is correct. If not, display the column number of the first incorrect column.&lt;/li&gt; &#10;    &lt;li&gt;If all rows and columns are correct, verify whether each box is correct. If not, display the box number of the first incorrect box.&lt;/li&gt; &#10;   &lt;/ul&gt; If no rows, columns, or boxes violate the correctness conditions, we will declare that the solution is correct. &#10;  &lt;/div&gt;&#10; &lt;/body&gt;&#10;&lt;/html&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="789480" />
                            <option name="index" value="3" />
                            <option name="messageCorrect" value="Congratulations!" />
                            <option name="messageIncorrect" value="Incorrect solution" />
                            <option name="multipleChoice" value="true" />
                            <option name="name" value="Quiz (1)" />
                            <option name="record" value="-1" />
                            <option name="selectedVariants">
                              <list />
                            </option>
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Main.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Main.java" />
                                      <option name="text" value="// you can experiment here, it won't be checked&#10;&#10;class Task {&#10;  public static void main(String[] args) {&#10;    // put your code here&#10;  }&#10;}&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565323494000" />
                          </ChoiceTask>
                          <ChoiceTask>
                            <option name="choiceOptions">
                              <list>
                                <ChoiceOption>
                                  <option name="status" value="UNKNOWN" />
                                  <option name="text" value="Box 1 is incorrect" />
                                </ChoiceOption>
                                <ChoiceOption>
                                  <option name="status" value="UNKNOWN" />
                                  <option name="text" value="Box 2 is incorrect" />
                                </ChoiceOption>
                                <ChoiceOption>
                                  <option name="status" value="UNKNOWN" />
                                  <option name="text" value="Box 3 is incorrect" />
                                </ChoiceOption>
                                <ChoiceOption>
                                  <option name="status" value="UNKNOWN" />
                                  <option name="text" value="Box 4 is incorrect" />
                                </ChoiceOption>
                                <ChoiceOption>
                                  <option name="status" value="UNKNOWN" />
                                  <option name="text" value="The solution is correct" />
                                </ChoiceOption>
                              </list>
                            </option>
                            <option name="customPresentableName" value="Quiz" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;  &lt;h2&gt;Sudoku quiz&lt;/h2&gt; Suppose we consider a variant of the Sudoku puzzle, where the grid is of size $4\times 4$. Consider the following grid: \[ \begin{array}{c|c||c|c} 3 &amp;amp; 4 &amp;amp; 1 &amp;amp; 2 \\\hline 2 &amp;amp; 3 &amp;amp; 4 &amp;amp; 1 \\\hline\hline 4 &amp;amp; 1 &amp;amp; 2 &amp;amp; 3 \\\hline 1 &amp;amp; 2 &amp;amp; 3 &amp;amp; 4 \end{array} \] What should be the expected output from the solution verifier? &#10;  &lt;div class=&quot;hint&quot;&gt;&#10;    The verification steps are as follows: &#10;   &lt;ul&gt; &#10;    &lt;li&gt;Verify whether each row is correct. If not, display the row number of the first incorrect row.&lt;/li&gt; &#10;    &lt;li&gt;If all rows are correct, verify whether each column is correct. If not, display the column number of the first incorrect column.&lt;/li&gt; &#10;    &lt;li&gt;If all rows and columns are correct, verify whether each box is correct. If not, display the box number of the first incorrect box.&lt;/li&gt; &#10;   &lt;/ul&gt; If no rows, columns, or boxes violate the correctness conditions, we will declare that the solution is correct. &#10;  &lt;/div&gt;&#10; &lt;/body&gt;&#10;&lt;/html&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="789481" />
                            <option name="index" value="4" />
                            <option name="messageCorrect" value="Congratulations!" />
                            <option name="messageIncorrect" value="Incorrect solution" />
                            <option name="multipleChoice" value="true" />
                            <option name="name" value="Quiz (2)" />
                            <option name="record" value="-1" />
                            <option name="selectedVariants">
                              <list />
                            </option>
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Main.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Main.java" />
                                      <option name="text" value="// you can experiment here, it won't be checked&#10;&#10;class Task {&#10;  public static void main(String[] args) {&#10;    // put your code here&#10;  }&#10;}&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565323503000" />
                          </ChoiceTask>
                          <ChoiceTask>
                            <option name="choiceOptions">
                              <list>
                                <ChoiceOption>
                                  <option name="status" value="UNKNOWN" />
                                  <option name="text" value="Row 3 is incorrect" />
                                </ChoiceOption>
                                <ChoiceOption>
                                  <option name="status" value="UNKNOWN" />
                                  <option name="text" value="Row 4 is incorrect" />
                                </ChoiceOption>
                                <ChoiceOption>
                                  <option name="status" value="UNKNOWN" />
                                  <option name="text" value="Column 2 is incorrect" />
                                </ChoiceOption>
                                <ChoiceOption>
                                  <option name="status" value="UNKNOWN" />
                                  <option name="text" value="Column 3 is incorrect" />
                                </ChoiceOption>
                                <ChoiceOption>
                                  <option name="status" value="UNKNOWN" />
                                  <option name="text" value="Box 1 is incorrect" />
                                </ChoiceOption>
                                <ChoiceOption>
                                  <option name="status" value="UNKNOWN" />
                                  <option name="text" value="Box 2 is incorrect" />
                                </ChoiceOption>
                                <ChoiceOption>
                                  <option name="status" value="UNKNOWN" />
                                  <option name="text" value="The solution is correct" />
                                </ChoiceOption>
                              </list>
                            </option>
                            <option name="customPresentableName" value="Quiz" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;  &lt;h2&gt;Sudoku quiz&lt;/h2&gt; Suppose we consider a variant of the Sudoku puzzle, where the grid is of size $4\times 4$. Consider the following grid: \[ \begin{array}{c|c||c|c} 1 &amp;amp; 2 &amp;amp; 3 &amp;amp; 4 \\\hline 3 &amp;amp; 4 &amp;amp; 1 &amp;amp; 2 \\\hline\hline 2 &amp;amp; 3 &amp;amp; 4 &amp;amp; 1 \\\hline 4 &amp;amp; 1 &amp;amp; 2 &amp;amp; 3 \end{array} \] What should be the expected output from the solution verifier? &#10;  &lt;div class=&quot;hint&quot;&gt;&#10;    The verification steps are as follows: &#10;   &lt;ul&gt; &#10;    &lt;li&gt;Verify whether each row is correct. If not, display the row number of the first incorrect row.&lt;/li&gt; &#10;    &lt;li&gt;If all rows are correct, verify whether each column is correct. If not, display the column number of the first incorrect column.&lt;/li&gt; &#10;    &lt;li&gt;If all rows and columns are correct, verify whether each box is correct. If not, display the box number of the first incorrect box.&lt;/li&gt; &#10;   &lt;/ul&gt; If no rows, columns, or boxes violate the correctness conditions, we will declare that the solution is correct. &#10;  &lt;/div&gt;&#10; &lt;/body&gt;&#10;&lt;/html&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="789482" />
                            <option name="index" value="5" />
                            <option name="messageCorrect" value="Congratulations!" />
                            <option name="messageIncorrect" value="Incorrect solution" />
                            <option name="multipleChoice" value="false" />
                            <option name="name" value="Quiz (3)" />
                            <option name="record" value="-1" />
                            <option name="selectedVariants">
                              <list />
                            </option>
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Main.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Main.java" />
                                      <option name="text" value="// you can experiment here, it won't be checked&#10;&#10;class Task {&#10;  public static void main(String[] args) {&#10;    // put your code here&#10;  }&#10;}&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565323509000" />
                          </ChoiceTask>
                          <EduTask>
                            <option name="customPresentableName" value="Programming 1" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;h2&gt;Preparing for verification&lt;/h2&gt;&#10;&lt;p&gt;The first part of this programming exercise asks you to check whether an array of length 9 contains all numbers from 1 to 9, each appearing exactly once.&lt;/p&gt;&#10;&#10;&lt;p&gt;Complete the method &lt;code&gt;hasOneThroughNine()&lt;/code&gt; in class &lt;code&gt;OneThruNine&lt;/code&gt;, by filling in parts that say &lt;code&gt;/* TODO */&lt;/code&gt;, so that it returns &lt;code&gt;true&lt;/code&gt; if the given array of length 9 contains every number from 1 to 9, and &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;&#10;&#10;&lt;p&gt;You may assume that the array argument is always of length 9.  In fact, the provided code already checks this for you.  You may further assume that every number in the array is always in range [1, 9].&lt;/p&gt;&#10;&#10;&lt;p&gt;The method works by keeping track of the numbers that we have seen in appropriate slots of the &lt;code&gt;present&lt;/code&gt; array.  If any number appears more than once, the array slot would have been set to &lt;code&gt;true&lt;/code&gt;, and the method can immediately return &lt;code&gt;false&lt;/code&gt;.  On the other hand, if any number does not appear in the array, that means some other number must appear more than once, because we know that the array is of length 9, and all numbers in the array are in range [1, 9].&lt;/p&gt;&#10;&#10;&lt;div class=&quot;hint&quot;&gt;&#10;  Java arrays are like C++ arrays, where the first element is at index 0.  If you try to access an array element that is out of range, you will see an error called &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt;.&#10;&lt;/div&gt;&#10;&#10;&lt;div class=&quot;hint&quot;&gt;&#10;  The &lt;i&gt;enhanced &lt;code&gt;for &lt;/code&gt; loop&lt;/i&gt; goes through each element in the array, starting from the first element.  For example, the following loop prints &lt;code&gt;2 6 1 2 0 0 &lt;/code&gt; to the console:&#10;  &lt;pre&gt;&lt;code&gt;&#10;    int[] arr = {2, 6, 1, 2, 0, 0};&#10;    for (int x : arr)&#10;      System.out.print(x + &quot; &quot;);&#10;  &lt;/code&gt;&lt;/pre&gt;&#10;&lt;/div&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="792941" />
                            <option name="index" value="6" />
                            <option name="name" value="Programming 1" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="test/Tests.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/Tests.java" />
                                      <option name="text" value="import org.junit.Assert;&#10;import org.junit.Test;&#10;&#10;import java.io.PrintWriter;&#10;import java.io.StringWriter;&#10;import java.util.Random;&#10;&#10;public class Tests {&#10;    private Random r = new Random(2547);&#10;&#10;    private static String printArray(int[] arr) {&#10;        StringBuilder sb = new StringBuilder(&quot;[&quot;);&#10;        boolean first = true;&#10;        for (int x : arr) {&#10;            if (!first) sb.append(&quot;, &quot;);&#10;            sb.append(x);&#10;            first = false;&#10;        }&#10;        sb.append(&quot;]&quot;);&#10;        return sb.toString();&#10;    }&#10;&#10;    private static void handleError(Exception e) {&#10;        StringWriter sw = new StringWriter();&#10;        PrintWriter pw = new PrintWriter(sw);&#10;        e.printStackTrace(pw);&#10;        Assert.fail(&quot;Exception caught: &quot; + sw.toString());&#10;    }&#10;&#10;    @Test&#10;    public void testSolution1() {&#10;        int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};&#10;        try {&#10;            Assert.assertTrue(&quot;Array &quot; + printArray(arr) + &quot; has 1-9.&quot;, OneThruNine.hasOneThroughNine(arr));&#10;        } catch (Exception e) {&#10;            handleError(e);&#10;        }&#10;    }&#10;&#10;    @Test&#10;    public void testSolution2() {&#10;        int[] arr = {1, 3, 5, 7, 9, 7, 5, 3, 1};&#10;        try {&#10;            Assert.assertFalse(&quot;Array &quot; + printArray(arr) + &quot; doesn't have 1-9.&quot;, OneThruNine.hasOneThroughNine(arr));&#10;        } catch (Exception e) {&#10;            handleError(e);&#10;        }&#10;    }&#10;&#10;    @Test&#10;    public void testSolution3() {&#10;        int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};&#10;        for (int i = 0; i &lt; 100; i++) {&#10;            for (int j = 0; j &lt; 9; j++) {&#10;                int pos = r.nextInt(9 - j);&#10;                int tmp = arr[j];&#10;                arr[j] = arr[pos];&#10;                arr[pos] = tmp;&#10;            }&#10;            try {&#10;                Assert.assertTrue(&quot;Array &quot; + printArray(arr) + &quot; has 1-9.&quot;, OneThruNine.hasOneThroughNine(arr));&#10;            } catch (Exception e) {&#10;                handleError(e);&#10;            }&#10;        }&#10;    }&#10;&#10;    @Test&#10;    public void testSolution4() {&#10;        int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};&#10;        for (int i = 0; i &lt; 100; i++) {&#10;            for (int j = 0; j &lt; 9; j++) {&#10;                int pos = r.nextInt(9 - j);&#10;                int tmp = arr[j];&#10;                arr[j] = arr[pos];&#10;                arr[pos] = tmp;&#10;            }&#10;            int p1 = r.nextInt(9);&#10;            int p2 = r.nextInt(9);&#10;            int x = arr[p1];&#10;            arr[p1] = arr[p2];&#10;            try {&#10;                if (p1 == p2)&#10;                    Assert.assertTrue(&quot;Array &quot; + printArray(arr) + &quot; has 1-9.&quot;, OneThruNine.hasOneThroughNine(arr));&#10;                else&#10;                    Assert.assertFalse(&quot;Array &quot; + printArray(arr) + &quot; has 1-9.&quot;, OneThruNine.hasOneThroughNine(arr));&#10;            } catch (Exception e) {&#10;                handleError(e);&#10;            }&#10;            arr[p1] = x;&#10;        }&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/OneThruNine.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="10" />
                                                <option name="offset" value="765" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="20" />
                                            <option name="offset" value="765" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* TODO */" />
                                            <option name="possibleAnswer" value="/* TODO */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="10" />
                                                <option name="offset" value="827" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="3" />
                                            <option name="offset" value="837" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* TODO */" />
                                            <option name="possibleAnswer" value="/* TODO */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/OneThruNine.java" />
                                      <option name="text" value="public class OneThruNine {&#10;    /**&#10;     * Determine if the given array has distinct numbers from 1 to 9.&#10;     * @param arr the input array, assumed to have length 9, and all numbers&#10;     *            in the array are in range [1, 9]&#10;     * @return {@code true} if {@code arr} has distinct numbers from 1 to 9;&#10;     *          {@code false} otherwise&#10;     */&#10;    public static boolean hasOneThroughNine(int[] arr) {&#10;        if (arr.length != 9) {&#10;            // array not of length 9; return false by default&#10;            return false;&#10;        }&#10;&#10;        // create a boolean array of length 9, initially false on every entry&#10;        boolean[] present = new boolean[9];&#10;        // loop through each entry in the given array&#10;        for (int x : arr) {&#10;            if (/* TODO */)&#10;                return false;&#10;            present[/* TODO */] = true;&#10;        }&#10;        return true;&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565608750000" />
                          </EduTask>
                          <EduTask>
                            <option name="customPresentableName" value="Programming 2" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;h2&gt;Checking rows&lt;/h2&gt;&#10;&lt;p&gt;In this part of the exercise, we will start checking the validity of Sudoku grids by verifying that every row is valid.  A row is valid if it contains every number from 1 to 9.&lt;/p&gt;&#10;&#10;&lt;p&gt;Complete the method &lt;code&gt;checkRows()&lt;/code&gt; in class &lt;code&gt;RowChecker&lt;/code&gt;, by filling in parts that say &lt;code&gt;/* TODO */&lt;/code&gt;, so that it returns &lt;code&gt;true&lt;/code&gt; if every row in the given grid is valid, and &lt;code&gt;false&lt;/code&gt; otherwise.  Moreover, if there is an invalid row, the method should print the row number of the first invalid row.&lt;/p&gt;&#10;&#10;&lt;p&gt;You may assume that the argument is always a 9x9 2-dimensional array.  You may further assume that every number in the grid is always in range [1, 9].&lt;/p&gt;&#10;&#10;&lt;p&gt;The method works by first constructing an array that contains numbers in a certain row, which is then passed to the method &lt;code&gt;hasOneThroughNine()&lt;/code&gt;.&lt;/p&gt;&#10;&#10;&lt;p&gt;You might see parts of the code that say &lt;code&gt;/* AUTOFILL */&lt;/code&gt;.  These parts are copied from your solutions to the previous programming exercises.  Be sure you have checked and passed those exercises before trying this one.&lt;/p&gt;&#10;&#10;&lt;div class=&quot;hint&quot;&gt;&#10;  This is an illustration of the Sudoku grid from earlier:&#10;  &lt;img src=&quot;../Overview of Sudoku/sudoku.png&quot;&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;div class=&quot;hint&quot;&gt;&#10;  As before, Java arrays start from index 0.  On the contrary, Sudoku rows start from row 1.&#10;&lt;/div&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="792625" />
                            <option name="index" value="7" />
                            <option name="name" value="Programming 2" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="test/Tests.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/Tests.java" />
                                      <option name="text" value="import org.junit.After;&#10;import org.junit.Assert;&#10;import org.junit.Before;&#10;import org.junit.Test;&#10;&#10;import java.io.ByteArrayOutputStream;&#10;import java.io.PrintStream;&#10;import java.io.PrintWriter;&#10;import java.io.StringWriter;&#10;&#10;public class Tests {&#10;&#10;    private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();&#10;    private final ByteArrayOutputStream errContent = new ByteArrayOutputStream();&#10;    private final PrintStream originalOut = System.out;&#10;    private final PrintStream originalErr = System.err;&#10;&#10;    @Before&#10;    public void setUpStreams() {&#10;        System.setOut(new PrintStream(outContent));&#10;        System.setErr(new PrintStream(errContent));&#10;    }&#10;&#10;    @After&#10;    public void restoreStreams() {&#10;        System.setOut(originalOut);&#10;        System.setErr(originalErr);&#10;    }&#10;&#10;    private static String printGrid(int[][] grid) {&#10;        StringBuilder sb = new StringBuilder();&#10;        for (int[] row : grid) {&#10;            boolean first = true;&#10;            for (int cell : row) {&#10;                if (!first) sb.append(&quot; &quot;);&#10;                sb.append(cell);&#10;                first = false;&#10;            }&#10;            sb.append('\n');&#10;        }&#10;        return sb.toString();&#10;    }&#10;&#10;    private static void handleError(Exception e) {&#10;        StringWriter sw = new StringWriter();&#10;        PrintWriter pw = new PrintWriter(sw);&#10;        e.printStackTrace(pw);&#10;        Assert.fail(&quot;Exception caught: &quot; + sw.toString());&#10;    }&#10;&#10;    private static final int[][] grid1 = {&#10;            {1, 7, 2, 9, 8, 3, 5, 6, 4},&#10;            {4, 6, 8, 5, 7, 2, 9, 8, 3},&#10;            {5, 3, 9, 6, 1, 4, 8, 7, 2},&#10;            {2, 1, 3, 8, 5, 6, 4, 9, 7},&#10;            {8, 4, 6, 3, 9, 7, 2, 5, 1},&#10;            {9, 5, 7, 2, 4, 1, 3, 1, 6},&#10;            {6, 8, 4, 7, 2, 5, 1, 3, 9},&#10;            {3, 9, 1, 4, 6, 8, 7, 2, 5},&#10;            {7, 2, 5, 1, 3, 9, 6, 4, 8},&#10;&#10;    };&#10;&#10;    private static final int[][] grid2 = {&#10;            {1, 7, 2, 9, 8, 3, 5, 6, 4},&#10;            {4, 6, 8, 5, 7, 2, 9, 1, 3},&#10;            {5, 3, 9, 6, 1, 4, 8, 7, 2},&#10;            {2, 1, 3, 8, 5, 6, 4, 9, 7},&#10;            {8, 4, 6, 3, 9, 7, 2, 5, 1},&#10;            {9, 5, 7, 2, 4, 1, 3, 8, 6},&#10;            {6, 8, 4, 7, 2, 5, 1, 3, 9},&#10;            {3, 9, 1, 4, 6, 8, 5, 2, 7},&#10;            {7, 2, 5, 1, 3, 9, 6, 4, 8},&#10;    };&#10;&#10;    private static final int[][] grid3 = {&#10;            {1, 7, 2, 9, 8, 3, 5, 6, 4},&#10;            {4, 6, 8, 5, 7, 2, 9, 1, 3},&#10;            {5, 3, 9, 6, 1, 4, 8, 7, 2},&#10;            {7, 2, 5, 1, 3, 9, 6, 4, 8},&#10;            {2, 1, 3, 8, 5, 6, 4, 9, 7},&#10;            {8, 4, 6, 3, 9, 7, 2, 5, 1},&#10;            {9, 5, 7, 2, 4, 1, 3, 8, 6},&#10;            {6, 8, 4, 7, 2, 5, 1, 3, 9},&#10;            {3, 9, 1, 4, 6, 8, 7, 2, 5},&#10;    };&#10;&#10;    private static final int[][] grid4 = {&#10;            {1, 7, 2, 9, 8, 3, 5, 6, 4},&#10;            {4, 6, 8, 5, 7, 2, 9, 1, 3},&#10;            {5, 3, 9, 6, 1, 4, 8, 7, 2},&#10;            {2, 1, 3, 8, 5, 6, 4, 9, 7},&#10;            {8, 4, 6, 3, 9, 7, 2, 5, 1},&#10;            {9, 5, 7, 2, 4, 1, 3, 8, 6},&#10;            {6, 8, 4, 7, 2, 5, 1, 3, 9},&#10;            {3, 9, 1, 4, 6, 8, 7, 2, 5},&#10;            {7, 2, 5, 1, 3, 9, 6, 4, 8},&#10;    };&#10;&#10;    @Test&#10;    public void testGrid1() {&#10;        try {&#10;            Assert.assertFalse(&quot;checkRow() should return false for this grid:\n&quot; + printGrid(grid1), RowChecker.checkRows(grid1));&#10;            Assert.assertEquals(&quot;Row 2 is invalid.&quot; + System.lineSeparator(), outContent.toString());&#10;        } catch (Exception e) {&#10;            handleError(e);&#10;        }&#10;    }&#10;&#10;    @Test&#10;    public void testGrid2() {&#10;        try {&#10;            Assert.assertTrue(&quot;checkRow() should return true for this grid:\n&quot; + printGrid(grid2), RowChecker.checkRows(grid2));&#10;        } catch (Exception e) {&#10;            handleError(e);&#10;        }&#10;    }&#10;&#10;    @Test&#10;    public void testGrid3() {&#10;        try {&#10;            Assert.assertTrue(&quot;checkRow() should return true for this grid:\n&quot; + printGrid(grid3), RowChecker.checkRows(grid3));&#10;        } catch (Exception e) {&#10;            handleError(e);&#10;        }&#10;    }&#10;&#10;    @Test&#10;    public void testGrid4() {&#10;        try {&#10;            Assert.assertTrue(&quot;checkRow() should return true for this grid:\n&quot; + printGrid(grid4), RowChecker.checkRows(grid4));&#10;        } catch (Exception e) {&#10;            handleError(e);&#10;        }&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/RowChecker.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="10" />
                                                <option name="offset" value="624" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="6" />
                                            <option name="offset" value="624" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* TODO */" />
                                            <option name="possibleAnswer" value="/* TODO */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="10" />
                                                <option name="offset" value="736" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="5" />
                                            <option name="offset" value="732" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* TODO */" />
                                            <option name="possibleAnswer" value="/* TODO */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="2" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="14" />
                                                <option name="offset" value="1412" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="20" />
                                            <option name="offset" value="1403" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/OneThruNine.java" />
                                                <option name="lessonName" value="Lab01" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="01-Intro" />
                                                <option name="taskName" value="Programming 1" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* AUTOFILL */" />
                                            <option name="possibleAnswer" value="/* AUTOFILL */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="3" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="14" />
                                                <option name="offset" value="1478" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="3" />
                                            <option name="offset" value="1475" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/OneThruNine.java" />
                                                <option name="lessonName" value="Lab01" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="01-Intro" />
                                                <option name="taskName" value="Programming 1" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* AUTOFILL */" />
                                            <option name="possibleAnswer" value="/* AUTOFILL */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/RowChecker.java" />
                                      <option name="text" value="public class RowChecker {&#10;    /**&#10;     * Determine if every row in the given grid is valid, i.e.,&#10;     * has distinct numbers from 1 to 9.&#10;     * If there is an invalid row, output the first such row number.&#10;     * @param grid the Sudoku grid, assumed to be of dimension 9x9, and all numbers&#10;     *             are in range [1, 9]&#10;     * @return {@code true} if every row in {@code grid} is valid;&#10;     *          {@code false} otherwise&#10;     */&#10;    public static boolean checkRows(int[][] grid) {&#10;        int[] arr = new int[9];&#10;        for (int i = 0; i &lt; 9; i++) {&#10;            for (int j = 0; j &lt; 9; j++)&#10;                /* TODO */ = grid[i][j];&#10;            if (!hasOneThroughNine(arr)) {&#10;                System.out.println(&quot;Row &quot; + /* TODO */ + &quot; is invalid.&quot;);&#10;                return false;&#10;            }&#10;        }&#10;        return true;&#10;    }&#10;&#10;    /**&#10;     * Determine if the given array has distinct numbers from 1 to 9.&#10;     * @param arr the input array, assumed to have length 9, and all numbers&#10;     *            in the array are in range [1, 9]&#10;     * @return {@code true} if {@code arr} has distinct numbers from 1 to 9;&#10;     *          {@code false} otherwise&#10;     */&#10;    public static boolean hasOneThroughNine(int[] arr) {&#10;        boolean[] present = new boolean[9]; // initially false on every entry&#10;        // loop through each entry in the given array&#10;        for (int x : arr) {&#10;            if (/* AUTOFILL */)&#10;                return false;&#10;            present[/* AUTOFILL */] = true;&#10;        }&#10;        return true;&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565772090000" />
                          </EduTask>
                          <EduTask>
                            <option name="customPresentableName" value="Programming 3" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;h2&gt;Checking columns&lt;/h2&gt;&#10;&lt;p&gt;In this part of the exercise, we will continue checking the validity of Sudoku grids by verifying that every column is valid.  A column is valid if it contains every number from 1 to 9.&lt;/p&gt;&#10;&#10;&lt;p&gt;Complete the method &lt;code&gt;checkColumns()&lt;/code&gt; in class &lt;code&gt;ColumnChecker&lt;/code&gt;, by filling in parts that say &lt;code&gt;/* TODO */&lt;/code&gt;, so that it returns &lt;code&gt;true&lt;/code&gt; if every column in the given grid is valid, and &lt;code&gt;false&lt;/code&gt; otherwise.  Moreover, if there is an invalid column, the method should print the column number of the first invalid column.&lt;/p&gt;&#10;&#10;&lt;p&gt;You may assume that the argument is always a 9x9 2-dimensional array.  You may further assume that every number in the grid is always in range [1, 9].&lt;/p&gt;&#10;&#10;&lt;p&gt;The method works by first constructing an array that contains numbers in a certain column, which is then passed to the method &lt;code&gt;hasOneThroughNine()&lt;/code&gt;.&lt;/p&gt;&#10;&#10;&lt;p&gt;You might see parts of the code that say &lt;code&gt;/* AUTOFILL */&lt;/code&gt;.  These parts are copied from your solutions to the previous programming exercises.  Be sure you have checked and passed those exercises before trying this one.&lt;/p&gt;&#10;&#10;&lt;div class=&quot;hint&quot;&gt;&#10;  This is an illustration of the Sudoku grid from earlier:&#10;  &lt;img src=&quot;../Overview of Sudoku/sudoku.png&quot;&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;div class=&quot;hint&quot;&gt;&#10;  As before, Java arrays start from index 0.  On the contrary, Sudoku columns start from column 1.&#10;&lt;/div&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="792626" />
                            <option name="index" value="8" />
                            <option name="name" value="Programming 3" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="test/Tests.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/Tests.java" />
                                      <option name="text" value="import org.junit.After;&#10;import org.junit.Assert;&#10;import org.junit.Before;&#10;import org.junit.Test;&#10;&#10;import java.io.ByteArrayOutputStream;&#10;import java.io.PrintStream;&#10;import java.io.PrintWriter;&#10;import java.io.StringWriter;&#10;&#10;public class Tests {&#10;&#10;  private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();&#10;  private final ByteArrayOutputStream errContent = new ByteArrayOutputStream();&#10;  private final PrintStream originalOut = System.out;&#10;  private final PrintStream originalErr = System.err;&#10;&#10;  @Before&#10;  public void setUpStreams() {&#10;    System.setOut(new PrintStream(outContent));&#10;    System.setErr(new PrintStream(errContent));&#10;  }&#10;&#10;  @After&#10;  public void restoreStreams() {&#10;    System.setOut(originalOut);&#10;    System.setErr(originalErr);&#10;  }&#10;&#10;  private static String printGrid(int[][] grid) {&#10;    StringBuilder sb = new StringBuilder();&#10;    for (int[] Column : grid) {&#10;      boolean first = true;&#10;      for (int cell : Column) {&#10;        if (!first) sb.append(&quot; &quot;);&#10;        sb.append(cell);&#10;        first = false;&#10;      }&#10;      sb.append('\n');&#10;    }&#10;    return sb.toString();&#10;  }&#10;&#10;  private static void handleError(Exception e) {&#10;    StringWriter sw = new StringWriter();&#10;    PrintWriter pw = new PrintWriter(sw);&#10;    e.printStackTrace(pw);&#10;    Assert.fail(&quot;Exception caught: &quot; + sw.toString());&#10;  }&#10;&#10;  private static final int[][] grid1 = {&#10;          {1, 7, 2, 9, 8, 3, 5, 6, 4},&#10;          {4, 6, 8, 5, 7, 2, 9, 8, 3},&#10;          {5, 3, 9, 6, 1, 4, 8, 7, 2},&#10;          {2, 1, 3, 8, 5, 6, 4, 9, 7},&#10;          {8, 4, 6, 3, 9, 7, 2, 5, 1},&#10;          {9, 5, 7, 2, 4, 1, 3, 1, 6},&#10;          {6, 8, 4, 7, 2, 5, 1, 3, 9},&#10;          {3, 9, 1, 4, 6, 8, 7, 2, 5},&#10;          {7, 2, 5, 1, 3, 9, 6, 4, 8},&#10;&#10;  };&#10;&#10;  private static final int[][] grid2 = {&#10;          {1, 7, 2, 9, 8, 3, 5, 6, 4},&#10;          {4, 6, 8, 5, 7, 2, 9, 1, 3},&#10;          {5, 3, 9, 6, 1, 4, 8, 7, 2},&#10;          {2, 1, 3, 8, 5, 6, 4, 9, 7},&#10;          {8, 4, 6, 3, 9, 7, 2, 5, 1},&#10;          {9, 5, 7, 2, 4, 1, 3, 8, 6},&#10;          {6, 8, 4, 7, 2, 5, 1, 3, 9},&#10;          {3, 9, 1, 4, 6, 8, 5, 2, 7},&#10;          {7, 2, 5, 1, 3, 9, 6, 4, 8},&#10;  };&#10;&#10;  private static final int[][] grid3 = {&#10;          {1, 7, 2, 9, 8, 3, 5, 6, 4},&#10;          {4, 6, 8, 5, 7, 2, 9, 1, 3},&#10;          {5, 3, 9, 6, 1, 4, 8, 7, 2},&#10;          {7, 2, 5, 1, 3, 9, 6, 4, 8},&#10;          {2, 1, 3, 8, 5, 6, 4, 9, 7},&#10;          {8, 4, 6, 3, 9, 7, 2, 5, 1},&#10;          {9, 5, 7, 2, 4, 1, 3, 8, 6},&#10;          {6, 8, 4, 7, 2, 5, 1, 3, 9},&#10;          {3, 9, 1, 4, 6, 8, 7, 2, 5},&#10;  };&#10;&#10;  private static final int[][] grid4 = {&#10;          {1, 7, 2, 9, 8, 3, 5, 6, 4},&#10;          {4, 6, 8, 5, 7, 2, 9, 1, 3},&#10;          {5, 3, 9, 6, 1, 4, 8, 7, 2},&#10;          {2, 1, 3, 8, 5, 6, 4, 9, 7},&#10;          {8, 4, 6, 3, 9, 7, 2, 5, 1},&#10;          {9, 5, 7, 2, 4, 1, 3, 8, 6},&#10;          {6, 8, 4, 7, 2, 5, 1, 3, 9},&#10;          {3, 9, 1, 4, 6, 8, 7, 2, 5},&#10;          {7, 2, 5, 1, 3, 9, 6, 4, 8},&#10;  };&#10;&#10;  @Test&#10;  public void testGrid1() {&#10;    try {&#10;      Assert.assertTrue(&quot;checkColumn() should return true for this grid:\n&quot; + printGrid(grid1), ColumnChecker.checkColumns(grid1));&#10;    } catch (Exception e) {&#10;      handleError(e);&#10;    }&#10;  }&#10;&#10;  @Test&#10;  public void testGrid2() {&#10;    try {&#10;      Assert.assertFalse(&quot;checkColumn() should return false for this grid:\n&quot; + printGrid(grid2), ColumnChecker.checkColumns(grid2));&#10;      Assert.assertEquals(&quot;Column 7 is invalid.&quot; + System.lineSeparator(), outContent.toString());&#10;    } catch (Exception e) {&#10;      handleError(e);&#10;    }&#10;  }&#10;&#10;  @Test&#10;  public void testGrid3() {&#10;    try {&#10;      Assert.assertTrue(&quot;checkColumn() should return true for this grid:\n&quot; + printGrid(grid3), ColumnChecker.checkColumns(grid3));&#10;    } catch (Exception e) {&#10;      handleError(e);&#10;    }&#10;  }&#10;&#10;  @Test&#10;  public void testGrid4() {&#10;    try {&#10;      Assert.assertTrue(&quot;checkColumn() should return true for this grid:\n&quot; + printGrid(grid4), ColumnChecker.checkColumns(grid4));&#10;    } catch (Exception e) {&#10;      handleError(e);&#10;    }&#10;  }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/ColumnChecker.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="10" />
                                                <option name="offset" value="642" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="6" />
                                            <option name="offset" value="642" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* TODO */" />
                                            <option name="possibleAnswer" value="/* TODO */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="10" />
                                                <option name="offset" value="757" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="5" />
                                            <option name="offset" value="753" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* TODO */" />
                                            <option name="possibleAnswer" value="/* TODO */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="2" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="14" />
                                                <option name="offset" value="1433" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="20" />
                                            <option name="offset" value="1424" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/OneThruNine.java" />
                                                <option name="lessonName" value="Lab01" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="01-Intro" />
                                                <option name="taskName" value="Programming 1" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* AUTOFILL */" />
                                            <option name="possibleAnswer" value="/* AUTOFILL */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="3" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="14" />
                                                <option name="offset" value="1499" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="3" />
                                            <option name="offset" value="1496" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/OneThruNine.java" />
                                                <option name="lessonName" value="Lab01" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="01-Intro" />
                                                <option name="taskName" value="Programming 1" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* AUTOFILL */" />
                                            <option name="possibleAnswer" value="/* AUTOFILL */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/ColumnChecker.java" />
                                      <option name="text" value="public class ColumnChecker {&#10;    /**&#10;     * Determine if every column in the given grid is valid, i.e.,&#10;     * has distinct numbers from 1 to 9.&#10;     * If there is an invalid column, output the first such column number.&#10;     * @param grid the Sudoku grid, assumed to be of dimension 9x9, and all numbers&#10;     *             are in range [1, 9]&#10;     * @return {@code true} if every column in {@code grid} is valid;&#10;     *          {@code false} otherwise&#10;     */&#10;    public static boolean checkColumns(int[][] grid) {&#10;        int[] arr = new int[9];&#10;        for (int j = 0; j &lt; 9; j++) {&#10;            for (int i = 0; i &lt; 9; i++)&#10;                /* TODO */ = grid[i][j];&#10;            if (!hasOneThroughNine(arr)) {&#10;                System.out.println(&quot;Column &quot; + /* TODO */ + &quot; is invalid.&quot;);&#10;                return false;&#10;            }&#10;        }&#10;        return true;&#10;    }&#10;&#10;    /**&#10;     * Determine if the given array has distinct numbers from 1 to 9.&#10;     * @param arr the input array, assumed to have length 9, and all numbers&#10;     *            in the array are in range [1, 9]&#10;     * @return {@code true} if {@code arr} has distinct numbers from 1 to 9;&#10;     *          {@code false} otherwise&#10;     */&#10;    public static boolean hasOneThroughNine(int[] arr) {&#10;        boolean[] present = new boolean[9]; // initially false on every entry&#10;        // loop through each entry in the given array&#10;        for (int x : arr) {&#10;            if (/* AUTOFILL */)&#10;                return false;&#10;            present[/* AUTOFILL */] = true;&#10;        }&#10;        return true;&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565772094000" />
                          </EduTask>
                          <EduTask>
                            <option name="customPresentableName" value="Programming 4" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;h2&gt;Checking boxes&lt;/h2&gt;&#10;&lt;p&gt;In this part of the exercise, we will finish up checking the validity of Sudoku grids by verifying that every box is valid.  A box is valid if it contains every number from 1 to 9.&lt;/p&gt;&#10;&#10;&lt;p&gt;Complete the method &lt;code&gt;checkBoxes()&lt;/code&gt; in class &lt;code&gt;BoxChecker&lt;/code&gt;, by filling in parts that say &lt;code&gt;/* TODO */&lt;/code&gt;, so that it returns &lt;code&gt;true&lt;/code&gt; if every box in the given grid is valid, and &lt;code&gt;false&lt;/code&gt; otherwise.  Moreover, if there is an invalid box, the method should print the box number of the first invalid box.&lt;/p&gt;&#10;&#10;&lt;p&gt;You may assume that the argument is always a 9x9 2-dimensional array.  You may further assume that every number in the grid is always in range [1, 9].&lt;/p&gt;&#10;&#10;&lt;p&gt;The method works by first constructing an array that contains numbers in a certain box, which is then passed to the method &lt;code&gt;hasOneThroughNine()&lt;/code&gt;.&lt;/p&gt;&#10;&#10;&lt;p&gt;You might see parts of the code that say &lt;code&gt;/* AUTOFILL */&lt;/code&gt;.  These parts are copied from your solutions to the previous programming exercises.  Be sure you have checked and passed those exercises before trying this one.&lt;/p&gt;&#10;&#10;&lt;div class=&quot;hint&quot;&gt;&#10;  This is an illustration of the Sudoku grid from earlier:&#10;  &lt;img src=&quot;../Overview of Sudoku/sudoku.png&quot;&gt;&#10;&lt;/div&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="792627" />
                            <option name="index" value="9" />
                            <option name="name" value="Programming 4" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="test/Tests.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/Tests.java" />
                                      <option name="text" value="import org.junit.After;&#10;import org.junit.Assert;&#10;import org.junit.Before;&#10;import org.junit.Test;&#10;&#10;import java.io.ByteArrayOutputStream;&#10;import java.io.PrintStream;&#10;import java.io.PrintWriter;&#10;import java.io.StringWriter;&#10;&#10;public class Tests {&#10;&#10;  private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();&#10;  private final ByteArrayOutputStream errContent = new ByteArrayOutputStream();&#10;  private final PrintStream originalOut = System.out;&#10;  private final PrintStream originalErr = System.err;&#10;&#10;  @Before&#10;  public void setUpStreams() {&#10;    System.setOut(new PrintStream(outContent));&#10;    System.setErr(new PrintStream(errContent));&#10;  }&#10;&#10;  @After&#10;  public void restoreStreams() {&#10;    System.setOut(originalOut);&#10;    System.setErr(originalErr);&#10;  }&#10;&#10;  private static String printGrid(int[][] grid) {&#10;    StringBuilder sb = new StringBuilder();&#10;    for (int[] Box : grid) {&#10;      boolean first = true;&#10;      for (int cell : Box) {&#10;        if (!first) sb.append(&quot; &quot;);&#10;        sb.append(cell);&#10;        first = false;&#10;      }&#10;      sb.append('\n');&#10;    }&#10;    return sb.toString();&#10;  }&#10;&#10;  private static void handleError(Exception e) {&#10;    StringWriter sw = new StringWriter();&#10;    PrintWriter pw = new PrintWriter(sw);&#10;    e.printStackTrace(pw);&#10;    Assert.fail(&quot;Exception caught: &quot; + sw.toString());&#10;  }&#10;&#10;  private static final int[][] grid1 = {&#10;          {1, 7, 2, 9, 8, 3, 5, 6, 4},&#10;          {4, 6, 8, 5, 7, 2, 9, 8, 3},&#10;          {5, 3, 9, 6, 1, 4, 8, 7, 2},&#10;          {2, 1, 3, 8, 5, 6, 4, 9, 7},&#10;          {8, 4, 6, 3, 9, 7, 2, 5, 1},&#10;          {9, 5, 7, 2, 4, 1, 3, 1, 6},&#10;          {6, 8, 4, 7, 2, 5, 1, 3, 9},&#10;          {3, 9, 1, 4, 6, 8, 7, 2, 5},&#10;          {7, 2, 5, 1, 3, 9, 6, 4, 8},&#10;&#10;  };&#10;&#10;  private static final int[][] grid2 = {&#10;          {1, 7, 2, 9, 8, 3, 5, 6, 4},&#10;          {4, 6, 8, 5, 7, 2, 9, 1, 3},&#10;          {5, 3, 9, 6, 1, 4, 8, 7, 2},&#10;          {2, 1, 3, 8, 5, 6, 4, 9, 7},&#10;          {8, 4, 6, 3, 9, 7, 2, 5, 1},&#10;          {9, 5, 7, 2, 4, 1, 3, 8, 6},&#10;          {6, 8, 4, 7, 2, 5, 1, 3, 9},&#10;          {3, 9, 1, 4, 6, 8, 5, 2, 7},&#10;          {7, 2, 5, 1, 3, 9, 6, 4, 8},&#10;  };&#10;&#10;  private static final int[][] grid3 = {&#10;          {1, 7, 2, 9, 8, 3, 5, 6, 4},&#10;          {4, 6, 8, 5, 7, 2, 9, 1, 3},&#10;          {5, 3, 9, 6, 1, 4, 8, 7, 2},&#10;          {7, 2, 5, 1, 3, 9, 6, 4, 8},&#10;          {2, 1, 3, 8, 5, 6, 4, 9, 7},&#10;          {8, 4, 6, 3, 9, 7, 2, 5, 1},&#10;          {9, 5, 7, 2, 4, 1, 3, 8, 6},&#10;          {6, 8, 4, 7, 2, 5, 1, 3, 9},&#10;          {3, 9, 1, 4, 6, 8, 7, 2, 5},&#10;  };&#10;&#10;  private static final int[][] grid4 = {&#10;          {1, 7, 2, 9, 8, 3, 5, 6, 4},&#10;          {4, 6, 8, 5, 7, 2, 9, 1, 3},&#10;          {5, 3, 9, 6, 1, 4, 8, 7, 2},&#10;          {2, 1, 3, 8, 5, 6, 4, 9, 7},&#10;          {8, 4, 6, 3, 9, 7, 2, 5, 1},&#10;          {9, 5, 7, 2, 4, 1, 3, 8, 6},&#10;          {6, 8, 4, 7, 2, 5, 1, 3, 9},&#10;          {3, 9, 1, 4, 6, 8, 7, 2, 5},&#10;          {7, 2, 5, 1, 3, 9, 6, 4, 8},&#10;  };&#10;&#10;  @Test&#10;  public void testGrid1() {&#10;    try {&#10;      Assert.assertFalse(&quot;checkBox() should return false for this grid:\n&quot; + printGrid(grid1), BoxChecker.checkBoxes(grid1));&#10;      Assert.assertEquals(&quot;Box 3 is invalid.&quot; + System.lineSeparator(), outContent.toString());&#10;    } catch (Exception e) {&#10;      handleError(e);&#10;    }&#10;  }&#10;&#10;  @Test&#10;  public void testGrid2() {&#10;    try {&#10;      Assert.assertTrue(&quot;checkBox() should return true for this grid:\n&quot; + printGrid(grid2), BoxChecker.checkBoxes(grid2));&#10;    } catch (Exception e) {&#10;      handleError(e);&#10;    }&#10;  }&#10;&#10;  @Test&#10;  public void testGrid3() {&#10;    try {&#10;      Assert.assertFalse(&quot;checkBox() should return false for this grid:\n&quot; + printGrid(grid3), BoxChecker.checkBoxes(grid3));&#10;      Assert.assertEquals(&quot;Box 4 is invalid.&quot; + System.lineSeparator(), outContent.toString());&#10;    } catch (Exception e) {&#10;      handleError(e);&#10;    }&#10;  }&#10;&#10;  @Test&#10;  public void testGrid4() {&#10;    try {&#10;      Assert.assertTrue(&quot;checkBox() should return true for this grid:\n&quot; + printGrid(grid4), BoxChecker.checkBoxes(grid4));&#10;    } catch (Exception e) {&#10;      handleError(e);&#10;    }&#10;  }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/BoxChecker.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="10" />
                                                <option name="offset" value="629" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="6" />
                                            <option name="offset" value="629" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* TODO */" />
                                            <option name="possibleAnswer" value="/* TODO */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="10" />
                                                <option name="offset" value="660" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="11" />
                                            <option name="offset" value="656" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* TODO */" />
                                            <option name="possibleAnswer" value="/* TODO */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="2" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="10" />
                                                <option name="offset" value="760" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="5" />
                                            <option name="offset" value="757" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* TODO */" />
                                            <option name="possibleAnswer" value="/* TODO */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="3" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="14" />
                                                <option name="offset" value="1436" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="20" />
                                            <option name="offset" value="1428" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/OneThruNine.java" />
                                                <option name="lessonName" value="Lab01" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="01-Intro" />
                                                <option name="taskName" value="Programming 1" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* AUTOFILL */" />
                                            <option name="possibleAnswer" value="/* AUTOFILL */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="4" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="14" />
                                                <option name="offset" value="1502" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="3" />
                                            <option name="offset" value="1500" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/OneThruNine.java" />
                                                <option name="lessonName" value="Lab01" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="01-Intro" />
                                                <option name="taskName" value="Programming 1" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* AUTOFILL */" />
                                            <option name="possibleAnswer" value="/* AUTOFILL */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/BoxChecker.java" />
                                      <option name="text" value="public class BoxChecker {&#10;    /**&#10;     * Determine if every 3x3 box in the given grid is valid, i.e.,&#10;     * has distinct numbers from 1 to 9.&#10;     * If there is an invalid box, output the first such box number.&#10;     * @param grid the Sudoku grid, assumed to be of dimension 9x9, and all numbers&#10;     *             are in range [1, 9]&#10;     * @return {@code true} if every box in {@code grid} is valid;&#10;     *          {@code false} otherwise&#10;     */&#10;    public static boolean checkBoxes(int[][] grid) {&#10;        int[] arr = new int[9];&#10;        for (int b = 0; b &lt; 9; b++) {&#10;            for (int k = 0; k &lt; 9; k++)&#10;                /* TODO */ = grid[b/3*3 + k/3][/* TODO */];&#10;            if (!hasOneThroughNine(arr)) {&#10;                System.out.println(&quot;Box &quot; + /* TODO */ + &quot; is invalid.&quot;);&#10;                return false;&#10;            }&#10;        }&#10;        return true;&#10;    }&#10;&#10;    /**&#10;     * Determine if the given array has distinct numbers from 1 to 9.&#10;     * @param arr the input array, assumed to have length 9, and all numbers&#10;     *            in the array are in range [1, 9]&#10;     * @return {@code true} if {@code arr} has distinct numbers from 1 to 9;&#10;     *          {@code false} otherwise&#10;     */&#10;    public static boolean hasOneThroughNine(int[] arr) {&#10;        boolean[] present = new boolean[9]; // initially false on every entry&#10;        // loop through each entry in the given array&#10;        for (int x : arr) {&#10;            if (/* AUTOFILL */)&#10;                return false;&#10;            present[/* AUTOFILL */] = true;&#10;        }&#10;        return true;&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565772098000" />
                          </EduTask>
                          <EduTask>
                            <option name="customPresentableName" value="Programming 5" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;h2&gt;Putting everything together&lt;/h2&gt;&#10;&lt;p&gt;In the last part of this programming exercise, we will build a Sudoku solution verifier, using the code we have written in the previous parts.&lt;/p&gt;&#10;&#10;&lt;p&gt;As a reminder, the verification steps are as follows:&lt;/p&gt;&#10;&lt;ul&gt;&#10;  &lt;li&gt;Verify whether each row is correct.  If not, display the row number of the first incorrect row.&lt;/li&gt;&#10;  &lt;li&gt;If all rows are correct, verify whether each column is correct.  If not, display the column number of the first incorrect column.&lt;/li&gt;&#10;  &lt;li&gt;If all rows and columns are correct, verify whether each box is correct.  If not, display the box number of the first incorrect box.&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&lt;p&gt;If no rows, columns, or boxes violate the correctness conditions, we will declare that the solution is correct.&lt;/p&gt;&#10;&#10;&lt;p&gt;Complete the method &lt;code&gt;isValidGrid()&lt;/code&gt; in class &lt;code&gt;SudokuVerifier&lt;/code&gt;, by filling in parts that say &lt;code&gt;/* TODO */&lt;/code&gt;, so that it returns &lt;code&gt;true&lt;/code&gt; if the given grid is valid, and &lt;code&gt;false&lt;/code&gt; otherwise.  Moreover, if the grid is invalid, the method should display a message according to the specifications above.&lt;/p&gt;&#10;&#10;&lt;p&gt;You may assume that the argument is always a 9x9 2-dimensional array.  You may further assume that every number in the grid is always in range [1, 9].&lt;/p&gt;&#10;&#10;&lt;p&gt;You might see parts of the code that say &lt;code&gt;/* AUTOFILL */&lt;/code&gt;.  These parts are copied from your solutions to the previous programming exercises.  Be sure you have checked and passed those exercises before trying this one.&lt;/p&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="792628" />
                            <option name="index" value="10" />
                            <option name="name" value="Programming 5" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="test/Tests.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/Tests.java" />
                                      <option name="text" value="import org.junit.After;&#10;import org.junit.Assert;&#10;import org.junit.Before;&#10;import org.junit.Test;&#10;&#10;import java.io.ByteArrayOutputStream;&#10;import java.io.PrintStream;&#10;import java.io.PrintWriter;&#10;import java.io.StringWriter;&#10;&#10;public class Tests {&#10;&#10;  private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();&#10;  private final ByteArrayOutputStream errContent = new ByteArrayOutputStream();&#10;  private final PrintStream originalOut = System.out;&#10;  private final PrintStream originalErr = System.err;&#10;&#10;  @Before&#10;  public void setUpStreams() {&#10;    System.setOut(new PrintStream(outContent));&#10;    System.setErr(new PrintStream(errContent));&#10;  }&#10;&#10;  @After&#10;  public void restoreStreams() {&#10;    System.setOut(originalOut);&#10;    System.setErr(originalErr);&#10;  }&#10;&#10;  private static String printGrid(int[][] grid) {&#10;    StringBuilder sb = new StringBuilder();&#10;    for (int[] Box : grid) {&#10;      boolean first = true;&#10;      for (int cell : Box) {&#10;        if (!first) sb.append(&quot; &quot;);&#10;        sb.append(cell);&#10;        first = false;&#10;      }&#10;      sb.append('\n');&#10;    }&#10;    return sb.toString();&#10;  }&#10;&#10;  private static void handleError(Exception e) {&#10;    StringWriter sw = new StringWriter();&#10;    PrintWriter pw = new PrintWriter(sw);&#10;    e.printStackTrace(pw);&#10;    Assert.fail(&quot;Exception caught: &quot; + sw.toString());&#10;  }&#10;&#10;  private static final int[][] grid1 = {&#10;          {1, 7, 2, 9, 8, 3, 5, 6, 4},&#10;          {4, 6, 8, 5, 7, 2, 9, 8, 3},&#10;          {5, 3, 9, 6, 1, 4, 8, 7, 2},&#10;          {2, 1, 3, 8, 5, 6, 4, 9, 7},&#10;          {8, 4, 6, 3, 9, 7, 2, 5, 1},&#10;          {9, 5, 7, 2, 4, 1, 3, 1, 6},&#10;          {6, 8, 4, 7, 2, 5, 1, 3, 9},&#10;          {3, 9, 1, 4, 6, 8, 7, 2, 5},&#10;          {7, 2, 5, 1, 3, 9, 6, 4, 8},&#10;&#10;  };&#10;&#10;  private static final int[][] grid2 = {&#10;          {1, 7, 2, 9, 8, 3, 5, 6, 4},&#10;          {4, 6, 8, 5, 7, 2, 9, 1, 3},&#10;          {5, 3, 9, 6, 1, 4, 8, 7, 2},&#10;          {2, 1, 3, 8, 5, 6, 4, 9, 7},&#10;          {8, 4, 6, 3, 9, 7, 2, 5, 1},&#10;          {9, 5, 7, 2, 4, 1, 3, 8, 6},&#10;          {6, 8, 4, 7, 2, 5, 1, 3, 9},&#10;          {3, 9, 1, 4, 6, 8, 5, 2, 7},&#10;          {7, 2, 5, 1, 3, 9, 6, 4, 8},&#10;  };&#10;&#10;  private static final int[][] grid3 = {&#10;          {1, 7, 2, 9, 8, 3, 5, 6, 4},&#10;          {4, 6, 8, 5, 7, 2, 9, 1, 3},&#10;          {5, 3, 9, 6, 1, 4, 8, 7, 2},&#10;          {7, 2, 5, 1, 3, 9, 6, 4, 8},&#10;          {2, 1, 3, 8, 5, 6, 4, 9, 7},&#10;          {8, 4, 6, 3, 9, 7, 2, 5, 1},&#10;          {9, 5, 7, 2, 4, 1, 3, 8, 6},&#10;          {6, 8, 4, 7, 2, 5, 1, 3, 9},&#10;          {3, 9, 1, 4, 6, 8, 7, 2, 5},&#10;  };&#10;&#10;  private static final int[][] grid4 = {&#10;          {1, 7, 2, 9, 8, 3, 5, 6, 4},&#10;          {4, 6, 8, 5, 7, 2, 9, 1, 3},&#10;          {5, 3, 9, 6, 1, 4, 8, 7, 2},&#10;          {2, 1, 3, 8, 5, 6, 4, 9, 7},&#10;          {8, 4, 6, 3, 9, 7, 2, 5, 1},&#10;          {9, 5, 7, 2, 4, 1, 3, 8, 6},&#10;          {6, 8, 4, 7, 2, 5, 1, 3, 9},&#10;          {3, 9, 1, 4, 6, 8, 7, 2, 5},&#10;          {7, 2, 5, 1, 3, 9, 6, 4, 8},&#10;  };&#10;&#10;  @Test&#10;  public void testGrid1() {&#10;    try {&#10;      Assert.assertFalse(&quot;isValidGrid() should return false for this grid:\n&quot; + printGrid(grid1), SudokuVerifier.isValidGrid(grid1));&#10;      Assert.assertEquals(&quot;Row 2 is invalid.&quot; + System.lineSeparator() + &quot;This grid is invalid.&quot; + System.lineSeparator(), outContent.toString());&#10;    } catch (Exception e) {&#10;      handleError(e);&#10;    }&#10;  }&#10;&#10;  @Test&#10;  public void testGrid2() {&#10;    try {&#10;      Assert.assertFalse(&quot;isValidGrid() should return false for this grid:\n&quot; + printGrid(grid2), SudokuVerifier.isValidGrid(grid2));&#10;      Assert.assertEquals(&quot;Column 7 is invalid.&quot; + System.lineSeparator() + &quot;This grid is invalid.&quot; + System.lineSeparator(), outContent.toString());&#10;    } catch (Exception e) {&#10;      handleError(e);&#10;    }&#10;  }&#10;&#10;  @Test&#10;  public void testGrid3() {&#10;    try {&#10;      Assert.assertFalse(&quot;isValidGrid() should return false for this grid:\n&quot; + printGrid(grid3), SudokuVerifier.isValidGrid(grid3));&#10;      Assert.assertEquals(&quot;Box 4 is invalid.&quot; + System.lineSeparator() + &quot;This grid is invalid.&quot; + System.lineSeparator(), outContent.toString());&#10;    } catch (Exception e) {&#10;      handleError(e);&#10;    }&#10;  }&#10;&#10;  @Test&#10;  public void testGrid4() {&#10;    try {&#10;      Assert.assertTrue(&quot;isValidGrid() should return true for this grid:\n&quot; + printGrid(grid4), SudokuVerifier.isValidGrid(grid4));&#10;    } catch (Exception e) {&#10;      handleError(e);&#10;    }&#10;  }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/SudokuVerifier.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="10" />
                                                <option name="offset" value="596" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="63" />
                                            <option name="offset" value="596" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* TODO */" />
                                            <option name="possibleAnswer" value="/* TODO */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="14" />
                                                <option name="offset" value="1379" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="6" />
                                            <option name="offset" value="1432" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/RowChecker.java" />
                                                <option name="lessonName" value="Lab01" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="01-Intro" />
                                                <option name="taskName" value="Programming 2" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* AUTOFILL */" />
                                            <option name="possibleAnswer" value="/* AUTOFILL */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="2" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="14" />
                                                <option name="offset" value="1495" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="5" />
                                            <option name="offset" value="1540" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/RowChecker.java" />
                                                <option name="lessonName" value="Lab01" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="01-Intro" />
                                                <option name="taskName" value="Programming 2" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* AUTOFILL */" />
                                            <option name="possibleAnswer" value="/* AUTOFILL */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="3" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="14" />
                                                <option name="offset" value="2224" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="6" />
                                            <option name="offset" value="2260" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/ColumnChecker.java" />
                                                <option name="lessonName" value="Lab01" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="01-Intro" />
                                                <option name="taskName" value="Programming 3" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* AUTOFILL */" />
                                            <option name="possibleAnswer" value="/* AUTOFILL */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="4" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="14" />
                                                <option name="offset" value="2343" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="5" />
                                            <option name="offset" value="2371" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/ColumnChecker.java" />
                                                <option name="lessonName" value="Lab01" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="01-Intro" />
                                                <option name="taskName" value="Programming 3" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* AUTOFILL */" />
                                            <option name="possibleAnswer" value="/* AUTOFILL */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="5" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="14" />
                                                <option name="offset" value="3062" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="6" />
                                            <option name="offset" value="3081" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/BoxChecker.java" />
                                                <option name="lessonName" value="Lab01" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="01-Intro" />
                                                <option name="taskName" value="Programming 4" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* AUTOFILL */" />
                                            <option name="possibleAnswer" value="/* AUTOFILL */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="6" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="14" />
                                                <option name="offset" value="3097" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="11" />
                                            <option name="offset" value="3108" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/BoxChecker.java" />
                                                <option name="lessonName" value="Lab01" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="01-Intro" />
                                                <option name="taskName" value="Programming 4" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* AUTOFILL */" />
                                            <option name="possibleAnswer" value="/* AUTOFILL */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="7" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="14" />
                                                <option name="offset" value="3201" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="5" />
                                            <option name="offset" value="3209" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/BoxChecker.java" />
                                                <option name="lessonName" value="Lab01" />
                                                <option name="placeholderIndex" value="2" />
                                                <option name="sectionName" value="01-Intro" />
                                                <option name="taskName" value="Programming 4" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* AUTOFILL */" />
                                            <option name="possibleAnswer" value="/* AUTOFILL */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="8" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="14" />
                                                <option name="offset" value="3881" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="20" />
                                            <option name="offset" value="3880" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/OneThruNine.java" />
                                                <option name="lessonName" value="Lab01" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="01-Intro" />
                                                <option name="taskName" value="Programming 1" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* AUTOFILL */" />
                                            <option name="possibleAnswer" value="/* AUTOFILL */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="9" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="14" />
                                                <option name="offset" value="3947" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="3" />
                                            <option name="offset" value="3952" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/OneThruNine.java" />
                                                <option name="lessonName" value="Lab01" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="01-Intro" />
                                                <option name="taskName" value="Programming 1" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* AUTOFILL */" />
                                            <option name="possibleAnswer" value="/* AUTOFILL */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/SudokuVerifier.java" />
                                      <option name="text" value="public class SudokuVerifier {&#10;    /**&#10;     * Determine if the given Sudoku grid is valid.&#10;     * The verification should report the first invalid row, if any;&#10;     * otherwise, the first invalid column, if any;&#10;     * otherwise, the first invalid box, if any;&#10;     * otherwise, report that the grid is valid.&#10;     * @param grid the Sudoku grid, assumed to be of dimension 9x9, and all numbers&#10;     *             are in range [1, 9]&#10;     * @return {@code true} if {@code grid} is valid; {@code false} otherwise&#10;     */&#10;    public static boolean isValidGrid(int[][] grid) {&#10;        boolean valid = /* TODO */;&#10;        if (valid)&#10;            System.out.println(&quot;This grid is valid.&quot;);&#10;        else&#10;            System.out.println(&quot;This grid is invalid.&quot;);&#10;        return valid;&#10;    }&#10;&#10;    /**&#10;     * Determine if every row in the given grid is valid, i.e.,&#10;     * has distinct numbers from 1 to 9.&#10;     * If there is an invalid row, output the first such row number.&#10;     * @param grid the Sudoku grid, assumed to be of dimension 9x9, and all numbers&#10;     *             are in range [1, 9]&#10;     * @return {@code true} if every row in {@code grid} is valid;&#10;     *          {@code false} otherwise&#10;     */&#10;    public static boolean checkRows(int[][] grid) {&#10;        int[] arr = new int[9];&#10;        for (int i = 0; i &lt; 9; i++) {&#10;            for (int j = 0; j &lt; 9; j++)&#10;                /* AUTOFILL */ = grid[i][j];&#10;            if (!hasOneThroughNine(arr)) {&#10;                System.out.println(&quot;Row &quot; + /* AUTOFILL */ + &quot; is invalid.&quot;);&#10;                return false;&#10;            }&#10;        }&#10;        return true;&#10;    }&#10;&#10;    /**&#10;     * Determine if every column in the given grid is valid, i.e.,&#10;     * has distinct numbers from 1 to 9.&#10;     * If there is an invalid column, output the first such column number.&#10;     * @param grid the Sudoku grid, assumed to be of dimension 9x9, and all numbers&#10;     *             are in range [1, 9]&#10;     * @return {@code true} if every column in {@code grid} is valid;&#10;     *          {@code false} otherwise&#10;     */&#10;    public static boolean checkColumns(int[][] grid) {&#10;        int[] arr = new int[9];&#10;        for (int j = 0; j &lt; 9; j++) {&#10;            for (int i = 0; i &lt; 9; i++)&#10;                /* AUTOFILL */ = grid[i][j];&#10;            if (!hasOneThroughNine(arr)) {&#10;                System.out.println(&quot;Column &quot; + /* AUTOFILL */ + &quot; is invalid.&quot;);&#10;                return false;&#10;            }&#10;        }&#10;        return true;&#10;    }&#10;&#10;    /**&#10;     * Determine if every 3x3 box in the given grid is valid, i.e.,&#10;     * has distinct numbers from 1 to 9.&#10;     * If there is an invalid box, output the first such box number.&#10;     * @param grid the Sudoku grid, assumed to be of dimension 9x9, and all numbers&#10;     *             are in range [1, 9]&#10;     * @return {@code true} if every box in {@code grid} is valid;&#10;     *          {@code false} otherwise&#10;     */&#10;    public static boolean checkBoxes(int[][] grid) {&#10;        int[] arr = new int[9];&#10;        for (int b = 0; b &lt; 9; b++) {&#10;            for (int k = 0; k &lt; 9; k++)&#10;                /* AUTOFILL */ = grid[b/3*3 + k/3][/* AUTOFILL */];&#10;            if (!hasOneThroughNine(arr)) {&#10;                System.out.println(&quot;Box &quot; + /* AUTOFILL */ + &quot; is invalid.&quot;);&#10;                return false;&#10;            }&#10;        }&#10;        return true;&#10;    }&#10;&#10;    /**&#10;     * Determine if the given array has distinct numbers from 1 to 9.&#10;     * @param arr the input array, assumed to have length 9, and all numbers&#10;     *            in the array are in range [1, 9]&#10;     * @return {@code true} if {@code arr} has distinct numbers from 1 to 9;&#10;     *          {@code false} otherwise&#10;     */&#10;    public static boolean hasOneThroughNine(int[] arr) {&#10;        boolean[] present = new boolean[9]; // initially false on every entry&#10;        // loop through each entry in the given array&#10;        for (int x : arr) {&#10;            if (/* AUTOFILL */)&#10;                return false;&#10;            present[/* AUTOFILL */] = true;&#10;        }&#10;        return true;&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565772103000" />
                          </EduTask>
                        </list>
                      </option>
                    </Lesson>
                  </list>
                </option>
              </Section>
              <Section>
                <option name="courseId" value="56570" />
                <option name="customPresentableName" />
                <option name="id" value="91201" />
                <option name="index" value="2" />
                <option name="name" value="02-Classes and objects" />
                <option name="position" value="2" />
                <option name="updateDate" value="1566704974000" />
                <option name="items">
                  <list>
                    <FrameworkLesson>
                      <option name="currentTaskIndex" value="0" />
                      <option name="customPresentableName" />
                      <option name="id" value="247877" />
                      <option name="index" value="1" />
                      <option name="name" value="Lab02" />
                      <option name="updateDate" value="1566704974000" />
                      <option name="unitId" value="0" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Introduction" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;h3&gt;Displaying a spacecraft&lt;/h3&gt;&#10;&lt;p&gt;&#10;    Your first internship is in a game development company.  The company is trying to create a game involving spacecrafts.  Your first job is to design how to represent a spacecraft so that you can display it on the screen properly.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;    In this lab, you will write a class that will help us display a spacecraft on the screen.  For now, let's assume that spacecrafts travel in a 2-dimensional plane.  Take a look at the class &lt;code&gt;Spacecraft&lt;/code&gt; as provided.  The class currently contains four fields:&#10;&lt;/p&gt;&#10;&lt;ul&gt;&#10;    &lt;li&gt;&lt;code&gt;x&lt;/code&gt;: the x-coordinate of the spacecraft&lt;/li&gt;&#10;    &lt;li&gt;&lt;code&gt;y&lt;/code&gt;: the y-coordinate of the spacecraft&lt;/li&gt;&#10;    &lt;li&gt;&lt;code&gt;width&lt;/code&gt;: the width of the spacecraft&lt;/li&gt;&#10;    &lt;li&gt;&lt;code&gt;height&lt;/code&gt;: the height of the spacecraft&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&lt;p&gt;&#10;    All these fields are integers.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;    Next, we will start adding constructors to create spacecrafts for use in our game.  Click &quot;Next&quot; to continue.  Do not click &quot;Run&quot; or you will not be able to proceed.&#10;&lt;/p&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="792670" />
                            <option name="index" value="1" />
                            <option name="name" value="Introduction" />
                            <option name="record" value="-1" />
                            <option name="status" value="Unchecked" />
                            <option name="files">
                              <map>
                                <entry key="src/Spacecraft.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Spacecraft.java" />
                                      <option name="text" value="public class Spacecraft {&#10;    int x;&#10;    int y;&#10;    int width;&#10;    int height;&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565617825000" />
                          </TheoryTask>
                          <EduTask>
                            <option name="customPresentableName" value="Default constructor" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;p&gt;&#10;  A class without any declared constructor, like one provided here, contains a &quot;default&quot; constructor you can invoke using a &quot;class instance creation expression&quot; to create a new object (and assign the result to a variable): &lt;/p&gt;&lt;pre&gt;&lt;code&gt;Spacecraft s = new Spacecraft();&lt;/code&gt;&lt;/pre&gt;  This invocation initialize all the fields to their &quot;default&quot; values.  For &lt;code&gt;int&lt;/code&gt;, the default value is 0.&#10;&lt;p&gt;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  Nevertheless, we usually need to initialize certain fields to a meaningful value.  In our case, the default constructor initialize the dimension (width and height) of the spacecraft to zero, which does not quite make sense.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  Implement a constructor that does not take any argument, so that when invoked, it constructs a spacecraft that has both the width and the height of size 1 (the initial position is still at the origin).&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  Be sure to write your code within the grey box so it shows up in later exercises.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  Click on the &quot;Check&quot; button to check your answer.&#10;&lt;/p&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="792671" />
                            <option name="index" value="2" />
                            <option name="name" value="Default constructor" />
                            <option name="record" value="8" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="test/Tests.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/Tests.java" />
                                      <option name="text" value="import org.junit.Assert;&#10;import org.junit.Test;&#10;&#10;public class Tests {&#10;  @Test&#10;  public void testSolution() {&#10;    Spacecraft s = new Spacecraft();&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.x == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.y == 0);&#10;    Assert.assertTrue(&quot;Height should be equal to 1&quot;, s.height == 1);&#10;    Assert.assertTrue(&quot;Width should be equal to 1&quot;, s.width == 1);&#10;  }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/Spacecraft.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="84" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="76" />
                                            <option name="offset" value="84" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Spacecraft.java" />
                                      <option name="text" value="public class Spacecraft {&#10;    int x;&#10;    int y;&#10;    int width;&#10;    int height;&#10;&#10;    /* write your code here */&#10;&#10;    public Spacecraft() {&#10;        width = height = 1;&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1566704974000" />
                          </EduTask>
                          <EduTask>
                            <option name="customPresentableName" value="More constructors" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;p&gt;&#10;  Implement a constructor that takes one argument of type &lt;code&gt;int&lt;/code&gt;, so that when invoked, it constructs a spacecraft whose width and height are equal to the value of the argument.  In other words, this constructor creates a square-shaped spacecraft.&#10;&lt;/p&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="792672" />
                            <option name="index" value="3" />
                            <option name="name" value="More constructors" />
                            <option name="record" value="9" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="test/Tests.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/Tests.java" />
                                      <option name="text" value="import org.junit.Assert;&#10;import org.junit.Test;&#10;&#10;public class Tests {&#10;  @Test&#10;  public void testDefaultConstructor() {&#10;    Spacecraft s = new Spacecraft();&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.x == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.y == 0);&#10;    Assert.assertTrue(&quot;Height should be equal to 1&quot;, s.height == 1);&#10;    Assert.assertTrue(&quot;Width should be equal to 1&quot;, s.width == 1);&#10;  }&#10;&#10;  protected void testSqConstructor(int side) {&#10;    Spacecraft s = new Spacecraft(side);&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.x == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.y == 0);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + side + &quot;), the height should be equal to &quot; + side, s.height == side);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + side + &quot;), the width should be equal to &quot; + side, s.width == side);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor1() {&#10;    testSqConstructor(1);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor62() {&#10;    testSqConstructor(62);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor200() {&#10;    testSqConstructor(200);&#10;  }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/Spacecraft.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="84" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="76" />
                                            <option name="offset" value="84" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab02" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="02-Classes and objects" />
                                                <option name="taskName" value="Default constructor" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="116" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="92" />
                                            <option name="offset" value="166" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Spacecraft.java" />
                                      <option name="text" value="public class Spacecraft {&#10;    int x;&#10;    int y;&#10;    int width;&#10;    int height;&#10;&#10;    /* write your code here */&#10;&#10;    /* write your code here */&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565772106000" />
                          </EduTask>
                          <EduTask>
                            <option name="customPresentableName" value="Constructor overloading" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;p&gt;&#10;  In the last exercise, we wrote a constructor that creates a square-shaped spacecraft.  Notice that we now have two constructors, one taking no arguments and the other taking one argument.  This is an example of &lt;em&gt;overloading&lt;/em&gt;, where a name can mean several things.  In our case, we overloaded the constructors of class &lt;code&gt;Spacecraft&lt;/code&gt; so that we can create spacecrafts in multiple ways.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  Still, we don't have a way to create a spacecraft of any rectangular shape yet.  To do so, we add another constructor (i.e., another overloading) that takes two arguments indicating the width and the height of the spacecraft to be created.  Complete the body of this constructor.&#10;&lt;/p&gt;&#10;&lt;div class=&quot;hint&quot;&gt;&#10;  Observe that the parameter names in the constructors are the same as the names of the object fields.  Writing just the name in the constructor body will refer to the parameter and not the field.  To refer to the field, use &lt;code&gt;this&lt;/code&gt; keyword as a prefix, e.g., &lt;code&gt;this.x&lt;/code&gt;.&#10;&lt;/div&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="792673" />
                            <option name="index" value="4" />
                            <option name="name" value="Constructor overloading" />
                            <option name="record" value="5" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="test/Tests.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/Tests.java" />
                                      <option name="text" value="import org.junit.Assert;&#10;import org.junit.Test;&#10;&#10;public class Tests {&#10;  @Test&#10;  public void testDefaultConstructor() {&#10;    Spacecraft s = new Spacecraft();&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.x == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.y == 0);&#10;    Assert.assertTrue(&quot;Height should be equal to 1&quot;, s.height == 1);&#10;    Assert.assertTrue(&quot;Width should be equal to 1&quot;, s.width == 1);&#10;  }&#10;&#10;  protected void testSqConstructor(int side) {&#10;    Spacecraft s = new Spacecraft(side);&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.x == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.y == 0);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + side + &quot;), the height should be equal to &quot; + side, s.height == side);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + side + &quot;), the width should be equal to &quot; + side, s.width == side);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor1() {&#10;    testSqConstructor(1);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor62() {&#10;    testSqConstructor(62);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor200() {&#10;    testSqConstructor(200);&#10;  }&#10;&#10;  protected void testConstructor(int width, int height) {&#10;    Spacecraft s = new Spacecraft(width, height);&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.x == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.y == 0);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot;+ height +&quot;), the height should be equal to &quot; + height, s.height == height);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot;+ height +&quot;), the width should be equal to &quot; + width, s.width == width);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor1() {&#10;    testConstructor(1, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor2() {&#10;    testConstructor(1, 2);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor3() {&#10;    testConstructor(20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor4() {&#10;    testConstructor(261, 200);&#10;  }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/Spacecraft.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="84" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="76" />
                                            <option name="offset" value="84" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab02" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="02-Classes and objects" />
                                                <option name="taskName" value="More constructors" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="116" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="92" />
                                            <option name="offset" value="166" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab02" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="02-Classes and objects" />
                                                <option name="taskName" value="More constructors" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="2" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="199" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="49" />
                                            <option name="offset" value="315" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Spacecraft.java" />
                                      <option name="text" value="public class Spacecraft {&#10;    int x;&#10;    int y;&#10;    int width;&#10;    int height;&#10;&#10;    /* write your code here */&#10;&#10;    /* write your code here */&#10;&#10;    public Spacecraft(int width, int height) {&#10;        /* write your code here */&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565772110000" />
                          </EduTask>
                          <EduTask>
                            <option name="customPresentableName" value="Instance methods" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;p&gt;&#10;  Having constructed spacecrafts, your game company wants to know how large it is so they can plan to draw it on the screen.  To do so, you will write &lt;em&gt;instance methods&lt;/em&gt; that compute and return values of interest to the caller.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  Java methods are like functions in C++, but are written inside a class declaration.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  Write the following two instance methods, both taking no arguments:&#10;&lt;/p&gt;&#10;&lt;ul&gt;&#10;  &lt;li&gt;&lt;code&gt;area()&lt;/code&gt;: returns an integer indicating the area of the spacecraft, calculated from its dimension&lt;/li&gt;&#10;  &lt;li&gt;&lt;code&gt;perimeter()&lt;/code&gt;: returns an integer indicating the perimeter of the spacecraft&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&lt;p&gt;&#10;  You may assume that the spacecraft is of a rectangular shape.&#10;&lt;/p&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="792674" />
                            <option name="index" value="5" />
                            <option name="name" value="Instance methods" />
                            <option name="record" value="2" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="test/Tests.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/Tests.java" />
                                      <option name="text" value="import org.junit.Assert;&#10;import org.junit.Test;&#10;&#10;public class Tests {&#10;  @Test&#10;  public void testDefaultConstructor() {&#10;    Spacecraft s = new Spacecraft();&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.x == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.y == 0);&#10;    Assert.assertTrue(&quot;Height should be equal to 1&quot;, s.height == 1);&#10;    Assert.assertTrue(&quot;Width should be equal to 1&quot;, s.width == 1);&#10;  }&#10;&#10;  protected void testSqConstructor(int side) {&#10;    Spacecraft s = new Spacecraft(side);&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.x == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.y == 0);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + side + &quot;), the height should be equal to &quot; + side, s.height == side);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + side + &quot;), the width should be equal to &quot; + side, s.width == side);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor1() {&#10;    testSqConstructor(1);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor62() {&#10;    testSqConstructor(62);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor200() {&#10;    testSqConstructor(200);&#10;  }&#10;&#10;  protected void testConstructor(int width, int height) {&#10;    Spacecraft s = new Spacecraft(width, height);&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.x == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.y == 0);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot;+ height +&quot;), the height should be equal to &quot; + height, s.height == height);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot;+ height +&quot;), the width should be equal to &quot; + width, s.width == width);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor1() {&#10;    testConstructor(1, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor2() {&#10;    testConstructor(1, 2);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor3() {&#10;    testConstructor(20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor4() {&#10;    testConstructor(261, 200);&#10;  }&#10;&#10;  protected void testArea(int width, int height) {&#10;    Spacecraft s = new Spacecraft(width, height);&#10;    int area = width * height;&#10;    Assert.assertEquals(&quot;Incorrect area for new Spacecraft(&quot; + width + &quot;, &quot;+ height +&quot;)&quot;, area, s.area());&#10;  }&#10;&#10;  @Test&#10;  public void testArea1() { testArea(1, 1); }&#10;&#10;  @Test&#10;  public void testArea2() { testArea(1, 2); }&#10;&#10;  @Test&#10;  public void testArea3() { testArea(20, 19); }&#10;&#10;  @Test&#10;  public void testArea4() { testArea(261, 200); }&#10;&#10;  @Test&#10;  public void testArea5() { testArea(47, 47); }&#10;&#10;  protected void testPerimeter(int width, int height) {&#10;    Spacecraft s = new Spacecraft(width, height);&#10;    int perimeter = (width + height)*2;&#10;    Assert.assertEquals(&quot;Incorrect perimeter for new Spacecraft(&quot; + width + &quot;, &quot;+ height +&quot;)&quot;, perimeter, s.perimeter());&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter1() { testPerimeter(1, 1); }&#10;&#10;  @Test&#10;  public void testPerimeter2() { testPerimeter(1, 2); }&#10;&#10;  @Test&#10;  public void testPerimeter3() { testPerimeter(20, 19); }&#10;&#10;  @Test&#10;  public void testPerimeter4() { testPerimeter(261, 200); }&#10;&#10;  @Test&#10;  public void testPerimeter5() { testPerimeter(47, 47); }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/Spacecraft.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="84" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="76" />
                                            <option name="offset" value="84" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab02" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="02-Classes and objects" />
                                                <option name="taskName" value="Constructor overloading" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="116" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="89" />
                                            <option name="offset" value="166" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab02" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="02-Classes and objects" />
                                                <option name="taskName" value="Constructor overloading" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="2" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="199" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="49" />
                                            <option name="offset" value="312" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab02" />
                                                <option name="placeholderIndex" value="2" />
                                                <option name="sectionName" value="02-Classes and objects" />
                                                <option name="taskName" value="Constructor overloading" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="3" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="237" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="144" />
                                            <option name="offset" value="373" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Spacecraft.java" />
                                      <option name="text" value="public class Spacecraft {&#10;    int x;&#10;    int y;&#10;    int width;&#10;    int height;&#10;&#10;    /* write your code here */&#10;&#10;    /* write your code here */&#10;&#10;    public Spacecraft(int width, int height) {&#10;        /* write your code here */&#10;    }&#10;&#10;    /* write your code here */&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565772114000" />
                          </EduTask>
                          <EduTask>
                            <option name="customPresentableName" value="Instance method invocation" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;p&gt;&#10;  In Java, we can call an instance method &lt;code&gt;m&lt;/code&gt; of object &lt;code&gt;o&lt;/code&gt; using syntax &lt;/p&gt;&lt;pre&gt;&lt;code&gt;o.m(...)&lt;/code&gt;&lt;/pre&gt;&#10;&lt;p&gt;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  For example, in our &lt;code&gt;Spacecraft&lt;/code&gt; class we have written so far, we can obtain the area used by a spacecraft as follows:&#10;  &lt;/p&gt;&lt;pre&gt;&lt;code&gt;&#10;  // construct a huge spacecraft&#10;  Spacecraft s = new Spacecraft(261, 200);&#10;  // print its area on the screen&#10;  System.out.println(s.area());&#10;  &lt;/code&gt;&lt;/pre&gt;&#10;&lt;p&gt;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  We can use the &lt;code&gt;Spacecraft&lt;/code&gt; class we have written so far to create many spacecrafts of various sizes, but currently, all of them remain at the origin (coordinate (0, 0)).  We need to be able to move the spacecraft elsewhere on the 2-dimensional plane.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  To do this, we declare another method called &lt;code&gt;setPosition&lt;/code&gt; that takes two arguments, the x- and y-coordinates of the new position of the spacecraft.  When called, the method should set the spacecraft's position as provided.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  Complete the implementation of this method.&#10;&lt;/p&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="792675" />
                            <option name="index" value="6" />
                            <option name="name" value="Instance method invocation" />
                            <option name="record" value="7" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="test/Tests.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/Tests.java" />
                                      <option name="text" value="import org.junit.Assert;&#10;import org.junit.Test;&#10;&#10;public class Tests {&#10;    @Test&#10;    public void testDefaultConstructor() {&#10;        Spacecraft s = new Spacecraft();&#10;        Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.x == 0);&#10;        Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.y == 0);&#10;        Assert.assertTrue(&quot;Height should be equal to 1&quot;, s.height == 1);&#10;        Assert.assertTrue(&quot;Width should be equal to 1&quot;, s.width == 1);&#10;    }&#10;&#10;    protected void testSqConstructor(int side) {&#10;        Spacecraft s = new Spacecraft(side);&#10;        Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.x == 0);&#10;        Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.y == 0);&#10;        Assert.assertTrue(&quot;For new Spacecraft(&quot; + side + &quot;), the height should be equal to &quot; + side, s.height == side);&#10;        Assert.assertTrue(&quot;For new Spacecraft(&quot; + side + &quot;), the width should be equal to &quot; + side, s.width == side);&#10;    }&#10;&#10;    @Test&#10;    public void testSqConstructor1() {&#10;        testSqConstructor(1);&#10;    }&#10;&#10;    @Test&#10;    public void testSqConstructor62() {&#10;        testSqConstructor(62);&#10;    }&#10;&#10;    @Test&#10;    public void testSqConstructor200() {&#10;        testSqConstructor(200);&#10;    }&#10;&#10;    protected void testConstructor(int width, int height) {&#10;        Spacecraft s = new Spacecraft(width, height);&#10;        Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.x == 0);&#10;        Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.y == 0);&#10;        Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the height should be equal to &quot; + height, s.height == height);&#10;        Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the width should be equal to &quot; + width, s.width == width);&#10;    }&#10;&#10;    @Test&#10;    public void testConstructor1() {&#10;        testConstructor(1, 1);&#10;    }&#10;&#10;    @Test&#10;    public void testConstructor2() {&#10;        testConstructor(1, 2);&#10;    }&#10;&#10;    @Test&#10;    public void testConstructor3() {&#10;        testConstructor(20, 19);&#10;    }&#10;&#10;    @Test&#10;    public void testConstructor4() {&#10;        testConstructor(261, 200);&#10;    }&#10;&#10;    protected void testArea(int width, int height) {&#10;        Spacecraft s = new Spacecraft(width, height);&#10;        int area = width * height;&#10;        Assert.assertEquals(&quot;Incorrect area for new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;)&quot;, area, s.area());&#10;    }&#10;&#10;    @Test&#10;    public void testArea1() {&#10;        testArea(1, 1);&#10;    }&#10;&#10;    @Test&#10;    public void testArea2() {&#10;        testArea(1, 2);&#10;    }&#10;&#10;    @Test&#10;    public void testArea3() {&#10;        testArea(20, 19);&#10;    }&#10;&#10;    @Test&#10;    public void testArea4() {&#10;        testArea(261, 200);&#10;    }&#10;&#10;    @Test&#10;    public void testArea5() {&#10;        testArea(47, 47);&#10;    }&#10;&#10;    protected void testPerimeter(int width, int height) {&#10;        Spacecraft s = new Spacecraft(width, height);&#10;        int perimeter = (width + height) * 2;&#10;        Assert.assertEquals(&quot;Incorrect perimeter for new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;)&quot;, perimeter, s.perimeter());&#10;    }&#10;&#10;    @Test&#10;    public void testPerimeter1() {&#10;        testPerimeter(1, 1);&#10;    }&#10;&#10;    @Test&#10;    public void testPerimeter2() {&#10;        testPerimeter(1, 2);&#10;    }&#10;&#10;    @Test&#10;    public void testPerimeter3() {&#10;        testPerimeter(20, 19);&#10;    }&#10;&#10;    @Test&#10;    public void testPerimeter4() {&#10;        testPerimeter(261, 200);&#10;    }&#10;&#10;    @Test&#10;    public void testPerimeter5() {&#10;        testPerimeter(47, 47);&#10;    }&#10;&#10;    protected void checkSpacecraft(Spacecraft s, int width, int height, int x, int y) {&#10;        Assert.assertTrue(&quot;For s.setPosition(&quot; + x + &quot;, &quot; + y + &quot;), the x-coordinate should be &quot; + x, s.x == x);&#10;        Assert.assertTrue(&quot;For s.setPosition(&quot; + x + &quot;, &quot; + y + &quot;), the y-coordinate should be &quot; + y, s.y == y);&#10;        Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the height should be equal to &quot; + height, s.height == height);&#10;        Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the width should be equal to &quot; + width, s.width == width);&#10;    }&#10;&#10;    @Test&#10;    public void testSetPosition1() {&#10;        Spacecraft s = new Spacecraft();&#10;        checkSpacecraft(s, 1, 1, 0, 0);&#10;        s.setPosition(25, 47);&#10;        checkSpacecraft(s, 1, 1, 25, 47);&#10;        s.setPosition(20, 19);&#10;        checkSpacecraft(s, 1, 1, 20, 19);&#10;    }&#10;&#10;    @Test&#10;    public void testSetPosition2() {&#10;        Spacecraft s = new Spacecraft(17);&#10;        checkSpacecraft(s, 17, 17, 0, 0);&#10;        s.setPosition(25, 47);&#10;        checkSpacecraft(s, 17, 17, 25, 47);&#10;        s.setPosition(20, 19);&#10;        checkSpacecraft(s, 17, 17, 20, 19);&#10;    }&#10;&#10;    @Test&#10;    public void testSetPosition3() {&#10;        Spacecraft s = new Spacecraft(20, 19);&#10;        checkSpacecraft(s, 20, 19, 0, 0);&#10;        s.setPosition(25, 47);&#10;        checkSpacecraft(s, 20, 19, 25, 47);&#10;        s.setPosition(20, 19);&#10;        checkSpacecraft(s, 20, 19, 20, 19);&#10;    }&#10;    &#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/Spacecraft.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="84" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="76" />
                                            <option name="offset" value="84" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab02" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="02-Classes and objects" />
                                                <option name="taskName" value="Instance methods" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="116" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="89" />
                                            <option name="offset" value="166" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab02" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="02-Classes and objects" />
                                                <option name="taskName" value="Instance methods" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="2" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="199" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="49" />
                                            <option name="offset" value="312" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab02" />
                                                <option name="placeholderIndex" value="2" />
                                                <option name="sectionName" value="02-Classes and objects" />
                                                <option name="taskName" value="Instance methods" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="3" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="237" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="144" />
                                            <option name="offset" value="373" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab02" />
                                                <option name="placeholderIndex" value="3" />
                                                <option name="sectionName" value="02-Classes and objects" />
                                                <option name="taskName" value="Instance methods" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="4" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="317" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="31" />
                                            <option name="offset" value="571" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Spacecraft.java" />
                                      <option name="text" value="public class Spacecraft {&#10;    int x;&#10;    int y;&#10;    int width;&#10;    int height;&#10;&#10;    /* write your code here */&#10;&#10;    /* write your code here */&#10;&#10;    public Spacecraft(int width, int height) {&#10;        /* write your code here */&#10;    }&#10;&#10;    /* write your code here */&#10;&#10;    public void setPosition(int x, int y) {&#10;        /* write your code here */&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565772117000" />
                          </EduTask>
                          <EduTask>
                            <option name="customPresentableName" value="Instance method overloading" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;p&gt;&#10;  Like constructors, instance methods can be overloaded.  Overloaded instance methods have the same name, but take different arguments (either the number of arguments, or the types of arguments, or both).&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  Over the course of the game, a spacecraft can change its size depending on its speed.  (Special relativity plays a role here, but we will not worry about the details.)  So, we need a way to update the size.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  First, write a method called &lt;code&gt;setSize&lt;/code&gt; that takes two arguments, the new width and the new height of the spacecraft, both integers, in that order, and update the spacecraft's size accordingly.  This method should return nothing (&lt;code&gt;void&lt;/code&gt;).&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  Next, overload the &lt;code&gt;setSize&lt;/code&gt; method with another that takes one integer argument that represents both the width and height of the spacecraft, and update the size accordingly.  In other words, this method might be invoked when the spacecraft's shapes is becoming a square.&#10;&lt;/p&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="792676" />
                            <option name="index" value="7" />
                            <option name="name" value="Instance method overloading" />
                            <option name="record" value="1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="test/Tests.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/Tests.java" />
                                      <option name="text" value="import org.junit.Assert;&#10;import org.junit.Test;&#10;&#10;public class Tests {&#10;    @Test&#10;    public void testDefaultConstructor() {&#10;        Spacecraft s = new Spacecraft();&#10;        Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.x == 0);&#10;        Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.y == 0);&#10;        Assert.assertTrue(&quot;Height should be equal to 1&quot;, s.height == 1);&#10;        Assert.assertTrue(&quot;Width should be equal to 1&quot;, s.width == 1);&#10;    }&#10;&#10;    protected void testSqConstructor(int side) {&#10;        Spacecraft s = new Spacecraft(side);&#10;        Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.x == 0);&#10;        Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.y == 0);&#10;        Assert.assertTrue(&quot;For new Spacecraft(&quot; + side + &quot;), the height should be equal to &quot; + side, s.height == side);&#10;        Assert.assertTrue(&quot;For new Spacecraft(&quot; + side + &quot;), the width should be equal to &quot; + side, s.width == side);&#10;    }&#10;&#10;    @Test&#10;    public void testSqConstructor1() {&#10;        testSqConstructor(1);&#10;    }&#10;&#10;    @Test&#10;    public void testSqConstructor62() {&#10;        testSqConstructor(62);&#10;    }&#10;&#10;    @Test&#10;    public void testSqConstructor200() {&#10;        testSqConstructor(200);&#10;    }&#10;&#10;    protected void testConstructor(int width, int height) {&#10;        Spacecraft s = new Spacecraft(width, height);&#10;        Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.x == 0);&#10;        Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.y == 0);&#10;        Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the height should be equal to &quot; + height, s.height == height);&#10;        Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the width should be equal to &quot; + width, s.width == width);&#10;    }&#10;&#10;    @Test&#10;    public void testConstructor1() {&#10;        testConstructor(1, 1);&#10;    }&#10;&#10;    @Test&#10;    public void testConstructor2() {&#10;        testConstructor(1, 2);&#10;    }&#10;&#10;    @Test&#10;    public void testConstructor3() {&#10;        testConstructor(20, 19);&#10;    }&#10;&#10;    @Test&#10;    public void testConstructor4() {&#10;        testConstructor(261, 200);&#10;    }&#10;&#10;    protected void testArea(int width, int height) {&#10;        Spacecraft s = new Spacecraft(width, height);&#10;        int area = width * height;&#10;        Assert.assertEquals(&quot;Incorrect area for new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;)&quot;, area, s.area());&#10;    }&#10;&#10;    @Test&#10;    public void testArea1() {&#10;        testArea(1, 1);&#10;    }&#10;&#10;    @Test&#10;    public void testArea2() {&#10;        testArea(1, 2);&#10;    }&#10;&#10;    @Test&#10;    public void testArea3() {&#10;        testArea(20, 19);&#10;    }&#10;&#10;    @Test&#10;    public void testArea4() {&#10;        testArea(261, 200);&#10;    }&#10;&#10;    @Test&#10;    public void testArea5() {&#10;        testArea(47, 47);&#10;    }&#10;&#10;    protected void testPerimeter(int width, int height) {&#10;        Spacecraft s = new Spacecraft(width, height);&#10;        int perimeter = (width + height) * 2;&#10;        Assert.assertEquals(&quot;Incorrect perimeter for new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;)&quot;, perimeter, s.perimeter());&#10;    }&#10;&#10;    @Test&#10;    public void testPerimeter1() {&#10;        testPerimeter(1, 1);&#10;    }&#10;&#10;    @Test&#10;    public void testPerimeter2() {&#10;        testPerimeter(1, 2);&#10;    }&#10;&#10;    @Test&#10;    public void testPerimeter3() {&#10;        testPerimeter(20, 19);&#10;    }&#10;&#10;    @Test&#10;    public void testPerimeter4() {&#10;        testPerimeter(261, 200);&#10;    }&#10;&#10;    @Test&#10;    public void testPerimeter5() {&#10;        testPerimeter(47, 47);&#10;    }&#10;&#10;    protected void checkSpacecraft(Spacecraft s, int width, int height, int x, int y) {&#10;        Assert.assertTrue(&quot;For s.setPosition(&quot; + x + &quot;, &quot; + y + &quot;), the x-coordinate should be &quot; + x, s.x == x);&#10;        Assert.assertTrue(&quot;For s.setPosition(&quot; + x + &quot;, &quot; + y + &quot;), the y-coordinate should be &quot; + y, s.y == y);&#10;        Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the height should be equal to &quot; + height, s.height == height);&#10;        Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the width should be equal to &quot; + width, s.width == width);&#10;    }&#10;&#10;    @Test&#10;    public void testSetPosition1() {&#10;        Spacecraft s = new Spacecraft();&#10;        checkSpacecraft(s, 1, 1, 0, 0);&#10;        s.setPosition(25, 47);&#10;        checkSpacecraft(s, 1, 1, 25, 47);&#10;        s.setPosition(20, 19);&#10;        checkSpacecraft(s, 1, 1, 20, 19);&#10;    }&#10;&#10;    @Test&#10;    public void testSetPosition2() {&#10;        Spacecraft s = new Spacecraft(17);&#10;        checkSpacecraft(s, 17, 17, 0, 0);&#10;        s.setPosition(25, 47);&#10;        checkSpacecraft(s, 17, 17, 25, 47);&#10;        s.setPosition(20, 19);&#10;        checkSpacecraft(s, 17, 17, 20, 19);&#10;    }&#10;&#10;    @Test&#10;    public void testSetPosition3() {&#10;        Spacecraft s = new Spacecraft(20, 19);&#10;        checkSpacecraft(s, 20, 19, 0, 0);&#10;        s.setPosition(25, 47);&#10;        checkSpacecraft(s, 20, 19, 25, 47);&#10;        s.setPosition(20, 19);&#10;        checkSpacecraft(s, 20, 19, 20, 19);&#10;    }&#10;&#10;    @Test&#10;    public void testSetSize1() {&#10;        Spacecraft s = new Spacecraft();&#10;        s.setSize(47);&#10;        checkSpacecraft(s, 47, 47, 0, 0);&#10;        s.setPosition(261, 200);&#10;        checkSpacecraft(s, 47, 47, 261, 200);&#10;    }&#10;&#10;    @Test&#10;    public void testSetSize2() {&#10;        Spacecraft s = new Spacecraft(62);&#10;        s.setSize(47);&#10;        checkSpacecraft(s, 47, 47, 0, 0);&#10;        s.setPosition(261, 200);&#10;        checkSpacecraft(s, 47, 47, 261, 200);&#10;    }&#10;&#10;    @Test&#10;    public void testSetSize3() {&#10;        Spacecraft s = new Spacecraft(20, 19);&#10;        s.setSize(47);&#10;        checkSpacecraft(s, 47, 47, 0, 0);&#10;        s.setPosition(261, 200);&#10;        checkSpacecraft(s, 47, 47, 261, 200);&#10;    }&#10;&#10;    @Test&#10;    public void testSetSize4() {&#10;        Spacecraft s = new Spacecraft();&#10;        s.setSize(25, 47);&#10;        checkSpacecraft(s, 25, 47, 0, 0);&#10;        s.setPosition(261, 200);&#10;        checkSpacecraft(s, 25, 47, 261, 200);&#10;    }&#10;&#10;    @Test&#10;    public void testSetSize5() {&#10;        Spacecraft s = new Spacecraft(62);&#10;        s.setSize(20, 19);&#10;        checkSpacecraft(s, 20, 19, 0, 0);&#10;        s.setPosition(261, 200);&#10;        checkSpacecraft(s, 20, 19, 261, 200);&#10;    }&#10;&#10;    @Test&#10;    public void testSetSize6() {&#10;        Spacecraft s = new Spacecraft(20, 19);&#10;        s.setSize(261, 200);&#10;        checkSpacecraft(s, 261, 200, 0, 0);&#10;        s.setPosition(261, 200);&#10;        checkSpacecraft(s, 261, 200, 261, 200);&#10;    }&#10;&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/Spacecraft.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="84" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="76" />
                                            <option name="offset" value="84" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab02" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="02-Classes and objects" />
                                                <option name="taskName" value="Instance method invocation" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="116" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="89" />
                                            <option name="offset" value="166" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab02" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="02-Classes and objects" />
                                                <option name="taskName" value="Instance method invocation" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="2" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="199" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="49" />
                                            <option name="offset" value="312" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab02" />
                                                <option name="placeholderIndex" value="2" />
                                                <option name="sectionName" value="02-Classes and objects" />
                                                <option name="taskName" value="Instance method invocation" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="3" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="237" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="144" />
                                            <option name="offset" value="373" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab02" />
                                                <option name="placeholderIndex" value="3" />
                                                <option name="sectionName" value="02-Classes and objects" />
                                                <option name="taskName" value="Instance method invocation" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="4" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="317" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="31" />
                                            <option name="offset" value="571" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab02" />
                                                <option name="placeholderIndex" value="4" />
                                                <option name="sectionName" value="02-Classes and objects" />
                                                <option name="taskName" value="Instance method invocation" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="5" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="355" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="223" />
                                            <option name="offset" value="614" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Spacecraft.java" />
                                      <option name="text" value="public class Spacecraft {&#10;    int x;&#10;    int y;&#10;    int width;&#10;    int height;&#10;&#10;    /* write your code here */&#10;&#10;    /* write your code here */&#10;&#10;    public Spacecraft(int width, int height) {&#10;        /* write your code here */&#10;    }&#10;&#10;    /* write your code here */&#10;&#10;    public void setPosition(int x, int y) {&#10;        /* write your code here */&#10;    }&#10;&#10;    /* write your code here */&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565772121000" />
                          </EduTask>
                        </list>
                      </option>
                    </FrameworkLesson>
                  </list>
                </option>
              </Section>
              <Section>
                <option name="courseId" value="56570" />
                <option name="customPresentableName" />
                <option name="id" value="91313" />
                <option name="index" value="3" />
                <option name="name" value="03-Encapsulation" />
                <option name="position" value="3" />
                <option name="updateDate" value="1566707398000" />
                <option name="items">
                  <list>
                    <FrameworkLesson>
                      <option name="currentTaskIndex" value="0" />
                      <option name="customPresentableName" />
                      <option name="id" value="247878" />
                      <option name="index" value="1" />
                      <option name="name" value="Lab03" />
                      <option name="updateDate" value="1566707398000" />
                      <option name="unitId" value="0" />
                      <option name="items">
                        <list>
                          <EduTask>
                            <option name="customPresentableName" value="Encapsulation" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;p&gt;&#10;  In the last lab, we embarked on a design of spacecraft representation.  Although the code we wrote last time works just fine, there are some design issues we did not consider, that could introduce complications when our codebase gets larger.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  Shown alongside this task is the code that you wrote last time.  Recall that each spacecraft is located in a 2-dimensional plane specified by (x, y) coordinates.  In other words, knowing just the x- or the y-coordinate of the spacecraft doesn't help us locate it.  We need a way to guarantee that when we ask for the location of a spacecraft, we always get both its x- and y-coordinates.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  To achieve this, we use a concept called &lt;em&gt;encapsulation&lt;/em&gt;, that will put all the data belonging to the same component into one place.  To put this in a Java context, we will create a class that will represent a point in the 2-dimensional plane.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  In fact, we have employed encapsulation already.  The class &lt;code&gt;Spacecraft&lt;/code&gt; that we have written is exactly an encapsulation of the data needed for displaying a spacecraft on the screen.  Nevertheless, the concept of encapsulation should be applied repeatedly, to make our code as &lt;em&gt;modular&lt;/em&gt; as possible, i.e., each component belongs to its own object.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  In the first part of this lab, we will explore the idea of encapsulation, which will then let us talk about &lt;em&gt;abstraction&lt;/em&gt; and &lt;em&gt;access protection&lt;/em&gt;.&#10;&lt;/p&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="792677" />
                            <option name="index" value="1" />
                            <option name="name" value="Encapsulation" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Spacecraft.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="84" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="76" />
                                            <option name="offset" value="84" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab02" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="02-Classes and objects" />
                                                <option name="taskName" value="Instance method overloading" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="116" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="89" />
                                            <option name="offset" value="166" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab02" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="02-Classes and objects" />
                                                <option name="taskName" value="Instance method overloading" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="2" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="199" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="49" />
                                            <option name="offset" value="312" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab02" />
                                                <option name="placeholderIndex" value="2" />
                                                <option name="sectionName" value="02-Classes and objects" />
                                                <option name="taskName" value="Instance method overloading" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="3" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="237" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="144" />
                                            <option name="offset" value="373" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab02" />
                                                <option name="placeholderIndex" value="3" />
                                                <option name="sectionName" value="02-Classes and objects" />
                                                <option name="taskName" value="Instance method overloading" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="4" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="317" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="31" />
                                            <option name="offset" value="571" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab02" />
                                                <option name="placeholderIndex" value="4" />
                                                <option name="sectionName" value="02-Classes and objects" />
                                                <option name="taskName" value="Instance method overloading" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="5" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="355" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="223" />
                                            <option name="offset" value="614" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab02" />
                                                <option name="placeholderIndex" value="5" />
                                                <option name="sectionName" value="02-Classes and objects" />
                                                <option name="taskName" value="Instance method overloading" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Spacecraft.java" />
                                      <option name="text" value="public class Spacecraft {&#10;    int x;&#10;    int y;&#10;    int width;&#10;    int height;&#10;&#10;    /* write your code here */&#10;&#10;    /* write your code here */&#10;&#10;    public Spacecraft(int width, int height) {&#10;        /* write your code here */&#10;    }&#10;&#10;    /* write your code here */&#10;&#10;    public void setPosition(int x, int y) {&#10;        /* write your code here */&#10;    }&#10;&#10;    /* write your code here */&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="test/Tests.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/Tests.java" />
                                      <option name="text" value="import org.junit.Assert;&#10;import org.junit.Test;&#10;&#10;public class Tests {&#10;    @Test&#10;    public void testDefaultConstructor() {&#10;        Spacecraft s = new Spacecraft();&#10;        Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.x == 0);&#10;        Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.y == 0);&#10;        Assert.assertTrue(&quot;Height should be equal to 1&quot;, s.height == 1);&#10;        Assert.assertTrue(&quot;Width should be equal to 1&quot;, s.width == 1);&#10;    }&#10;&#10;    protected void testSqConstructor(int side) {&#10;        Spacecraft s = new Spacecraft(side);&#10;        Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.x == 0);&#10;        Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.y == 0);&#10;        Assert.assertTrue(&quot;For new Spacecraft(&quot; + side + &quot;), the height should be equal to &quot; + side, s.height == side);&#10;        Assert.assertTrue(&quot;For new Spacecraft(&quot; + side + &quot;), the width should be equal to &quot; + side, s.width == side);&#10;    }&#10;&#10;    @Test&#10;    public void testSqConstructor1() {&#10;        testSqConstructor(1);&#10;    }&#10;&#10;    @Test&#10;    public void testSqConstructor62() {&#10;        testSqConstructor(62);&#10;    }&#10;&#10;    @Test&#10;    public void testSqConstructor200() {&#10;        testSqConstructor(200);&#10;    }&#10;&#10;    protected void testConstructor(int width, int height) {&#10;        Spacecraft s = new Spacecraft(width, height);&#10;        Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.x == 0);&#10;        Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.y == 0);&#10;        Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the height should be equal to &quot; + height, s.height == height);&#10;        Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the width should be equal to &quot; + width, s.width == width);&#10;    }&#10;&#10;    @Test&#10;    public void testConstructor1() {&#10;        testConstructor(1, 1);&#10;    }&#10;&#10;    @Test&#10;    public void testConstructor2() {&#10;        testConstructor(1, 2);&#10;    }&#10;&#10;    @Test&#10;    public void testConstructor3() {&#10;        testConstructor(20, 19);&#10;    }&#10;&#10;    @Test&#10;    public void testConstructor4() {&#10;        testConstructor(261, 200);&#10;    }&#10;&#10;    protected void testArea(int width, int height) {&#10;        Spacecraft s = new Spacecraft(width, height);&#10;        int area = width * height;&#10;        Assert.assertEquals(&quot;Incorrect area for new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;)&quot;, area, s.area());&#10;    }&#10;&#10;    @Test&#10;    public void testArea1() {&#10;        testArea(1, 1);&#10;    }&#10;&#10;    @Test&#10;    public void testArea2() {&#10;        testArea(1, 2);&#10;    }&#10;&#10;    @Test&#10;    public void testArea3() {&#10;        testArea(20, 19);&#10;    }&#10;&#10;    @Test&#10;    public void testArea4() {&#10;        testArea(261, 200);&#10;    }&#10;&#10;    @Test&#10;    public void testArea5() {&#10;        testArea(47, 47);&#10;    }&#10;&#10;    protected void testPerimeter(int width, int height) {&#10;        Spacecraft s = new Spacecraft(width, height);&#10;        int perimeter = (width + height) * 2;&#10;        Assert.assertEquals(&quot;Incorrect perimeter for new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;)&quot;, perimeter, s.perimeter());&#10;    }&#10;&#10;    @Test&#10;    public void testPerimeter1() {&#10;        testPerimeter(1, 1);&#10;    }&#10;&#10;    @Test&#10;    public void testPerimeter2() {&#10;        testPerimeter(1, 2);&#10;    }&#10;&#10;    @Test&#10;    public void testPerimeter3() {&#10;        testPerimeter(20, 19);&#10;    }&#10;&#10;    @Test&#10;    public void testPerimeter4() {&#10;        testPerimeter(261, 200);&#10;    }&#10;&#10;    @Test&#10;    public void testPerimeter5() {&#10;        testPerimeter(47, 47);&#10;    }&#10;&#10;    protected void checkSpacecraft(Spacecraft s, int width, int height, int x, int y) {&#10;        Assert.assertTrue(&quot;For s.setPosition(&quot; + x + &quot;, &quot; + y + &quot;), the x-coordinate should be &quot; + x, s.x == x);&#10;        Assert.assertTrue(&quot;For s.setPosition(&quot; + x + &quot;, &quot; + y + &quot;), the y-coordinate should be &quot; + y, s.y == y);&#10;        Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the height should be equal to &quot; + height, s.height == height);&#10;        Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the width should be equal to &quot; + width, s.width == width);&#10;    }&#10;&#10;    @Test&#10;    public void testSetPosition1() {&#10;        Spacecraft s = new Spacecraft();&#10;        checkSpacecraft(s, 1, 1, 0, 0);&#10;        s.setPosition(25, 47);&#10;        checkSpacecraft(s, 1, 1, 25, 47);&#10;        s.setPosition(20, 19);&#10;        checkSpacecraft(s, 1, 1, 20, 19);&#10;    }&#10;&#10;    @Test&#10;    public void testSetPosition2() {&#10;        Spacecraft s = new Spacecraft(17);&#10;        checkSpacecraft(s, 17, 17, 0, 0);&#10;        s.setPosition(25, 47);&#10;        checkSpacecraft(s, 17, 17, 25, 47);&#10;        s.setPosition(20, 19);&#10;        checkSpacecraft(s, 17, 17, 20, 19);&#10;    }&#10;&#10;    @Test&#10;    public void testSetPosition3() {&#10;        Spacecraft s = new Spacecraft(20, 19);&#10;        checkSpacecraft(s, 20, 19, 0, 0);&#10;        s.setPosition(25, 47);&#10;        checkSpacecraft(s, 20, 19, 25, 47);&#10;        s.setPosition(20, 19);&#10;        checkSpacecraft(s, 20, 19, 20, 19);&#10;    }&#10;&#10;    @Test&#10;    public void testSetSize1() {&#10;        Spacecraft s = new Spacecraft();&#10;        s.setSize(47);&#10;        checkSpacecraft(s, 47, 47, 0, 0);&#10;        s.setPosition(261, 200);&#10;        checkSpacecraft(s, 47, 47, 261, 200);&#10;    }&#10;&#10;    @Test&#10;    public void testSetSize2() {&#10;        Spacecraft s = new Spacecraft(62);&#10;        s.setSize(47);&#10;        checkSpacecraft(s, 47, 47, 0, 0);&#10;        s.setPosition(261, 200);&#10;        checkSpacecraft(s, 47, 47, 261, 200);&#10;    }&#10;&#10;    @Test&#10;    public void testSetSize3() {&#10;        Spacecraft s = new Spacecraft(20, 19);&#10;        s.setSize(47);&#10;        checkSpacecraft(s, 47, 47, 0, 0);&#10;        s.setPosition(261, 200);&#10;        checkSpacecraft(s, 47, 47, 261, 200);&#10;    }&#10;&#10;    @Test&#10;    public void testSetSize4() {&#10;        Spacecraft s = new Spacecraft();&#10;        s.setSize(25, 47);&#10;        checkSpacecraft(s, 25, 47, 0, 0);&#10;        s.setPosition(261, 200);&#10;        checkSpacecraft(s, 25, 47, 261, 200);&#10;    }&#10;&#10;    @Test&#10;    public void testSetSize5() {&#10;        Spacecraft s = new Spacecraft(62);&#10;        s.setSize(20, 19);&#10;        checkSpacecraft(s, 20, 19, 0, 0);&#10;        s.setPosition(261, 200);&#10;        checkSpacecraft(s, 20, 19, 261, 200);&#10;    }&#10;&#10;    @Test&#10;    public void testSetSize6() {&#10;        Spacecraft s = new Spacecraft(20, 19);&#10;        s.setSize(261, 200);&#10;        checkSpacecraft(s, 261, 200, 0, 0);&#10;        s.setPosition(261, 200);&#10;        checkSpacecraft(s, 261, 200, 261, 200);&#10;    }&#10;&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1566707364000" />
                          </EduTask>
                          <EduTask>
                            <option name="customPresentableName" value="Encapsulation with class" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;p&gt;&#10;  First, we will create a class called &lt;code&gt;Point&lt;/code&gt; that will let us encapsulate the coordinates of a spacecraft.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  Write a constructor that takes the x- and y-coordinates (as integers, in that order) of a point in the 2-dimensional plane.  Declare fields as appropriate and make them &lt;code&gt;private&lt;/code&gt;, so that client code cannot change the coordinates arbitrarily.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  Then, complete the body of instance methods &lt;code&gt;getX&lt;/code&gt; and &lt;code&gt;getY&lt;/code&gt; to return the appropriate coordinate of a &lt;code&gt;Point&lt;/code&gt; object.  Observe that these methods have been declared &lt;code&gt;public&lt;/code&gt; so that any code can use it.  Since the primary goal of these methods is to fetch and return some properties of an object, they are called &lt;em&gt;getters&lt;/em&gt;.&#10;&lt;/p&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="792678" />
                            <option name="index" value="2" />
                            <option name="name" value="Encapsulation with class" />
                            <option name="record" value="3" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Point.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="25" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="117" />
                                            <option name="offset" value="27" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="85" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="9" />
                                            <option name="offset" value="169" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="2" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="151" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="9" />
                                            <option name="offset" value="205" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Point.java" />
                                      <option name="text" value="public class Point {&#10;    /* write your code here */&#10;&#10;    public int getX() {&#10;        /* write your code here */&#10;    }&#10;&#10;    public int getY() {&#10;        /* write your code here */&#10;    }&#10;}&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/Spacecraft.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="84" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="76" />
                                            <option name="offset" value="84" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Encapsulation" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="116" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="89" />
                                            <option name="offset" value="166" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Encapsulation" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="2" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="199" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="49" />
                                            <option name="offset" value="312" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="2" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Encapsulation" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="3" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="237" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="144" />
                                            <option name="offset" value="373" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="3" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Encapsulation" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="4" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="317" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="31" />
                                            <option name="offset" value="571" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="4" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Encapsulation" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="5" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="355" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="223" />
                                            <option name="offset" value="614" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="5" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Encapsulation" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Spacecraft.java" />
                                      <option name="text" value="public class Spacecraft {&#10;    int x;&#10;    int y;&#10;    int width;&#10;    int height;&#10;&#10;    /* write your code here */&#10;&#10;    /* write your code here */&#10;&#10;    public Spacecraft(int width, int height) {&#10;        /* write your code here */&#10;    }&#10;&#10;    /* write your code here */&#10;&#10;    public void setPosition(int x, int y) {&#10;        /* write your code here */&#10;    }&#10;&#10;    /* write your code here */&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="test/Tests.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/Tests.java" />
                                      <option name="text" value="import org.junit.Assert;&#10;import org.junit.Test;&#10;&#10;public class Tests {&#10;  protected void testPoint(int x, int y) {&#10;    Point p = new Point(x, y);&#10;    Assert.assertEquals(&quot;Incorrect x-coordinate.&quot;, x, p.getX());&#10;    Assert.assertEquals(&quot;Incorrect y-coordinate.&quot;, y, p.getY());&#10;  }&#10;&#10;  @Test&#10;  public void testPoint1() {&#10;    testPoint(0, 0);&#10;  }&#10;&#10;  @Test&#10;  public void testPoint2() {&#10;    testPoint(0, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testPoint3() { testPoint(1, 0);  }&#10;&#10;  @Test&#10;  public void testPoint4() {&#10;    testPoint(261, 200);&#10;  }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1566707364000" />
                          </EduTask>
                          <EduTask>
                            <option name="customPresentableName" value="Refactoring with class" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;p&gt;&#10;  Now that we have created the &lt;code&gt;Point&lt;/code&gt; class, we can use it in our program.  We will perform a process called &lt;em&gt;refactoring&lt;/em&gt;, in which we modify our code to use the new design.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  Modify class &lt;code&gt;Spacecraft&lt;/code&gt; to use &lt;code&gt;Point&lt;/code&gt;.  Declare new field(s) as appropriate.  Remove unnecessary fields after refactoring.  Again, be sure to make all the fields &lt;code&gt;private&lt;/code&gt; to prevent client code from changing our spacecraft specs arbitrarily.&#10;&lt;/p&gt;&#10;&#10;&lt;div class=&quot;hint&quot;&gt;&#10;  You will need to modify constructors and methods to create and use &lt;code&gt;Point&lt;/code&gt; objects.&#10;&lt;/div&gt;&#10;&#10;&lt;p&gt;&#10;  Next, write the following getters, which are all &lt;code&gt;public&lt;/code&gt;:&#10;&lt;/p&gt;&#10;&lt;ul&gt;&#10;  &lt;li&gt;&lt;code&gt;position()&lt;/code&gt;: returns the current position of the spacecraft as a &lt;code&gt;Point&lt;/code&gt;&lt;/li&gt;&#10;  &lt;li&gt;&lt;code&gt;width()&lt;/code&gt;: returns the width of the spacecraft&lt;/li&gt;&#10;  &lt;li&gt;&lt;code&gt;height()&lt;/code&gt;: returns the height of the spacecraft&lt;/li&gt;&#10;&lt;/ul&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="792679" />
                            <option name="index" value="3" />
                            <option name="name" value="Refactoring with class" />
                            <option name="record" value="4" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Spacecraft.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="48" />
                                                <option name="offset" value="30" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="1" />
                                            <option name="offset" value="1412" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="int x;&#10;    int y;&#10;    int width;&#10;    int height;" />
                                            <option name="possibleAnswer" value="int x;&#10;    int y;&#10;    int width;&#10;    int height;" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="84" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="2" />
                                            <option name="offset" value="1412" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Encapsulation with class" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="2" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="116" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="1416" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Encapsulation with class" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="3" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="199" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="1416" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="2" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Encapsulation with class" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="4" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="295" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="1417" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="5" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="327" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="1418" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="3" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Encapsulation with class" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="6" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="407" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="1418" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="4" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Encapsulation with class" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="7" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="476" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="1419" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="5" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Encapsulation with class" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Spacecraft.java" />
                                      <option name="text" value="public class Spacecraft {&#10;    int x;&#10;    int y;&#10;    int width;&#10;    int height;&#10;&#10;    /* write your code here */&#10;&#10;    /* write your code here */&#10;&#10;    public Spacecraft(int width, int height) {&#10;        /* write your code here */&#10;        this.width = width;&#10;        this.height = height;&#10;    }&#10;&#10;    /* write your code here */&#10;&#10;    /* write your code here */&#10;&#10;    public void setPosition(int x, int y) {&#10;        /* write your code here */&#10;        pos = new Point(x, y);&#10;    }&#10;&#10;    /* write your code here */&#10;&#10;    private Point pos = new Point(0, 0);;&#10;&#10;    public Spacecraft() {&#10;        width = height = 1;&#10;    }&#10;&#10;    public Spacecraft(int side) {&#10;        width = height = side;&#10;    }&#10;&#10;    public Point position() { return pos; }&#10;    public int width() { return width; }&#10;    public int height() { return height; }&#10;&#10;    public int area() {&#10;        return width * height;&#10;    }&#10;&#10;    public int perimeter() {&#10;        return (width + height) * 2;&#10;    }&#10;&#10;    public void setSize(int side) {&#10;        width = height = side;&#10;    }&#10;&#10;    public void setSize(int width, int height) {&#10;        this.width = width;&#10;        this.height = height;&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/Point.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="25" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="224" />
                                            <option name="offset" value="25" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Encapsulation with class" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="private int x;&#10;    private" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="85" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="249" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Encapsulation with class" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="nt y) {&#10;        this.x = x" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="2" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="151" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="253" />
                                            <option name="offset" value="251" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="2" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Encapsulation with class" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="int getX() {&#10;        retur" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Point.java" />
                                      <option name="text" value="public class Point {&#10;    /* write your code here */&#10;&#10;    public int getX() {&#10;        /* write your code here */&#10;    }&#10;&#10;    public int getY() {&#10;        /* write your code here */&#10;    }&#10;}&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="test/Tests.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/Tests.java" />
                                      <option name="text" value="import org.junit.Assert;&#10;import org.junit.Test;&#10;&#10;public class Tests {&#10;  @Test&#10;  public void testDefaultConstructor() {&#10;    Spacecraft s = new Spacecraft();&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.position().getX() == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.position().getY() == 0);&#10;    Assert.assertTrue(&quot;Height should be equal to 1&quot;, s.height() == 1);&#10;    Assert.assertTrue(&quot;Width should be equal to 1&quot;, s.width() == 1);&#10;  }&#10;&#10;  protected void testSqConstructor(int side) {&#10;    Spacecraft s = new Spacecraft(side);&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.position().getX() == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.position().getY() == 0);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + side + &quot;), the height should be equal to &quot; + side, s.height() == side);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + side + &quot;), the width should be equal to &quot; + side, s.width() == side);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor1() {&#10;    testSqConstructor(1);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor62() {&#10;    testSqConstructor(62);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor200() {&#10;    testSqConstructor(200);&#10;  }&#10;&#10;  protected void testConstructor(int width, int height) {&#10;    Spacecraft s = new Spacecraft(width, height);&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.position().getX() == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.position().getY() == 0);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the height should be equal to &quot; + height, s.height() == height);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the width should be equal to &quot; + width, s.width() == width);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor1() {&#10;    testConstructor(1, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor2() {&#10;    testConstructor(1, 2);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor3() {&#10;    testConstructor(20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor4() {&#10;    testConstructor(261, 200);&#10;  }&#10;&#10;  protected void testArea(int width, int height) {&#10;    Spacecraft s = new Spacecraft(width, height);&#10;    int area = width * height;&#10;    Assert.assertEquals(&quot;Incorrect area for new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;)&quot;, area, s.area());&#10;  }&#10;&#10;  @Test&#10;  public void testArea1() {&#10;    testArea(1, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testArea2() {&#10;    testArea(1, 2);&#10;  }&#10;&#10;  @Test&#10;  public void testArea3() {&#10;    testArea(20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testArea4() {&#10;    testArea(261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testArea5() {&#10;    testArea(47, 47);&#10;  }&#10;&#10;  protected void testPerimeter(int width, int height) {&#10;    Spacecraft s = new Spacecraft(width, height);&#10;    int perimeter = (width + height) * 2;&#10;    Assert.assertEquals(&quot;Incorrect perimeter for new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;)&quot;, perimeter, s.perimeter());&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter1() {&#10;    testPerimeter(1, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter2() {&#10;    testPerimeter(1, 2);&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter3() {&#10;    testPerimeter(20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter4() {&#10;    testPerimeter(261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter5() {&#10;    testPerimeter(47, 47);&#10;  }&#10;&#10;  protected void checkSpacecraft(Spacecraft s, int width, int height, int x, int y) {&#10;    Assert.assertTrue(&quot;For s.setPosition(&quot; + x + &quot;, &quot; + y + &quot;), the x-coordinate should be &quot; + x, s.position().getX() == x);&#10;    Assert.assertTrue(&quot;For s.setPosition(&quot; + x + &quot;, &quot; + y + &quot;), the y-coordinate should be &quot; + y, s.position().getY() == y);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the height should be equal to &quot; + height, s.height() == height);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the width should be equal to &quot; + width, s.width() == width);&#10;  }&#10;&#10;  @Test&#10;  public void testSetPosition1() {&#10;    Spacecraft s = new Spacecraft();&#10;    checkSpacecraft(s, 1, 1, 0, 0);&#10;    s.setPosition(25, 47);&#10;    checkSpacecraft(s, 1, 1, 25, 47);&#10;    s.setPosition(20, 19);&#10;    checkSpacecraft(s, 1, 1, 20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testSetPosition2() {&#10;    Spacecraft s = new Spacecraft(17);&#10;    checkSpacecraft(s, 17, 17, 0, 0);&#10;    s.setPosition(25, 47);&#10;    checkSpacecraft(s, 17, 17, 25, 47);&#10;    s.setPosition(20, 19);&#10;    checkSpacecraft(s, 17, 17, 20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testSetPosition3() {&#10;    Spacecraft s = new Spacecraft(20, 19);&#10;    checkSpacecraft(s, 20, 19, 0, 0);&#10;    s.setPosition(25, 47);&#10;    checkSpacecraft(s, 20, 19, 25, 47);&#10;    s.setPosition(20, 19);&#10;    checkSpacecraft(s, 20, 19, 20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize1() {&#10;    Spacecraft s = new Spacecraft();&#10;    s.setSize(47);&#10;    checkSpacecraft(s, 47, 47, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 47, 47, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize2() {&#10;    Spacecraft s = new Spacecraft(62);&#10;    s.setSize(47);&#10;    checkSpacecraft(s, 47, 47, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 47, 47, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize3() {&#10;    Spacecraft s = new Spacecraft(20, 19);&#10;    s.setSize(47);&#10;    checkSpacecraft(s, 47, 47, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 47, 47, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize4() {&#10;    Spacecraft s = new Spacecraft();&#10;    s.setSize(25, 47);&#10;    checkSpacecraft(s, 25, 47, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 25, 47, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize5() {&#10;    Spacecraft s = new Spacecraft(62);&#10;    s.setSize(20, 19);&#10;    checkSpacecraft(s, 20, 19, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 20, 19, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize6() {&#10;    Spacecraft s = new Spacecraft(20, 19);&#10;    s.setSize(261, 200);&#10;    checkSpacecraft(s, 261, 200, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 261, 200, 261, 200);&#10;  }&#10;&#10;  protected void testPoint(int x, int y) {&#10;    Point p = new Point(x, y);&#10;    Assert.assertEquals(&quot;Incorrect x-coordinate.&quot;, x, p.getX());&#10;    Assert.assertEquals(&quot;Incorrect y-coordinate.&quot;, y, p.getY());&#10;  }&#10;&#10;  @Test&#10;  public void testPoint1() {&#10;    testPoint(0, 0);&#10;  }&#10;&#10;  @Test&#10;  public void testPoint2() {&#10;    testPoint(0, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testPoint3() {&#10;    testPoint(1, 0);&#10;  }&#10;&#10;  @Test&#10;  public void testPoint4() {&#10;    testPoint(261, 200);&#10;  }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1566707364000" />
                          </EduTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Running a program" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;p&gt;&#10;  Now that we have written a few classes.  We can start to write a program that we can execute as a standalone.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  Take a look at the &lt;code&gt;Main&lt;/code&gt; class, shown alongside this task description.  This class contains a &lt;code&gt;main&lt;/code&gt; method that will act as the entry point to the program.  This program simply creates a spacecraft, and then tries to print the object on the screen.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  You will see a green &quot;play&quot; button next to the line number at the top of the file.  Clicking on it, you will see option &quot;Run Main.main()&quot; at the top.  Choosing this option will execute the program.  Alternatively, you can click on the &quot;Run&quot; button at the bottom of the task description (but you can't always do this for every task).  You will probably see an output that looks similar to this: &lt;/p&gt;&lt;pre&gt;Spacecraft@4554617c&lt;/pre&gt;&#10;&lt;p&gt;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  This is the default output when trying to print an object.  As you can see, it doesn't give us a lot of idea about the object we are trying to print out.  In the next section, we will customize what's to be printed when an object is passed to the &lt;code&gt;println&lt;/code&gt; method.&#10;&lt;/p&gt;&#10;&#10;&lt;div class=&quot;hint&quot;&gt;&#10;  The &lt;code&gt;main&lt;/code&gt; method receives an array of &lt;code&gt;String&lt;/code&gt; as arguments.  These arguments correspond to the command-line options the user enters.  The method &lt;code&gt;println&lt;/code&gt; means to print a newline when we are done.  The method that doesn't print a newline is called &lt;code&gt;print&lt;/code&gt;.  These methods belong to object &lt;code&gt;System.out&lt;/code&gt;.  We will talk about what &lt;code&gt;static&lt;/code&gt; means later.&#10;&lt;/div&gt;&#10;&#10;&lt;p&gt;&#10;  Click &quot;Next&quot; to continue.&#10;&lt;/p&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="792680" />
                            <option name="index" value="4" />
                            <option name="name" value="Running a program" />
                            <option name="record" value="-1" />
                            <option name="status" value="Unchecked" />
                            <option name="files">
                              <map>
                                <entry key="src/Main.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Main.java" />
                                      <option name="text" value="public class Main {&#10;    public static void main(String[] args) {&#10;        Spacecraft s1 = new Spacecraft(20, 19);&#10;        System.out.println(s1);&#10;    }&#10;}&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/Spacecraft.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="48" />
                                                <option name="offset" value="30" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="48" />
                                            <option name="offset" value="30" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Refactoring with class" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="int x;&#10;    int y;&#10;    int width;&#10;    int height;" />
                                            <option name="possibleAnswer" value="int x;&#10;    int y;&#10;    int width;&#10;    int height;" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="84" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="26" />
                                            <option name="offset" value="84" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Refactoring with class" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="2" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="116" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="26" />
                                            <option name="offset" value="116" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="2" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Refactoring with class" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="3" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="199" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="26" />
                                            <option name="offset" value="199" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="3" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Refactoring with class" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="4" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="237" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="26" />
                                            <option name="offset" value="237" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="4" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Refactoring with class" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="5" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="269" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="26" />
                                            <option name="offset" value="269" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="5" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Refactoring with class" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="6" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="349" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="26" />
                                            <option name="offset" value="349" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="6" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Refactoring with class" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="7" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="387" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="26" />
                                            <option name="offset" value="387" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="7" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Refactoring with class" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Spacecraft.java" />
                                      <option name="text" value="public class Spacecraft {&#10;    int x;&#10;    int y;&#10;    int width;&#10;    int height;&#10;&#10;    /* write your code here */&#10;&#10;    /* write your code here */&#10;&#10;    public Spacecraft(int width, int height) {&#10;        /* write your code here */&#10;    }&#10;&#10;    /* write your code here */&#10;&#10;    /* write your code here */&#10;&#10;    public void setPosition(int x, int y) {&#10;        /* write your code here */&#10;    }&#10;&#10;    /* write your code here */&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/Point.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="25" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="26" />
                                            <option name="offset" value="25" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Refactoring with class" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="85" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="26" />
                                            <option name="offset" value="85" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Refactoring with class" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="2" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="151" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="26" />
                                            <option name="offset" value="151" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="2" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Refactoring with class" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Point.java" />
                                      <option name="text" value="public class Point {&#10;    /* write your code here */&#10;&#10;    public int getX() {&#10;        /* write your code here */&#10;    }&#10;&#10;    public int getY() {&#10;        /* write your code here */&#10;    }&#10;}&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1566707364000" />
                          </TheoryTask>
                          <EduTask>
                            <option name="customPresentableName" value="toString()" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;p&gt;&#10;  To display more useful information of a &lt;code&gt;Spacecraft&lt;/code&gt; object, we add a &lt;code&gt;public&lt;/code&gt; method called &lt;code&gt;toString()&lt;/code&gt; to the class as follows:&#10;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&#10;    public String toString() {&#10;        return &quot;Spacecraft at position &quot; + pos +&#10;                &quot;, with width &quot; + width() + &quot; and height &quot; + height();&#10;    }&#10;&lt;/code&gt;&lt;/pre&gt;&#10;&lt;p&gt;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  Run the &lt;code&gt;main&lt;/code&gt; method again.  You will see that the output becomes a little more useful, like the following:&#10;&lt;/p&gt;&lt;pre&gt;Spacecraft at position Point@4554617c, with width 20 and height 19&lt;/pre&gt;&#10;&lt;p&gt;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  Notice that we know a bit more about the spacecraft, like its dimension.  Still, we don't quite have a good idea of where it is, so we should display its location more properly.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  Modify the code so that the output of the &lt;code&gt;main&lt;/code&gt; method becomes&#10;&lt;/p&gt;&lt;pre&gt;Spacecraft at position (0, 0), with width 20 and height 19&lt;/pre&gt;&#10;  Avoid modifying the &lt;code&gt;toString()&lt;/code&gt; method in &lt;code&gt;Spacecraft&lt;/code&gt;.  Think modular!&#10;&lt;p&gt;&lt;/p&gt;&#10;&#10;&lt;div class=&quot;hint&quot;&gt;&#10;  This seems like the same problem when we try to print a &lt;code&gt;Spacecraft&lt;/code&gt; object in the &lt;code&gt;main&lt;/code&gt; method.  Which class should we work on in this case?&#10;&lt;/div&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="792681" />
                            <option name="index" value="5" />
                            <option name="name" value="toString()" />
                            <option name="record" value="10" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Main.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Main.java" />
                                      <option name="text" value="public class Main {&#10;    public static void main(String[] args) {&#10;        Spacecraft s1 = new Spacecraft(20, 19);&#10;        System.out.println(s1);&#10;    }&#10;}&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/Spacecraft.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="48" />
                                                <option name="offset" value="30" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="1646" />
                                            <option name="offset" value="0" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Running a program" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="int x;&#10;    int y;&#10;    int width;&#10;    int height;" />
                                            <option name="possibleAnswer" value="int x;&#10;    int y;&#10;    int width;&#10;    int height;" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="84" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="1647" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Running a program" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="2" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="116" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="1649" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="2" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Running a program" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="3" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="199" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="1649" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="3" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Running a program" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="4" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="237" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="1651" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="4" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Running a program" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="5" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="269" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="1653" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="5" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Running a program" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="6" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="349" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="1653" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="6" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Running a program" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="7" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="387" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="1655" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="7" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Running a program" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Spacecraft.java" />
                                      <option name="text" value="public class Spacecraft {&#10;    int x;&#10;    int y;&#10;    int width;&#10;    int height;&#10;&#10;    /* write your code here */&#10;&#10;    /* write your code here */&#10;&#10;    public Spacecraft(int width, int height) {&#10;        /* write your code here */&#10;    }&#10;&#10;    /* write your code here */&#10;&#10;    /* write your code here */&#10;&#10;    public void setPosition(int x, int y) {&#10;        /* write your code here */&#10;    }&#10;&#10;    /* write your code here */&#10;&#10;    public String toString() {&#10;        return &quot;Spacecraft at position &quot; + pos + &quot;, with width &quot; + width() + &quot; and height &quot; + height();&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/Point.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="25" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="1" />
                                            <option name="offset" value="399" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Running a program" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="85" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="1" />
                                            <option name="offset" value="399" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Running a program" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="2" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="151" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="1" />
                                            <option name="offset" value="399" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="2" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Running a program" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="3" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="189" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="402" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Point.java" />
                                      <option name="text" value="public class Point {&#10;    /* write your code here */&#10;&#10;    public int getX() {&#10;        /* write your code here */&#10;    }&#10;&#10;    public int getY() {&#10;        /* write your code here */&#10;    }&#10;&#10;    /* write your code here */&#10;}&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="test/Tests.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/Tests.java" />
                                      <option name="text" value="import org.junit.Assert;&#10;import org.junit.Test;&#10;&#10;public class Tests {&#10;  @Test&#10;  public void testDefaultConstructor() {&#10;    Spacecraft s = new Spacecraft();&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.position().getX() == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.position().getY() == 0);&#10;    Assert.assertTrue(&quot;Height should be equal to 1&quot;, s.height() == 1);&#10;    Assert.assertTrue(&quot;Width should be equal to 1&quot;, s.width() == 1);&#10;  }&#10;&#10;  protected void testSqConstructor(int side) {&#10;    Spacecraft s = new Spacecraft(side);&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.position().getX() == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.position().getY() == 0);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + side + &quot;), the height should be equal to &quot; + side, s.height() == side);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + side + &quot;), the width should be equal to &quot; + side, s.width() == side);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor1() {&#10;    testSqConstructor(1);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor62() {&#10;    testSqConstructor(62);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor200() {&#10;    testSqConstructor(200);&#10;  }&#10;&#10;  protected void testConstructor(int width, int height) {&#10;    Spacecraft s = new Spacecraft(width, height);&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.position().getX() == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.position().getY() == 0);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the height should be equal to &quot; + height, s.height() == height);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the width should be equal to &quot; + width, s.width() == width);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor1() {&#10;    testConstructor(1, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor2() {&#10;    testConstructor(1, 2);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor3() {&#10;    testConstructor(20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor4() {&#10;    testConstructor(261, 200);&#10;  }&#10;&#10;  protected void testArea(int width, int height) {&#10;    Spacecraft s = new Spacecraft(width, height);&#10;    int area = width * height;&#10;    Assert.assertEquals(&quot;Incorrect area for new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;)&quot;, area, s.area());&#10;  }&#10;&#10;  @Test&#10;  public void testArea1() {&#10;    testArea(1, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testArea2() {&#10;    testArea(1, 2);&#10;  }&#10;&#10;  @Test&#10;  public void testArea3() {&#10;    testArea(20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testArea4() {&#10;    testArea(261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testArea5() {&#10;    testArea(47, 47);&#10;  }&#10;&#10;  protected void testPerimeter(int width, int height) {&#10;    Spacecraft s = new Spacecraft(width, height);&#10;    int perimeter = (width + height) * 2;&#10;    Assert.assertEquals(&quot;Incorrect perimeter for new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;)&quot;, perimeter, s.perimeter());&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter1() {&#10;    testPerimeter(1, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter2() {&#10;    testPerimeter(1, 2);&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter3() {&#10;    testPerimeter(20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter4() {&#10;    testPerimeter(261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter5() {&#10;    testPerimeter(47, 47);&#10;  }&#10;&#10;  protected void checkSpacecraft(Spacecraft s, int width, int height, int x, int y) {&#10;    Assert.assertTrue(&quot;For s.setPosition(&quot; + x + &quot;, &quot; + y + &quot;), the x-coordinate should be &quot; + x, s.position().getX() == x);&#10;    Assert.assertTrue(&quot;For s.setPosition(&quot; + x + &quot;, &quot; + y + &quot;), the y-coordinate should be &quot; + y, s.position().getY() == y);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the height should be equal to &quot; + height, s.height() == height);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the width should be equal to &quot; + width, s.width() == width);&#10;  }&#10;&#10;  @Test&#10;  public void testSetPosition1() {&#10;    Spacecraft s = new Spacecraft();&#10;    checkSpacecraft(s, 1, 1, 0, 0);&#10;    s.setPosition(25, 47);&#10;    checkSpacecraft(s, 1, 1, 25, 47);&#10;    s.setPosition(20, 19);&#10;    checkSpacecraft(s, 1, 1, 20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testSetPosition2() {&#10;    Spacecraft s = new Spacecraft(17);&#10;    checkSpacecraft(s, 17, 17, 0, 0);&#10;    s.setPosition(25, 47);&#10;    checkSpacecraft(s, 17, 17, 25, 47);&#10;    s.setPosition(20, 19);&#10;    checkSpacecraft(s, 17, 17, 20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testSetPosition3() {&#10;    Spacecraft s = new Spacecraft(20, 19);&#10;    checkSpacecraft(s, 20, 19, 0, 0);&#10;    s.setPosition(25, 47);&#10;    checkSpacecraft(s, 20, 19, 25, 47);&#10;    s.setPosition(20, 19);&#10;    checkSpacecraft(s, 20, 19, 20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize1() {&#10;    Spacecraft s = new Spacecraft();&#10;    s.setSize(47);&#10;    checkSpacecraft(s, 47, 47, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 47, 47, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize2() {&#10;    Spacecraft s = new Spacecraft(62);&#10;    s.setSize(47);&#10;    checkSpacecraft(s, 47, 47, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 47, 47, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize3() {&#10;    Spacecraft s = new Spacecraft(20, 19);&#10;    s.setSize(47);&#10;    checkSpacecraft(s, 47, 47, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 47, 47, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize4() {&#10;    Spacecraft s = new Spacecraft();&#10;    s.setSize(25, 47);&#10;    checkSpacecraft(s, 25, 47, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 25, 47, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize5() {&#10;    Spacecraft s = new Spacecraft(62);&#10;    s.setSize(20, 19);&#10;    checkSpacecraft(s, 20, 19, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 20, 19, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize6() {&#10;    Spacecraft s = new Spacecraft(20, 19);&#10;    s.setSize(261, 200);&#10;    checkSpacecraft(s, 261, 200, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 261, 200, 261, 200);&#10;  }&#10;&#10;  protected void testPoint(int x, int y) {&#10;    Point p = new Point(x, y);&#10;    Assert.assertEquals(&quot;Incorrect x-coordinate.&quot;, x, p.getX());&#10;    Assert.assertEquals(&quot;Incorrect y-coordinate.&quot;, y, p.getY());&#10;  }&#10;&#10;  @Test&#10;  public void testPoint1() {&#10;    testPoint(0, 0);&#10;  }&#10;&#10;  @Test&#10;  public void testPoint2() {&#10;    testPoint(0, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testPoint3() {&#10;    testPoint(1, 0);&#10;  }&#10;&#10;  @Test&#10;  public void testPoint4() {&#10;    testPoint(261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSpacecraftToString() {&#10;    Spacecraft s = new Spacecraft(25, 62);&#10;    s.setPosition(261, 200);&#10;    Assert.assertEquals(&quot;Incorrect string output&quot;, &quot;Spacecraft at position (261, 200), with width 25 and height 62&quot;, s.toString());&#10;  }&#10;&#10;  @Test&#10;  public void testPointToString() {&#10;    Point p = new Point(20, 19);&#10;    Assert.assertEquals(&quot;Incorrect string output&quot;, &quot;(20, 19)&quot;, p.toString());&#10;  }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1566707364000" />
                          </EduTask>
                          <EduTask>
                            <option name="customPresentableName" value="Setters and mutators" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;p&gt;&#10;  When we declare fields &lt;code&gt;private&lt;/code&gt;, we are essentially preventing client code from accessing object properties directly.  As we saw earlier, client code can only read these properties via &lt;em&gt;getter&lt;/em&gt; methods, like &lt;code&gt;getX()&lt;/code&gt; in class &lt;code&gt;Point&lt;/code&gt;.  What if we want to modify these properties?  We need to use &lt;em&gt;setter&lt;/em&gt; methods.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  In fact, we've already seen setters earlier, in the previous lab, when we implemented &lt;code&gt;setPosition&lt;/code&gt; and &lt;code&gt;setSize&lt;/code&gt; methods in class &lt;code&gt;Spacecraft&lt;/code&gt;.  There, our goal is to change the position of a spacecraft or its dimensions.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  After refactoring, we encapsulated the position of a spacecraft into a &lt;code&gt;Point&lt;/code&gt; object.  Now, we don't have setters for &lt;code&gt;Point&lt;/code&gt; yet, so we might be tempted to write one.  But we need to be careful.  Simply adding setters to the class can lead to unintended consequences.  Consider the following code:&#10;  &lt;/p&gt;&lt;pre&gt;&lt;code&gt;&#10;  Spacecraft s = new Spacecraft();&#10;  Point p = s.position(); // p is (0, 0)&#10;  p.setX(261200); // now p is (261200, 0)&#10;  System.out.println(s.position()); // (261200, 0)!&#10;&lt;/code&gt;&lt;/pre&gt;&#10;  What's happening here is that arbitrary code can change the properties of a spacecraft in an implicit way.  This scenario is undesirable, because the spacecraft itself doesn't know that its property is being changed.  In other words, we are violating the &lt;em&gt;abstraction barrier&lt;/em&gt; between a spacecraft object and client code, because changing a spacecraft's position should be done through the spacecraft object itself.&#10;&lt;p&gt;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  To avoid breaking abstraction barriers, we can't directly implement setters for &lt;code&gt;Point&lt;/code&gt;.  Instead, we will implement &lt;em&gt;mutators&lt;/em&gt; that will create a new object that contains almost all the existing properties, but with some fields modified.  Hence, mutators are methods that takes the new value of a property, and returns a new object of the same type, but with that property modified to a new value.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  Write the following two mutators for class &lt;code&gt;Point&lt;/code&gt;:&#10;&lt;/p&gt;&#10;&lt;ul&gt;&#10;  &lt;li&gt;&lt;code&gt;mutateX&lt;/code&gt;: takes the new x-coordinate as the only argument, and returns a &lt;code&gt;Point&lt;/code&gt; object that represents the new position.&lt;/li&gt;&#10;  &lt;li&gt;&lt;code&gt;mutateY&lt;/code&gt;: takes the new y-coordinate as the only argument, and returns a &lt;code&gt;Point&lt;/code&gt; object that represents the new position.&lt;/li&gt;&#10;&lt;/ul&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="792682" />
                            <option name="index" value="6" />
                            <option name="name" value="Setters and mutators" />
                            <option name="record" value="6" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Point.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="25" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="652" />
                                            <option name="offset" value="21" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="toString()" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="85" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="1" />
                                            <option name="offset" value="674" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="toString()" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="2" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="151" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="1" />
                                            <option name="offset" value="677" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="2" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="toString()" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="3" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="189" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="681" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="3" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="toString()" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="4" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="221" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="683" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Point.java" />
                                      <option name="text" value="public class Point {&#10;    /* write your code here */&#10;&#10;    public int getX() {&#10;        /* write your code here */&#10;    }&#10;&#10;    public int getY() {&#10;        /* write your code here */&#10;    }&#10;&#10;    /* write your code here */&#10;&#10;    /* write your code here */&#10;}&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/Main.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Main.java" />
                                      <option name="text" value="public class Main {&#10;    public static void main(String[] args) {&#10;        Spacecraft s1 = new Spacecraft(20, 19);&#10;        System.out.println(s1);&#10;    }&#10;}&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/Spacecraft.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="48" />
                                                <option name="offset" value="30" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="1676" />
                                            <option name="offset" value="0" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="toString()" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="int x;&#10;    int y;&#10;    int width;&#10;    int height;" />
                                            <option name="possibleAnswer" value="int x;&#10;    int y;&#10;    int width;&#10;    int height;" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="84" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="1678" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="toString()" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="2" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="116" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="1680" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="2" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="toString()" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="3" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="199" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="1682" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="3" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="toString()" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="4" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="237" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="1" />
                                            <option name="offset" value="1682" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="4" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="toString()" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="5" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="269" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="1685" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="5" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="toString()" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="6" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="349" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="1685" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="6" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="toString()" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="7" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="387" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="1685" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="7" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="toString()" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Spacecraft.java" />
                                      <option name="text" value="public class Spacecraft {&#10;    int x;&#10;    int y;&#10;    int width;&#10;    int height;&#10;&#10;    /* write your code here */&#10;&#10;    /* write your code here */&#10;&#10;    public Spacecraft(int width, int height) {&#10;        /* write your code here */&#10;    }&#10;&#10;    /* write your code here */&#10;&#10;    /* write your code here */&#10;&#10;    public void setPosition(int x, int y) {&#10;        /* write your code here */&#10;    }&#10;&#10;    /* write your code here */&#10;&#10;    public String toString() {&#10;        return &quot;Spacecraft at position &quot; + pos + &quot;, with width &quot; + width() + &quot; and height &quot; + height();&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="test/Tests.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/Tests.java" />
                                      <option name="text" value="import org.junit.Assert;&#10;import org.junit.Test;&#10;&#10;public class Tests {&#10;  @Test&#10;  public void testDefaultConstructor() {&#10;    Spacecraft s = new Spacecraft();&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.position().getX() == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.position().getY() == 0);&#10;    Assert.assertTrue(&quot;Height should be equal to 1&quot;, s.height() == 1);&#10;    Assert.assertTrue(&quot;Width should be equal to 1&quot;, s.width() == 1);&#10;  }&#10;&#10;  protected void testSqConstructor(int side) {&#10;    Spacecraft s = new Spacecraft(side);&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.position().getX() == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.position().getY() == 0);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + side + &quot;), the height should be equal to &quot; + side, s.height() == side);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + side + &quot;), the width should be equal to &quot; + side, s.width() == side);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor1() {&#10;    testSqConstructor(1);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor62() {&#10;    testSqConstructor(62);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor200() {&#10;    testSqConstructor(200);&#10;  }&#10;&#10;  protected void testConstructor(int width, int height) {&#10;    Spacecraft s = new Spacecraft(width, height);&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.position().getX() == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.position().getY() == 0);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the height should be equal to &quot; + height, s.height() == height);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the width should be equal to &quot; + width, s.width() == width);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor1() {&#10;    testConstructor(1, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor2() {&#10;    testConstructor(1, 2);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor3() {&#10;    testConstructor(20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor4() {&#10;    testConstructor(261, 200);&#10;  }&#10;&#10;  protected void testArea(int width, int height) {&#10;    Spacecraft s = new Spacecraft(width, height);&#10;    int area = width * height;&#10;    Assert.assertEquals(&quot;Incorrect area for new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;)&quot;, area, s.area());&#10;  }&#10;&#10;  @Test&#10;  public void testArea1() {&#10;    testArea(1, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testArea2() {&#10;    testArea(1, 2);&#10;  }&#10;&#10;  @Test&#10;  public void testArea3() {&#10;    testArea(20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testArea4() {&#10;    testArea(261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testArea5() {&#10;    testArea(47, 47);&#10;  }&#10;&#10;  protected void testPerimeter(int width, int height) {&#10;    Spacecraft s = new Spacecraft(width, height);&#10;    int perimeter = (width + height) * 2;&#10;    Assert.assertEquals(&quot;Incorrect perimeter for new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;)&quot;, perimeter, s.perimeter());&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter1() {&#10;    testPerimeter(1, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter2() {&#10;    testPerimeter(1, 2);&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter3() {&#10;    testPerimeter(20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter4() {&#10;    testPerimeter(261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter5() {&#10;    testPerimeter(47, 47);&#10;  }&#10;&#10;  protected void checkSpacecraft(Spacecraft s, int width, int height, int x, int y) {&#10;    Assert.assertTrue(&quot;For s.setPosition(&quot; + x + &quot;, &quot; + y + &quot;), the x-coordinate should be &quot; + x, s.position().getX() == x);&#10;    Assert.assertTrue(&quot;For s.setPosition(&quot; + x + &quot;, &quot; + y + &quot;), the y-coordinate should be &quot; + y, s.position().getY() == y);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the height should be equal to &quot; + height, s.height() == height);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the width should be equal to &quot; + width, s.width() == width);&#10;  }&#10;&#10;  @Test&#10;  public void testSetPosition1() {&#10;    Spacecraft s = new Spacecraft();&#10;    checkSpacecraft(s, 1, 1, 0, 0);&#10;    s.setPosition(25, 47);&#10;    checkSpacecraft(s, 1, 1, 25, 47);&#10;    s.setPosition(20, 19);&#10;    checkSpacecraft(s, 1, 1, 20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testSetPosition2() {&#10;    Spacecraft s = new Spacecraft(17);&#10;    checkSpacecraft(s, 17, 17, 0, 0);&#10;    s.setPosition(25, 47);&#10;    checkSpacecraft(s, 17, 17, 25, 47);&#10;    s.setPosition(20, 19);&#10;    checkSpacecraft(s, 17, 17, 20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testSetPosition3() {&#10;    Spacecraft s = new Spacecraft(20, 19);&#10;    checkSpacecraft(s, 20, 19, 0, 0);&#10;    s.setPosition(25, 47);&#10;    checkSpacecraft(s, 20, 19, 25, 47);&#10;    s.setPosition(20, 19);&#10;    checkSpacecraft(s, 20, 19, 20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize1() {&#10;    Spacecraft s = new Spacecraft();&#10;    s.setSize(47);&#10;    checkSpacecraft(s, 47, 47, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 47, 47, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize2() {&#10;    Spacecraft s = new Spacecraft(62);&#10;    s.setSize(47);&#10;    checkSpacecraft(s, 47, 47, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 47, 47, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize3() {&#10;    Spacecraft s = new Spacecraft(20, 19);&#10;    s.setSize(47);&#10;    checkSpacecraft(s, 47, 47, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 47, 47, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize4() {&#10;    Spacecraft s = new Spacecraft();&#10;    s.setSize(25, 47);&#10;    checkSpacecraft(s, 25, 47, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 25, 47, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize5() {&#10;    Spacecraft s = new Spacecraft(62);&#10;    s.setSize(20, 19);&#10;    checkSpacecraft(s, 20, 19, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 20, 19, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize6() {&#10;    Spacecraft s = new Spacecraft(20, 19);&#10;    s.setSize(261, 200);&#10;    checkSpacecraft(s, 261, 200, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 261, 200, 261, 200);&#10;  }&#10;&#10;  protected void checkPoint(Point p, int x, int y)  {&#10;    Assert.assertEquals(&quot;Incorrect x-coordinate.&quot;, x, p.getX());&#10;    Assert.assertEquals(&quot;Incorrect y-coordinate.&quot;, y, p.getY());&#10;  }&#10;&#10;  protected void testPoint(int x, int y) {&#10;    Point p = new Point(x, y);&#10;    checkPoint(p, x, y);&#10;  }&#10;&#10;  @Test&#10;  public void testPoint1() {&#10;    testPoint(0, 0);&#10;  }&#10;&#10;  @Test&#10;  public void testPoint2() {&#10;    testPoint(0, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testPoint3() {&#10;    testPoint(1, 0);&#10;  }&#10;&#10;  @Test&#10;  public void testPoint4() {&#10;    testPoint(261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSpacecraftToString() {&#10;    Spacecraft s = new Spacecraft(25, 62);&#10;    s.setPosition(261, 200);&#10;    Assert.assertEquals(&quot;Incorrect string output&quot;, &quot;Spacecraft at position (261, 200), with width 25 and height 62&quot;, s.toString());&#10;  }&#10;&#10;  @Test&#10;  public void testPointToString() {&#10;    Point p = new Point(20, 19);&#10;    Assert.assertEquals(&quot;Incorrect string output&quot;, &quot;(20, 19)&quot;, p.toString());&#10;  }&#10;&#10;  @Test&#10;  public void testPointMutateX() {&#10;    Point p = new Point(20, 19);&#10;    checkPoint(p, 20, 19);&#10;    Point q = p.mutateX(25);&#10;    checkPoint(p, 20, 19);&#10;    checkPoint(q, 25, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testPointMutateY() {&#10;    Point p = new Point(20, 19);&#10;    checkPoint(p, 20, 19);&#10;    Point q = p.mutateY(62);&#10;    checkPoint(p, 20, 19);&#10;    checkPoint(q, 20, 62);&#10;  }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1566707364000" />
                          </EduTask>
                          <EduTask>
                            <option name="customPresentableName" value="Derived properties" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;p&gt;&#10;  Although a spacecraft object stores just a few things, namely, its position and dimensions, we can compute other &lt;em&gt;derived&lt;/em&gt; properties that might be useful.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  For example, knowing the position and dimensions, we can compute the &lt;em&gt;bounding box&lt;/em&gt; for graphically displaying the spacecraft on the screen.  A bounding box is a rectangle that encompasses the entire object when drawn.  In our case, the bounding box dimensions are approximately the dimensions of the spacecraft itself.  (We will see why they are &quot;approximate&quot; in a moment.)&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  So far, we have not been clear about what the &quot;position&quot; of a spacecraft means, so let's clear that up.  The position is assumed to be the center of the spacecraft.  Therefore, when a 4x4 spacecraft is centered at the origin, the left end of the bounding box is at coordinate -2, and the right end is at coordinate 2, and similarly for the vertical dimension.  Since the bounding box is always a rectangle, we can represent a bounding box using two points: the lower-left coordinates and the upper-right coordinates.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  One complication from representing the bounding box this way is that our representation of &lt;code&gt;Point&lt;/code&gt; is discrete: coordinates can only be integers.  So, we need to be careful when a dimension of a spacecraft is an odd number.  We need the bounding box to cover the entire spacecraft, but no more than necessary.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  With that complication in mind, write the following methods in class &lt;code&gt;Spacecraft&lt;/code&gt; that compute the bounding box as a derived property:&#10;&lt;/p&gt;&#10;&lt;ul&gt;&#10;  &lt;li&gt;&lt;code&gt;lowerLeft()&lt;/code&gt;: returns the lower-left coordinates of the bounding box&lt;/li&gt;&#10;  &lt;li&gt;&lt;code&gt;upperRight()&lt;/code&gt;: returns the upper-right coordinates of the bounding box&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&#10;&lt;div class=&quot;hint&quot;&gt;&#10;  You'll need to do some math to come up with formulas that describe these two points.&#10;&lt;/div&gt;&#10;&#10;&lt;p&gt;&#10;  Notice that it takes some thinking (both from us and by the computer) to compute such a derived property.  Another way to avoid computing derived properties repeatedly is to &lt;em&gt;cache&lt;/em&gt; the result in a new field.  In this way, there's a &lt;em&gt;tradeoff&lt;/em&gt; between computation time to come up with the result and memory used to store the result.  Although we save some time by storing results, these values become invalid once we update the original properties, and we need to recompute these results.  When writing a large application, we should determine whether updates are frequent.  Caching derived properties is more appropriate when updates are rare, while computing derived properties on the fly is more appropriat when updates are frequent.&#10;&lt;/p&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="792683" />
                            <option name="index" value="7" />
                            <option name="name" value="Derived properties" />
                            <option name="record" value="11" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Spacecraft.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="48" />
                                                <option name="offset" value="30" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="2417" />
                                            <option name="offset" value="0" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Setters and mutators" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="int x;&#10;    int y;&#10;    int width;&#10;    int height;" />
                                            <option name="possibleAnswer" value="int x;&#10;    int y;&#10;    int width;&#10;    int height;" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="84" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="2419" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Setters and mutators" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="2" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="116" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="2421" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="2" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Setters and mutators" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="3" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="199" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="2421" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="3" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Setters and mutators" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="4" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="237" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="2421" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="4" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Setters and mutators" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="5" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="269" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="2421" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="5" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Setters and mutators" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="6" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="349" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="2421" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="6" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Setters and mutators" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="7" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="387" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="2421" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="7" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Setters and mutators" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="8" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="561" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="2422" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Spacecraft.java" />
                                      <option name="text" value="public class Spacecraft {&#10;    int x;&#10;    int y;&#10;    int width;&#10;    int height;&#10;&#10;    /* write your code here */&#10;&#10;    /* write your code here */&#10;&#10;    public Spacecraft(int width, int height) {&#10;        /* write your code here */&#10;    }&#10;&#10;    /* write your code here */&#10;&#10;    /* write your code here */&#10;&#10;    public void setPosition(int x, int y) {&#10;        /* write your code here */&#10;    }&#10;&#10;    /* write your code here */&#10;&#10;    public String toString() {&#10;        return &quot;Spacecraft at position &quot; + pos + &quot;, with width &quot; + width() + &quot; and height &quot; + height();&#10;    }&#10;&#10;    /* write your code here */&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/Point.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="25" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="1" />
                                            <option name="offset" value="675" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Setters and mutators" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="85" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="1" />
                                            <option name="offset" value="675" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Setters and mutators" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="2" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="151" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="1" />
                                            <option name="offset" value="675" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="2" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Setters and mutators" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="3" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="189" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="1" />
                                            <option name="offset" value="675" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="3" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Setters and mutators" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="4" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="221" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="1" />
                                            <option name="offset" value="675" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="4" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Setters and mutators" />
                                                <option name="visible" value="true" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Point.java" />
                                      <option name="text" value="public class Point {&#10;    /* write your code here */&#10;&#10;    public int getX() {&#10;        /* write your code here */&#10;    }&#10;&#10;    public int getY() {&#10;        /* write your code here */&#10;    }&#10;&#10;    /* write your code here */&#10;&#10;    /* write your code here */&#10;}&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/Main.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Main.java" />
                                      <option name="text" value="public class Main {&#10;    public static void main(String[] args) {&#10;        Spacecraft s1 = new Spacecraft(20, 19);&#10;        System.out.println(s1);&#10;    }&#10;}&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="test/Tests.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/Tests.java" />
                                      <option name="text" value="import org.junit.Assert;&#10;import org.junit.Test;&#10;&#10;public class Tests {&#10;  @Test&#10;  public void testDefaultConstructor() {&#10;    Spacecraft s = new Spacecraft();&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.position().getX() == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.position().getY() == 0);&#10;    Assert.assertTrue(&quot;Height should be equal to 1&quot;, s.height() == 1);&#10;    Assert.assertTrue(&quot;Width should be equal to 1&quot;, s.width() == 1);&#10;  }&#10;&#10;  protected void testSqConstructor(int side) {&#10;    Spacecraft s = new Spacecraft(side);&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.position().getX() == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.position().getY() == 0);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + side + &quot;), the height should be equal to &quot; + side, s.height() == side);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + side + &quot;), the width should be equal to &quot; + side, s.width() == side);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor1() {&#10;    testSqConstructor(1);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor62() {&#10;    testSqConstructor(62);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor200() {&#10;    testSqConstructor(200);&#10;  }&#10;&#10;  protected void testConstructor(int width, int height) {&#10;    Spacecraft s = new Spacecraft(width, height);&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.position().getX() == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.position().getY() == 0);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the height should be equal to &quot; + height, s.height() == height);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the width should be equal to &quot; + width, s.width() == width);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor1() {&#10;    testConstructor(1, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor2() {&#10;    testConstructor(1, 2);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor3() {&#10;    testConstructor(20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor4() {&#10;    testConstructor(261, 200);&#10;  }&#10;&#10;  protected void testArea(int width, int height) {&#10;    Spacecraft s = new Spacecraft(width, height);&#10;    int area = width * height;&#10;    Assert.assertEquals(&quot;Incorrect area for new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;)&quot;, area, s.area());&#10;  }&#10;&#10;  @Test&#10;  public void testArea1() {&#10;    testArea(1, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testArea2() {&#10;    testArea(1, 2);&#10;  }&#10;&#10;  @Test&#10;  public void testArea3() {&#10;    testArea(20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testArea4() {&#10;    testArea(261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testArea5() {&#10;    testArea(47, 47);&#10;  }&#10;&#10;  protected void testPerimeter(int width, int height) {&#10;    Spacecraft s = new Spacecraft(width, height);&#10;    int perimeter = (width + height) * 2;&#10;    Assert.assertEquals(&quot;Incorrect perimeter for new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;)&quot;, perimeter, s.perimeter());&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter1() {&#10;    testPerimeter(1, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter2() {&#10;    testPerimeter(1, 2);&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter3() {&#10;    testPerimeter(20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter4() {&#10;    testPerimeter(261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter5() {&#10;    testPerimeter(47, 47);&#10;  }&#10;&#10;  protected void checkSpacecraft(Spacecraft s, int width, int height, int x, int y) {&#10;    Assert.assertTrue(&quot;For s.setPosition(&quot; + x + &quot;, &quot; + y + &quot;), the x-coordinate should be &quot; + x, s.position().getX() == x);&#10;    Assert.assertTrue(&quot;For s.setPosition(&quot; + x + &quot;, &quot; + y + &quot;), the y-coordinate should be &quot; + y, s.position().getY() == y);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the height should be equal to &quot; + height, s.height() == height);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the width should be equal to &quot; + width, s.width() == width);&#10;  }&#10;&#10;  @Test&#10;  public void testSetPosition1() {&#10;    Spacecraft s = new Spacecraft();&#10;    checkSpacecraft(s, 1, 1, 0, 0);&#10;    s.setPosition(25, 47);&#10;    checkSpacecraft(s, 1, 1, 25, 47);&#10;    s.setPosition(20, 19);&#10;    checkSpacecraft(s, 1, 1, 20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testSetPosition2() {&#10;    Spacecraft s = new Spacecraft(17);&#10;    checkSpacecraft(s, 17, 17, 0, 0);&#10;    s.setPosition(25, 47);&#10;    checkSpacecraft(s, 17, 17, 25, 47);&#10;    s.setPosition(20, 19);&#10;    checkSpacecraft(s, 17, 17, 20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testSetPosition3() {&#10;    Spacecraft s = new Spacecraft(20, 19);&#10;    checkSpacecraft(s, 20, 19, 0, 0);&#10;    s.setPosition(25, 47);&#10;    checkSpacecraft(s, 20, 19, 25, 47);&#10;    s.setPosition(20, 19);&#10;    checkSpacecraft(s, 20, 19, 20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize1() {&#10;    Spacecraft s = new Spacecraft();&#10;    s.setSize(47);&#10;    checkSpacecraft(s, 47, 47, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 47, 47, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize2() {&#10;    Spacecraft s = new Spacecraft(62);&#10;    s.setSize(47);&#10;    checkSpacecraft(s, 47, 47, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 47, 47, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize3() {&#10;    Spacecraft s = new Spacecraft(20, 19);&#10;    s.setSize(47);&#10;    checkSpacecraft(s, 47, 47, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 47, 47, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize4() {&#10;    Spacecraft s = new Spacecraft();&#10;    s.setSize(25, 47);&#10;    checkSpacecraft(s, 25, 47, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 25, 47, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize5() {&#10;    Spacecraft s = new Spacecraft(62);&#10;    s.setSize(20, 19);&#10;    checkSpacecraft(s, 20, 19, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 20, 19, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize6() {&#10;    Spacecraft s = new Spacecraft(20, 19);&#10;    s.setSize(261, 200);&#10;    checkSpacecraft(s, 261, 200, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 261, 200, 261, 200);&#10;  }&#10;&#10;  protected void checkPoint(Point p, int x, int y)  {&#10;    Assert.assertEquals(&quot;Incorrect x-coordinate.&quot;, x, p.getX());&#10;    Assert.assertEquals(&quot;Incorrect y-coordinate.&quot;, y, p.getY());&#10;  }&#10;&#10;  protected void testPoint(int x, int y) {&#10;    Point p = new Point(x, y);&#10;    checkPoint(p, x, y);&#10;  }&#10;&#10;  @Test&#10;  public void testPoint1() {&#10;    testPoint(0, 0);&#10;  }&#10;&#10;  @Test&#10;  public void testPoint2() {&#10;    testPoint(0, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testPoint3() {&#10;    testPoint(1, 0);&#10;  }&#10;&#10;  @Test&#10;  public void testPoint4() {&#10;    testPoint(261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSpacecraftToString() {&#10;    Spacecraft s = new Spacecraft(25, 62);&#10;    s.setPosition(261, 200);&#10;    Assert.assertEquals(&quot;Incorrect string output&quot;, &quot;Spacecraft at position (261, 200), with width 25 and height 62&quot;, s.toString());&#10;  }&#10;&#10;  @Test&#10;  public void testPointToString() {&#10;    Point p = new Point(20, 19);&#10;    Assert.assertEquals(&quot;Incorrect string output&quot;, &quot;(20, 19)&quot;, p.toString());&#10;  }&#10;&#10;  @Test&#10;  public void testPointMutateX() {&#10;    Point p = new Point(20, 19);&#10;    checkPoint(p, 20, 19);&#10;    Point q = p.mutateX(25);&#10;    checkPoint(p, 20, 19);&#10;    checkPoint(q, 25, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testPointMutateY() {&#10;    Point p = new Point(20, 19);&#10;    checkPoint(p, 20, 19);&#10;    Point q = p.mutateY(62);&#10;    checkPoint(p, 20, 19);&#10;    checkPoint(q, 20, 62);&#10;  }&#10;&#10;  @Test&#10;  public void testCornerPoints1() {&#10;    Spacecraft s = new Spacecraft(20, 18);&#10;    Point ll = s.lowerLeft();&#10;    checkPoint(ll, -10, -9);&#10;    Point ur = s.upperRight();&#10;    checkPoint(ur, 10, 9);&#10;  }&#10;&#10;  @Test&#10;  public void testCornerPoints2() {&#10;    Spacecraft s = new Spacecraft(261, 103);&#10;    Point ll = s.lowerLeft();&#10;    checkPoint(ll, -131, -52);&#10;    Point ur = s.upperRight();&#10;    checkPoint(ur, 131, 52);&#10;  }&#10;&#10;  @Test&#10;  public void testCornerPoints3() {&#10;    Spacecraft s = new Spacecraft(20, 18);&#10;    s.setPosition(261, 200);&#10;    Point ll = s.lowerLeft();&#10;    checkPoint(ll, 251, 191);&#10;    Point ur = s.upperRight();&#10;    checkPoint(ur, 271, 209);&#10;  }&#10;&#10;  @Test&#10;  public void testCornerPoints4() {&#10;    Spacecraft s = new Spacecraft(261, 103);&#10;    s.setPosition(261, 200);&#10;    Point ll = s.lowerLeft();&#10;    checkPoint(ll, 130, 148);&#10;    Point ur = s.upperRight();&#10;    checkPoint(ur, 392, 252);&#10;  }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1566707364000" />
                          </EduTask>
                        </list>
                      </option>
                    </FrameworkLesson>
                  </list>
                </option>
              </Section>
              <Section>
                <option name="courseId" value="56570" />
                <option name="customPresentableName" />
                <option name="id" value="92088" />
                <option name="index" value="4" />
                <option name="name" value="04-Class attributes" />
                <option name="position" value="4" />
                <option name="updateDate" value="1566707469000" />
                <option name="items">
                  <list>
                    <FrameworkLesson>
                      <option name="currentTaskIndex" value="1" />
                      <option name="customPresentableName" />
                      <option name="id" value="250648" />
                      <option name="index" value="1" />
                      <option name="name" value="Lab04" />
                      <option name="updateDate" value="1566707469000" />
                      <option name="unitId" value="0" />
                      <option name="items">
                        <list>
                          <EduTask>
                            <option name="customPresentableName" value="Class attributes" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;p&gt;&#10;  In the last lab, we learned about properties of objects, which we can store as fields (alternatively called &lt;em&gt;instance variables&lt;/em&gt;.  In this lab, we will learn how to store properties of a class.  These properties don't depend on specific objects, but rather on classes as a whole.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  In our spacecraft game, we might want to keep track of how many spacecrafts are flying out there.  You can see that this number does not belong to any spacecraft in particular, but rather to the whole system of spacecrafts.  Therefore, storing this information as a field is inappropriate.  Instead, when we construct a spacecraft, we should note that there is one more spacecraft in the system.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  The number of spacecrafts that have been created can be represented by a &lt;em&gt;static field&lt;/em&gt; (alternatively called &lt;em&gt;class variable&lt;/em&gt;).  These variables are like fields for objects, but instead declared using the keyword &lt;code&gt;static&lt;/code&gt; before their types.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  First, declare a static field that will help us keep track of the number of spacecrafts we have created.  Be sure to make this field &lt;code&gt;private&lt;/code&gt; to prevent arbitrary code from changing the number of spacecrafts to an incorrect number.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  Then, think about how to actually keep track of the number of spacecrafts we have created.  You will need to modify existing code somewhere.  That's for you to figure out.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  Finally, write a &lt;code&gt;static&lt;/code&gt; getter method to return the number of spacecrafts.  Like before, &lt;code&gt;static&lt;/code&gt; methods (alternatively called &lt;em&gt;class methods&lt;/em&gt;) are like methods we have seen before (alternatively called &lt;em&gt;instance methods&lt;/em&gt;), but with the keyword &lt;code&gt;static&lt;/code&gt; before the return type.  Static methods can only refer to static fields, while instance methods can refer to both.  Be sure to make the method &lt;code&gt;public&lt;/code&gt; so that anyone can query the number of spacecrafts in the system.&#10;&lt;/p&gt;&#10;&#10;&lt;div class=&quot;hint&quot;&gt;&#10;  Hints can be added anywhere in task text: type &quot;hint&quot; and press Tab.&#10;&lt;/div&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="805219" />
                            <option name="index" value="1" />
                            <option name="name" value="Class attributes" />
                            <option name="record" value="1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Spacecraft.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="30" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="2570" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Solved" />
                                            <option name="studentAnswer" value="" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="48" />
                                                <option name="offset" value="62" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="2572" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Derived properties" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="int x;&#10;    int y;&#10;    int width;&#10;    int height;" />
                                            <option name="possibleAnswer" value="int x;&#10;    int y;&#10;    int width;&#10;    int height;" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Solved" />
                                            <option name="studentAnswer" value="" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="2" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="116" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="2574" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Derived properties" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Solved" />
                                            <option name="studentAnswer" value="" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="3" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="148" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="2576" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="2" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Derived properties" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Solved" />
                                            <option name="studentAnswer" value="" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="4" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="231" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="2579" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="3" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Derived properties" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Solved" />
                                            <option name="studentAnswer" value="" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="5" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="269" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="2582" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="4" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Derived properties" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Solved" />
                                            <option name="studentAnswer" value="" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="6" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="301" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="2584" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="5" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Derived properties" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Solved" />
                                            <option name="studentAnswer" value="" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="7" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="381" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="2587" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="6" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Derived properties" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Solved" />
                                            <option name="studentAnswer" value="" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="8" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="419" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="2589" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="7" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Derived properties" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Solved" />
                                            <option name="studentAnswer" value="" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="9" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="593" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="2592" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="8" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Derived properties" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Solved" />
                                            <option name="studentAnswer" value="" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="true" />
                                      <option name="name" value="src/Spacecraft.java" />
                                      <option name="text" value="public class Spacecraft {&#10;    /* write your code here */&#10;&#10;    int x;&#10;    int y;&#10;    int width;&#10;    int height;&#10;&#10;    /* write your code here */&#10;&#10;    /* write your code here */&#10;&#10;    public Spacecraft(int width, int height) {&#10;        /* write your code here */&#10;    }&#10;&#10;    /* write your code here */&#10;&#10;    /* write your code here */&#10;&#10;    public void setPosition(int x, int y) {&#10;        /* write your code here */&#10;    }&#10;&#10;    /* write your code here */&#10;&#10;    public String toString() {&#10;        return &quot;Spacecraft at position &quot; + pos + &quot;, with width &quot; + width() + &quot; and height &quot; + height();&#10;    }&#10;&#10;    /* write your code here */&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/Point.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="25" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="847" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Derived properties" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Solved" />
                                            <option name="studentAnswer" value="" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="85" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="850" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Derived properties" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Solved" />
                                            <option name="studentAnswer" value="" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="2" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="151" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="851" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="2" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Derived properties" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Solved" />
                                            <option name="studentAnswer" value="" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="3" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="189" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="854" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="3" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Derived properties" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Solved" />
                                            <option name="studentAnswer" value="" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="4" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="221" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="856" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab03" />
                                                <option name="placeholderIndex" value="4" />
                                                <option name="sectionName" value="03-Encapsulation" />
                                                <option name="taskName" value="Derived properties" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Solved" />
                                            <option name="studentAnswer" value="" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="true" />
                                      <option name="name" value="src/Point.java" />
                                      <option name="text" value="public class Point {&#10;    /* write your code here */&#10;&#10;    public int getX() {&#10;        /* write your code here */&#10;    }&#10;&#10;    public int getY() {&#10;        /* write your code here */&#10;    }&#10;&#10;    /* write your code here */&#10;&#10;    /* write your code here */&#10;}&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/Main.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="true" />
                                      <option name="name" value="src/Main.java" />
                                      <option name="text" value="public class Main {&#10;    public static void main(String[] args) {&#10;        Spacecraft s1 = new Spacecraft(20, 19);&#10;        System.out.println(s1);&#10;    }&#10;}&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="test/Tests.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/Tests.java" />
                                      <option name="text" value="import org.junit.Assert;&#10;import org.junit.Test;&#10;&#10;public class Tests {&#10;  @Test&#10;  public void testDefaultConstructor() {&#10;    Spacecraft s = new Spacecraft();&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.position().getX() == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.position().getY() == 0);&#10;    Assert.assertTrue(&quot;Height should be equal to 1&quot;, s.height() == 1);&#10;    Assert.assertTrue(&quot;Width should be equal to 1&quot;, s.width() == 1);&#10;  }&#10;&#10;  protected void testSqConstructor(int side) {&#10;    Spacecraft s = new Spacecraft(side);&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.position().getX() == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.position().getY() == 0);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + side + &quot;), the height should be equal to &quot; + side, s.height() == side);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + side + &quot;), the width should be equal to &quot; + side, s.width() == side);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor1() {&#10;    testSqConstructor(1);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor62() {&#10;    testSqConstructor(62);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor200() {&#10;    testSqConstructor(200);&#10;  }&#10;&#10;  protected void testConstructor(int width, int height) {&#10;    Spacecraft s = new Spacecraft(width, height);&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.position().getX() == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.position().getY() == 0);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the height should be equal to &quot; + height, s.height() == height);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the width should be equal to &quot; + width, s.width() == width);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor1() {&#10;    testConstructor(1, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor2() {&#10;    testConstructor(1, 2);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor3() {&#10;    testConstructor(20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor4() {&#10;    testConstructor(261, 200);&#10;  }&#10;&#10;  protected void testArea(int width, int height) {&#10;    Spacecraft s = new Spacecraft(width, height);&#10;    int area = width * height;&#10;    Assert.assertEquals(&quot;Incorrect area for new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;)&quot;, area, s.area());&#10;  }&#10;&#10;  @Test&#10;  public void testArea1() {&#10;    testArea(1, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testArea2() {&#10;    testArea(1, 2);&#10;  }&#10;&#10;  @Test&#10;  public void testArea3() {&#10;    testArea(20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testArea4() {&#10;    testArea(261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testArea5() {&#10;    testArea(47, 47);&#10;  }&#10;&#10;  protected void testPerimeter(int width, int height) {&#10;    Spacecraft s = new Spacecraft(width, height);&#10;    int perimeter = (width + height) * 2;&#10;    Assert.assertEquals(&quot;Incorrect perimeter for new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;)&quot;, perimeter, s.perimeter());&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter1() {&#10;    testPerimeter(1, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter2() {&#10;    testPerimeter(1, 2);&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter3() {&#10;    testPerimeter(20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter4() {&#10;    testPerimeter(261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter5() {&#10;    testPerimeter(47, 47);&#10;  }&#10;&#10;  protected void checkSpacecraft(Spacecraft s, int width, int height, int x, int y) {&#10;    Assert.assertTrue(&quot;For s.setPosition(&quot; + x + &quot;, &quot; + y + &quot;), the x-coordinate should be &quot; + x, s.position().getX() == x);&#10;    Assert.assertTrue(&quot;For s.setPosition(&quot; + x + &quot;, &quot; + y + &quot;), the y-coordinate should be &quot; + y, s.position().getY() == y);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the height should be equal to &quot; + height, s.height() == height);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the width should be equal to &quot; + width, s.width() == width);&#10;  }&#10;&#10;  @Test&#10;  public void testSetPosition1() {&#10;    Spacecraft s = new Spacecraft();&#10;    checkSpacecraft(s, 1, 1, 0, 0);&#10;    s.setPosition(25, 47);&#10;    checkSpacecraft(s, 1, 1, 25, 47);&#10;    s.setPosition(20, 19);&#10;    checkSpacecraft(s, 1, 1, 20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testSetPosition2() {&#10;    Spacecraft s = new Spacecraft(17);&#10;    checkSpacecraft(s, 17, 17, 0, 0);&#10;    s.setPosition(25, 47);&#10;    checkSpacecraft(s, 17, 17, 25, 47);&#10;    s.setPosition(20, 19);&#10;    checkSpacecraft(s, 17, 17, 20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testSetPosition3() {&#10;    Spacecraft s = new Spacecraft(20, 19);&#10;    checkSpacecraft(s, 20, 19, 0, 0);&#10;    s.setPosition(25, 47);&#10;    checkSpacecraft(s, 20, 19, 25, 47);&#10;    s.setPosition(20, 19);&#10;    checkSpacecraft(s, 20, 19, 20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize1() {&#10;    Spacecraft s = new Spacecraft();&#10;    s.setSize(47);&#10;    checkSpacecraft(s, 47, 47, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 47, 47, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize2() {&#10;    Spacecraft s = new Spacecraft(62);&#10;    s.setSize(47);&#10;    checkSpacecraft(s, 47, 47, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 47, 47, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize3() {&#10;    Spacecraft s = new Spacecraft(20, 19);&#10;    s.setSize(47);&#10;    checkSpacecraft(s, 47, 47, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 47, 47, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize4() {&#10;    Spacecraft s = new Spacecraft();&#10;    s.setSize(25, 47);&#10;    checkSpacecraft(s, 25, 47, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 25, 47, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize5() {&#10;    Spacecraft s = new Spacecraft(62);&#10;    s.setSize(20, 19);&#10;    checkSpacecraft(s, 20, 19, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 20, 19, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize6() {&#10;    Spacecraft s = new Spacecraft(20, 19);&#10;    s.setSize(261, 200);&#10;    checkSpacecraft(s, 261, 200, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 261, 200, 261, 200);&#10;  }&#10;&#10;  protected void checkPoint(Point p, int x, int y)  {&#10;    Assert.assertEquals(&quot;Incorrect x-coordinate.&quot;, x, p.getX());&#10;    Assert.assertEquals(&quot;Incorrect y-coordinate.&quot;, y, p.getY());&#10;  }&#10;&#10;  protected void testPoint(int x, int y) {&#10;    Point p = new Point(x, y);&#10;    checkPoint(p, x, y);&#10;  }&#10;&#10;  @Test&#10;  public void testPoint1() {&#10;    testPoint(0, 0);&#10;  }&#10;&#10;  @Test&#10;  public void testPoint2() {&#10;    testPoint(0, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testPoint3() {&#10;    testPoint(1, 0);&#10;  }&#10;&#10;  @Test&#10;  public void testPoint4() {&#10;    testPoint(261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSpacecraftToString() {&#10;    Spacecraft s = new Spacecraft(25, 62);&#10;    s.setPosition(261, 200);&#10;    Assert.assertEquals(&quot;Incorrect string output&quot;, &quot;Spacecraft at position (261, 200), with width 25 and height 62&quot;, s.toString());&#10;  }&#10;&#10;  @Test&#10;  public void testPointToString() {&#10;    Point p = new Point(20, 19);&#10;    Assert.assertEquals(&quot;Incorrect string output&quot;, &quot;(20, 19)&quot;, p.toString());&#10;  }&#10;&#10;  @Test&#10;  public void testPointMutateX() {&#10;    Point p = new Point(20, 19);&#10;    checkPoint(p, 20, 19);&#10;    Point q = p.mutateX(25);&#10;    checkPoint(p, 20, 19);&#10;    checkPoint(q, 25, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testPointMutateY() {&#10;    Point p = new Point(20, 19);&#10;    checkPoint(p, 20, 19);&#10;    Point q = p.mutateY(62);&#10;    checkPoint(p, 20, 19);&#10;    checkPoint(q, 20, 62);&#10;  }&#10;&#10;  @Test&#10;  public void testCornerPoints1() {&#10;    Spacecraft s = new Spacecraft(20, 18);&#10;    Point ll = s.lowerLeft();&#10;    checkPoint(ll, -10, -9);&#10;    Point ur = s.upperRight();&#10;    checkPoint(ur, 10, 9);&#10;  }&#10;&#10;  @Test&#10;  public void testCornerPoints2() {&#10;    Spacecraft s = new Spacecraft(261, 103);&#10;    Point ll = s.lowerLeft();&#10;    checkPoint(ll, -131, -52);&#10;    Point ur = s.upperRight();&#10;    checkPoint(ur, 131, 52);&#10;  }&#10;&#10;  @Test&#10;  public void testCornerPoints3() {&#10;    Spacecraft s = new Spacecraft(20, 18);&#10;    s.setPosition(261, 200);&#10;    Point ll = s.lowerLeft();&#10;    checkPoint(ll, 251, 191);&#10;    Point ur = s.upperRight();&#10;    checkPoint(ur, 271, 209);&#10;  }&#10;&#10;  @Test&#10;  public void testCornerPoints4() {&#10;    Spacecraft s = new Spacecraft(261, 103);&#10;    s.setPosition(261, 200);&#10;    Point ll = s.lowerLeft();&#10;    checkPoint(ll, 130, 148);&#10;    Point ur = s.upperRight();&#10;    checkPoint(ur, 392, 252);&#10;  }&#10;&#10;  @Test&#10;  public void testSpacecraftCount() {&#10;    int origCount = Spacecraft.count();&#10;    new Spacecraft();&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+1, Spacecraft.count());&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+1, Spacecraft.count());&#10;    new Spacecraft();&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+2, Spacecraft.count());&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+2, Spacecraft.count());&#10;    new Spacecraft(2562);&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+3, Spacecraft.count());&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+3, Spacecraft.count());&#10;    new Spacecraft(2019);&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+4, Spacecraft.count());&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+4, Spacecraft.count());&#10;    new Spacecraft(25, 47);&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+5, Spacecraft.count());&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+5, Spacecraft.count());&#10;    Spacecraft s = new Spacecraft(261, 200);&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+6, Spacecraft.count());&#10;    s.setPosition(25, 62);&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+6, Spacecraft.count());&#10;    s.setSize(17);&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+6, Spacecraft.count());&#10;    s.setSize(20, 19);&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+6, Spacecraft.count());&#10;    s.lowerLeft();&#10;    s.upperRight();&#10;    s.area();&#10;    s.perimeter();&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+6, Spacecraft.count());&#10;  }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1566707450000" />
                          </EduTask>
                          <EduTask>
                            <option name="customPresentableName" value="Derived class properties" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;p&gt;&#10;  Similar to derived (object) properties, classes can compute derived properties of their own.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  In our spacecraft game, one interesting property is called the &lt;em&gt;viewport&lt;/em&gt;, which is the rectangle that encompasses &lt;em&gt;all&lt;/em&gt; spacecrafts in the system.  If a spacecraft flies farther away from the rest, then the viewport gets bigger.  To simplify this problem, we will assume that the viewport only grows.  For instance, when the spacecraft at the corner of the universe flies back to the center of the universe, the viewport does not shrink.  On the other hand, if this spacecraft flies out even further, the viewport will have to expand.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  Once again, we can represent the viewport by its lower-left and upper-right points, like we did for the bounding box of a spacecraft.  With this design in mind, complete the implementation of the following methods in class &lt;code&gt;Spacecraft&lt;/code&gt;:&#10;&lt;/p&gt;&#10;&lt;ul&gt;&#10;  &lt;li&gt;&lt;code&gt;viewportLowerLeft()&lt;/code&gt;:&lt;/li&gt; returns the lower-left corner of the current viewport of the spacecraft system&#10;  &lt;li&gt;&lt;code&gt;viewportUpperRight()&lt;/code&gt;:&lt;/li&gt; returns the upper-right corner of the current viewport of the spacecraft system&#10;&lt;/ul&gt;&#10;&lt;p&gt;&#10;  As usual, you will need to modify existing code to make the computation of the viewport correct.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  We will assume that the viewport of the system without any spacecrafts is just the origin (0, 0).&#10;&lt;/p&gt;&#10;&#10;&lt;div class=&quot;hint&quot;&gt;&#10;  In the last lab, we can choose to compute the value of derived properties on the fly or cache it.  Can we do the same here, or do we need to do both?  What are the tradeoffs between the two approaches in this scenario?&#10;&lt;/div&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="805220" />
                            <option name="index" value="2" />
                            <option name="name" value="Derived class properties" />
                            <option name="record" value="-1" />
                            <option name="status" value="Unchecked" />
                            <option name="files">
                              <map>
                                <entry key="src/Spacecraft.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="30" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="true" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="26" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab04" />
                                                <option name="placeholderIndex" value="9" />
                                                <option name="sectionName" value="04-Class attributes" />
                                                <option name="taskName" value="Class attributes" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="62" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="26" />
                                            <option name="offset" value="32" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="2" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="144" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="26" />
                                            <option name="offset" value="114" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="3" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="233" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="false" />
                                            <option name="length" value="26" />
                                            <option name="offset" value="203" />
                                            <option name="placeholderDependency" />
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="true" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="4" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="48" />
                                                <option name="offset" value="271" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="true" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="237" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab04" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="04-Class attributes" />
                                                <option name="taskName" value="Class attributes" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="int x;&#10;    int y;&#10;    int width;&#10;    int height;" />
                                            <option name="possibleAnswer" value="int x;&#10;    int y;&#10;    int width;&#10;    int height;" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="5" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="325" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="true" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="239" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab04" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="04-Class attributes" />
                                                <option name="taskName" value="Class attributes" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="6" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="357" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="true" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="241" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab04" />
                                                <option name="placeholderIndex" value="2" />
                                                <option name="sectionName" value="04-Class attributes" />
                                                <option name="taskName" value="Class attributes" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="7" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="440" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="true" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="290" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab04" />
                                                <option name="placeholderIndex" value="3" />
                                                <option name="sectionName" value="04-Class attributes" />
                                                <option name="taskName" value="Class attributes" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="8" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="478" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="true" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="298" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab04" />
                                                <option name="placeholderIndex" value="4" />
                                                <option name="sectionName" value="04-Class attributes" />
                                                <option name="taskName" value="Class attributes" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="9" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="510" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="true" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="300" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab04" />
                                                <option name="placeholderIndex" value="5" />
                                                <option name="sectionName" value="04-Class attributes" />
                                                <option name="taskName" value="Class attributes" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="10" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="590" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="true" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="346" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab04" />
                                                <option name="placeholderIndex" value="6" />
                                                <option name="sectionName" value="04-Class attributes" />
                                                <option name="taskName" value="Class attributes" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="11" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="628" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="true" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="354" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab04" />
                                                <option name="placeholderIndex" value="7" />
                                                <option name="sectionName" value="04-Class attributes" />
                                                <option name="taskName" value="Class attributes" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="12" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="802" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="true" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="498" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Spacecraft.java" />
                                                <option name="lessonName" value="Lab04" />
                                                <option name="placeholderIndex" value="8" />
                                                <option name="sectionName" value="04-Class attributes" />
                                                <option name="taskName" value="Class attributes" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="true" />
                                      <option name="name" value="src/Spacecraft.java" />
                                      <option name="text" value="public class Spacecraft {&#10;    /* write your code here */&#10;&#10;    /* write your code here */&#10;&#10;    public static Point viewportLowerLeft() {&#10;        /* write your code here */&#10;    }&#10;&#10;    public static Point viewportUpperRight() {&#10;        /* write your code here */&#10;    }&#10;&#10;    int x;&#10;    int y;&#10;    int width;&#10;    int height;&#10;&#10;    /* write your code here */&#10;&#10;    /* write your code here */&#10;&#10;    public Spacecraft(int width, int height) {&#10;        /* write your code here */&#10;    }&#10;&#10;    /* write your code here */&#10;&#10;    /* write your code here */&#10;&#10;    public void setPosition(int x, int y) {&#10;        /* write your code here */&#10;    }&#10;&#10;    /* write your code here */&#10;&#10;    public String toString() {&#10;        return &quot;Spacecraft at position &quot; + pos + &quot;, with width &quot; + width() + &quot; and height &quot; + height();&#10;    }&#10;&#10;    /* write your code here */&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/Point.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="0" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="25" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="true" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="25" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab04" />
                                                <option name="placeholderIndex" value="0" />
                                                <option name="sectionName" value="04-Class attributes" />
                                                <option name="taskName" value="Class attributes" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="1" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="85" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="true" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="59" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab04" />
                                                <option name="placeholderIndex" value="1" />
                                                <option name="sectionName" value="04-Class attributes" />
                                                <option name="taskName" value="Class attributes" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="2" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="151" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="true" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="99" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab04" />
                                                <option name="placeholderIndex" value="2" />
                                                <option name="sectionName" value="04-Class attributes" />
                                                <option name="taskName" value="Class attributes" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="3" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="189" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="true" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="111" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab04" />
                                                <option name="placeholderIndex" value="3" />
                                                <option name="sectionName" value="04-Class attributes" />
                                                <option name="taskName" value="Class attributes" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                          <AnswerPlaceholder>
                                            <option name="hints">
                                              <list />
                                            </option>
                                            <option name="index" value="4" />
                                            <option name="initialState">
                                              <MyInitialState>
                                                <option name="length" value="26" />
                                                <option name="offset" value="221" />
                                              </MyInitialState>
                                            </option>
                                            <option name="initializedFromDependency" value="true" />
                                            <option name="length" value="0" />
                                            <option name="offset" value="117" />
                                            <option name="placeholderDependency">
                                              <AnswerPlaceholderDependency>
                                                <option name="fileName" value="src/Point.java" />
                                                <option name="lessonName" value="Lab04" />
                                                <option name="placeholderIndex" value="4" />
                                                <option name="sectionName" value="04-Class attributes" />
                                                <option name="taskName" value="Class attributes" />
                                                <option name="visible" value="false" />
                                              </AnswerPlaceholderDependency>
                                            </option>
                                            <option name="placeholderText" value="/* write your code here */" />
                                            <option name="possibleAnswer" value="/* write your code here */" />
                                            <option name="selected" value="false" />
                                            <option name="status" value="Unchecked" />
                                            <option name="studentAnswer" />
                                          </AnswerPlaceholder>
                                        </list>
                                      </option>
                                      <option name="highlightErrors" value="true" />
                                      <option name="name" value="src/Point.java" />
                                      <option name="text" value="public class Point {&#10;    /* write your code here */&#10;&#10;    public int getX() {&#10;        /* write your code here */&#10;    }&#10;&#10;    public int getY() {&#10;        /* write your code here */&#10;    }&#10;&#10;    /* write your code here */&#10;&#10;    /* write your code here */&#10;}&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/Main.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Main.java" />
                                      <option name="text" value="public class Main {&#10;    public static void main(String[] args) {&#10;        Spacecraft s1 = new Spacecraft(20, 19);&#10;        System.out.println(s1);&#10;    }&#10;}&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="test/Tests.java">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/Tests.java" />
                                      <option name="text" value="import org.junit.Assert;&#10;import org.junit.Test;&#10;&#10;public class Tests {&#10;  @Test&#10;  public void testDefaultConstructor() {&#10;    Spacecraft s = new Spacecraft();&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.position().getX() == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.position().getY() == 0);&#10;    Assert.assertTrue(&quot;Height should be equal to 1&quot;, s.height() == 1);&#10;    Assert.assertTrue(&quot;Width should be equal to 1&quot;, s.width() == 1);&#10;  }&#10;&#10;  protected void testSqConstructor(int side) {&#10;    Spacecraft s = new Spacecraft(side);&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.position().getX() == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.position().getY() == 0);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + side + &quot;), the height should be equal to &quot; + side, s.height() == side);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + side + &quot;), the width should be equal to &quot; + side, s.width() == side);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor1() {&#10;    testSqConstructor(1);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor62() {&#10;    testSqConstructor(62);&#10;  }&#10;&#10;  @Test&#10;  public void testSqConstructor200() {&#10;    testSqConstructor(200);&#10;  }&#10;&#10;  protected void testConstructor(int width, int height) {&#10;    Spacecraft s = new Spacecraft(width, height);&#10;    Assert.assertTrue(&quot;x-coordinate should be 0&quot;, s.position().getX() == 0);&#10;    Assert.assertTrue(&quot;y-coordinate should be 0&quot;, s.position().getY() == 0);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the height should be equal to &quot; + height, s.height() == height);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the width should be equal to &quot; + width, s.width() == width);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor1() {&#10;    testConstructor(1, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor2() {&#10;    testConstructor(1, 2);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor3() {&#10;    testConstructor(20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testConstructor4() {&#10;    testConstructor(261, 200);&#10;  }&#10;&#10;  protected void testArea(int width, int height) {&#10;    Spacecraft s = new Spacecraft(width, height);&#10;    int area = width * height;&#10;    Assert.assertEquals(&quot;Incorrect area for new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;)&quot;, area, s.area());&#10;  }&#10;&#10;  @Test&#10;  public void testArea1() {&#10;    testArea(1, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testArea2() {&#10;    testArea(1, 2);&#10;  }&#10;&#10;  @Test&#10;  public void testArea3() {&#10;    testArea(20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testArea4() {&#10;    testArea(261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testArea5() {&#10;    testArea(47, 47);&#10;  }&#10;&#10;  protected void testPerimeter(int width, int height) {&#10;    Spacecraft s = new Spacecraft(width, height);&#10;    int perimeter = (width + height) * 2;&#10;    Assert.assertEquals(&quot;Incorrect perimeter for new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;)&quot;, perimeter, s.perimeter());&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter1() {&#10;    testPerimeter(1, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter2() {&#10;    testPerimeter(1, 2);&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter3() {&#10;    testPerimeter(20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter4() {&#10;    testPerimeter(261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testPerimeter5() {&#10;    testPerimeter(47, 47);&#10;  }&#10;&#10;  protected void checkSpacecraft(Spacecraft s, int width, int height, int x, int y) {&#10;    Assert.assertTrue(&quot;For s.setPosition(&quot; + x + &quot;, &quot; + y + &quot;), the x-coordinate should be &quot; + x, s.position().getX() == x);&#10;    Assert.assertTrue(&quot;For s.setPosition(&quot; + x + &quot;, &quot; + y + &quot;), the y-coordinate should be &quot; + y, s.position().getY() == y);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the height should be equal to &quot; + height, s.height() == height);&#10;    Assert.assertTrue(&quot;For new Spacecraft(&quot; + width + &quot;, &quot; + height + &quot;), the width should be equal to &quot; + width, s.width() == width);&#10;  }&#10;&#10;  @Test&#10;  public void testSetPosition1() {&#10;    Spacecraft s = new Spacecraft();&#10;    checkSpacecraft(s, 1, 1, 0, 0);&#10;    s.setPosition(25, 47);&#10;    checkSpacecraft(s, 1, 1, 25, 47);&#10;    s.setPosition(20, 19);&#10;    checkSpacecraft(s, 1, 1, 20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testSetPosition2() {&#10;    Spacecraft s = new Spacecraft(17);&#10;    checkSpacecraft(s, 17, 17, 0, 0);&#10;    s.setPosition(25, 47);&#10;    checkSpacecraft(s, 17, 17, 25, 47);&#10;    s.setPosition(20, 19);&#10;    checkSpacecraft(s, 17, 17, 20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testSetPosition3() {&#10;    Spacecraft s = new Spacecraft(20, 19);&#10;    checkSpacecraft(s, 20, 19, 0, 0);&#10;    s.setPosition(25, 47);&#10;    checkSpacecraft(s, 20, 19, 25, 47);&#10;    s.setPosition(20, 19);&#10;    checkSpacecraft(s, 20, 19, 20, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize1() {&#10;    Spacecraft s = new Spacecraft();&#10;    s.setSize(47);&#10;    checkSpacecraft(s, 47, 47, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 47, 47, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize2() {&#10;    Spacecraft s = new Spacecraft(62);&#10;    s.setSize(47);&#10;    checkSpacecraft(s, 47, 47, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 47, 47, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize3() {&#10;    Spacecraft s = new Spacecraft(20, 19);&#10;    s.setSize(47);&#10;    checkSpacecraft(s, 47, 47, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 47, 47, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize4() {&#10;    Spacecraft s = new Spacecraft();&#10;    s.setSize(25, 47);&#10;    checkSpacecraft(s, 25, 47, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 25, 47, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize5() {&#10;    Spacecraft s = new Spacecraft(62);&#10;    s.setSize(20, 19);&#10;    checkSpacecraft(s, 20, 19, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 20, 19, 261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSetSize6() {&#10;    Spacecraft s = new Spacecraft(20, 19);&#10;    s.setSize(261, 200);&#10;    checkSpacecraft(s, 261, 200, 0, 0);&#10;    s.setPosition(261, 200);&#10;    checkSpacecraft(s, 261, 200, 261, 200);&#10;  }&#10;&#10;  protected void checkPoint(Point p, int x, int y)  {&#10;    Assert.assertEquals(&quot;Incorrect x-coordinate.&quot;, x, p.getX());&#10;    Assert.assertEquals(&quot;Incorrect y-coordinate.&quot;, y, p.getY());&#10;  }&#10;&#10;  protected void testPoint(int x, int y) {&#10;    Point p = new Point(x, y);&#10;    checkPoint(p, x, y);&#10;  }&#10;&#10;  @Test&#10;  public void testPoint1() {&#10;    testPoint(0, 0);&#10;  }&#10;&#10;  @Test&#10;  public void testPoint2() {&#10;    testPoint(0, 1);&#10;  }&#10;&#10;  @Test&#10;  public void testPoint3() {&#10;    testPoint(1, 0);&#10;  }&#10;&#10;  @Test&#10;  public void testPoint4() {&#10;    testPoint(261, 200);&#10;  }&#10;&#10;  @Test&#10;  public void testSpacecraftToString() {&#10;    Spacecraft s = new Spacecraft(25, 62);&#10;    s.setPosition(261, 200);&#10;    Assert.assertEquals(&quot;Incorrect string output&quot;, &quot;Spacecraft at position (261, 200), with width 25 and height 62&quot;, s.toString());&#10;  }&#10;&#10;  @Test&#10;  public void testPointToString() {&#10;    Point p = new Point(20, 19);&#10;    Assert.assertEquals(&quot;Incorrect string output&quot;, &quot;(20, 19)&quot;, p.toString());&#10;  }&#10;&#10;  @Test&#10;  public void testPointMutateX() {&#10;    Point p = new Point(20, 19);&#10;    checkPoint(p, 20, 19);&#10;    Point q = p.mutateX(25);&#10;    checkPoint(p, 20, 19);&#10;    checkPoint(q, 25, 19);&#10;  }&#10;&#10;  @Test&#10;  public void testPointMutateY() {&#10;    Point p = new Point(20, 19);&#10;    checkPoint(p, 20, 19);&#10;    Point q = p.mutateY(62);&#10;    checkPoint(p, 20, 19);&#10;    checkPoint(q, 20, 62);&#10;  }&#10;&#10;  @Test&#10;  public void testCornerPoints1() {&#10;    Spacecraft s = new Spacecraft(20, 18);&#10;    Point ll = s.lowerLeft();&#10;    checkPoint(ll, -10, -9);&#10;    Point ur = s.upperRight();&#10;    checkPoint(ur, 10, 9);&#10;  }&#10;&#10;  @Test&#10;  public void testCornerPoints2() {&#10;    Spacecraft s = new Spacecraft(261, 103);&#10;    Point ll = s.lowerLeft();&#10;    checkPoint(ll, -131, -52);&#10;    Point ur = s.upperRight();&#10;    checkPoint(ur, 131, 52);&#10;  }&#10;&#10;  @Test&#10;  public void testCornerPoints3() {&#10;    Spacecraft s = new Spacecraft(20, 18);&#10;    s.setPosition(261, 200);&#10;    Point ll = s.lowerLeft();&#10;    checkPoint(ll, 251, 191);&#10;    Point ur = s.upperRight();&#10;    checkPoint(ur, 271, 209);&#10;  }&#10;&#10;  @Test&#10;  public void testCornerPoints4() {&#10;    Spacecraft s = new Spacecraft(261, 103);&#10;    s.setPosition(261, 200);&#10;    Point ll = s.lowerLeft();&#10;    checkPoint(ll, 130, 148);&#10;    Point ur = s.upperRight();&#10;    checkPoint(ur, 392, 252);&#10;  }&#10;&#10;  @Test&#10;  public void testSpacecraftCount() {&#10;    int origCount = Spacecraft.count();&#10;    new Spacecraft();&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+1, Spacecraft.count());&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+1, Spacecraft.count());&#10;    new Spacecraft();&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+2, Spacecraft.count());&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+2, Spacecraft.count());&#10;    new Spacecraft(2562);&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+3, Spacecraft.count());&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+3, Spacecraft.count());&#10;    new Spacecraft(2019);&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+4, Spacecraft.count());&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+4, Spacecraft.count());&#10;    new Spacecraft(25, 47);&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+5, Spacecraft.count());&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+5, Spacecraft.count());&#10;    Spacecraft s = new Spacecraft(261, 200);&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+6, Spacecraft.count());&#10;    s.setPosition(25, 62);&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+6, Spacecraft.count());&#10;    s.setSize(17);&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+6, Spacecraft.count());&#10;    s.setSize(20, 19);&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+6, Spacecraft.count());&#10;    s.lowerLeft();&#10;    s.upperRight();&#10;    s.area();&#10;    s.perimeter();&#10;    Assert.assertEquals(&quot;Incorrect number of spacecrafts in the system&quot;,origCount+6, Spacecraft.count());&#10;  }&#10;&#10;  @Test&#10;  public void testViewport() {&#10;    Point ll = Spacecraft.viewportLowerLeft();&#10;    Point ur = Spacecraft.viewportUpperRight();&#10;    Spacecraft s = new Spacecraft();&#10;    Point ll_, ur_;&#10;&#10;    s.setPosition(ll.getX()-1, ll.getY());&#10;    ll_ = Spacecraft.viewportLowerLeft();&#10;    ur_ = Spacecraft.viewportUpperRight();&#10;    checkPoint(ll_, ll.getX()-1, ll.getY());&#10;    checkPoint(ur_, ur.getX(), ur.getY());&#10;&#10;    s.setPosition(ll.getX(), ll.getY()-2);&#10;    ll_ = Spacecraft.viewportLowerLeft();&#10;    ur_ = Spacecraft.viewportUpperRight();&#10;    checkPoint(ll_, ll.getX()-1, ll.getY()-2);&#10;    checkPoint(ur_, ur.getX(), ur.getY());&#10;&#10;    s.setPosition(ur.getX()+3, ur.getY());&#10;    ll_ = Spacecraft.viewportLowerLeft();&#10;    ur_ = Spacecraft.viewportUpperRight();&#10;    checkPoint(ll_, ll.getX()-1, ll.getY()-2);&#10;    checkPoint(ur_, ur.getX()+3, ur.getY());&#10;&#10;    s.setPosition(ur.getX(), ur.getY()+4);&#10;    ll_ = Spacecraft.viewportLowerLeft();&#10;    ur_ = Spacecraft.viewportUpperRight();&#10;    checkPoint(ll_, ll.getX()-1, ll.getY()-2);&#10;    checkPoint(ur_, ur.getX()+3, ur.getY()+4);&#10;&#10;    s.setPosition(ll.getX(), ll.getY());&#10;    ll_ = Spacecraft.viewportLowerLeft();&#10;    ur_ = Spacecraft.viewportUpperRight();&#10;    checkPoint(ll_, ll.getX()-1, ll.getY()-2);&#10;    checkPoint(ur_, ur.getX()+3, ur.getY()+4);&#10;&#10;    s.setPosition(ur.getX(), ur.getY());&#10;    ll_ = Spacecraft.viewportLowerLeft();&#10;    ur_ = Spacecraft.viewportUpperRight();&#10;    checkPoint(ll_, ll.getX()-1, ll.getY()-2);&#10;    checkPoint(ur_, ur.getX()+3, ur.getY()+4);&#10;  }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1566707469000" />
                          </EduTask>
                        </list>
                      </option>
                    </FrameworkLesson>
                  </list>
                </option>
              </Section>
            </list>
          </option>
        </EduCourse>
      </option>
    </StudyTaskManager>
  </component>
</project>